/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, EventEmitter, Input, Output } from '@angular/core';
import { notificationViewConfig } from './in-app-notification-data';
var InAppNotificationComponent = /** @class */ (function () {
    function InAppNotificationComponent() {
        this.notificationList = [];
        this.inAppNotificationConfig = notificationViewConfig;
        this.notificationClick = new EventEmitter();
        this.deleteNotificationClick = new EventEmitter();
        this.clearAllClick = new EventEmitter();
        this.showMore = new EventEmitter();
        this.showLess = new EventEmitter();
    }
    /**
     * @return {?}
     */
    InAppNotificationComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        this.displayItemCount = this.inAppNotificationConfig.minNotificationViewCount;
        console.log(this.notificationList);
    };
    /**
     * @param {?} event
     * @return {?}
     */
    InAppNotificationComponent.prototype.notificationClickHandler = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        console.log(this.notificationList);
        this.notificationClick.emit(event);
    };
    /**
     * @param {?} event
     * @return {?}
     */
    InAppNotificationComponent.prototype.deleteNotificationHandler = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        this.deleteNotificationClick.emit(event);
    };
    /**
     * @param {?} event
     * @return {?}
     */
    InAppNotificationComponent.prototype.clearAllNotifications = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        /** @type {?} */
        var eventData = {
            event: event,
            data: this.notificationList
        };
        this.clearAllClick.emit(eventData);
    };
    /**
     * @return {?}
     */
    InAppNotificationComponent.prototype.onShowMore = /**
     * @return {?}
     */
    function () {
        this.showMore.emit(true);
        if (this.notificationList.length) {
            this.displayItemCount = this.notificationList.length;
        }
    };
    /**
     * @return {?}
     */
    InAppNotificationComponent.prototype.onShowLess = /**
     * @return {?}
     */
    function () {
        this.showLess.emit(true);
        this.displayItemCount = this.inAppNotificationConfig.minNotificationViewCount;
    };
    InAppNotificationComponent.decorators = [
        { type: Component, args: [{
                    selector: 'sb-in-app-notification',
                    template: "<div class=\"sb-notification-container\">\r\n  <div class=\"sb-notification-header\">\r\n    <div class=\"title\" *ngIf=\"inAppNotificationConfig?.title\">{{inAppNotificationConfig?.title}}</div>\r\n    <div class=\"sub-title\" *ngIf=\"inAppNotificationConfig?.subTitle\">{{inAppNotificationConfig?.subTitle}}</div>\r\n  </div>\r\n  <div class=\"clear-text\" *ngIf=\"inAppNotificationConfig.clearText\">\r\n    <a (click)=\"clearAllNotifications($event)\">{{inAppNotificationConfig.clearText}}</a>\r\n  </div>\r\n  <div class=\"sb-notification-list-items\">\r\n    <div *ngFor=\"let notification of notificationList | slice:0:displayItemCount; let i=index\" >\r\n      <sb-notification-card [notification]=\"notification\" (notificationClick)=\"notificationClickHandler($event)\"\r\n      (deleteNotificationClick)=\"deleteNotificationHandler($event)\"></sb-notification-card>\r\n    </div>\r\n  </div>\r\n  <ng-container *ngIf=\"inAppNotificationConfig?.minNotificationViewCount < this.notificationList?.length\">\r\n    <div class=\"text-center more-text mt-16\" *ngIf=\"displayItemCount < this.notificationList?.length\">\r\n      <a (click)=\"onShowMore()\">{{inAppNotificationConfig?.moreText}}</a>\r\n    </div>\r\n    <div class=\"text-center more-text mt-16\" *ngIf=\"displayItemCount === this.notificationList?.length\">\r\n      <a (click)=\"onShowLess()\">{{inAppNotificationConfig?.lessText}}</a>\r\n    </div>\r\n  </ng-container>\r\n</div>",
                    styles: [":host .sb-notification-container .sb-notification-header{color:var(--gray)}:host .sb-notification-container .sb-notification-header .title{font-size:1rem;font-weight:700;margin-bottom:.25rem}:host .sb-notification-container .sb-notification-header .sub-title{font-size:.75rem;margin-bottom:1rem}:host .sb-notification-container .sb-notification-list-items{max-height:calc(100vh - 275px);overflow-y:auto}:host .sb-notification-container .clear-text a{color:var(--danger-color);font-size:.875rem;position:absolute;right:1.5rem;top:1.5rem;text-decoration:none}html[dir=rtl] :host .sb-notification-container .clear-text a{right:auto;left:1.5rem}:host .sb-notification-container .more-text a{font-size:.75rem;font-weight:700;cursor:pointer;color:var(--primary-400)}"]
                }] }
    ];
    /** @nocollapse */
    InAppNotificationComponent.ctorParameters = function () { return []; };
    InAppNotificationComponent.propDecorators = {
        notificationList: [{ type: Input }],
        inAppNotificationConfig: [{ type: Input }],
        notificationClick: [{ type: Output }],
        deleteNotificationClick: [{ type: Output }],
        clearAllClick: [{ type: Output }],
        showMore: [{ type: Output }],
        showLess: [{ type: Output }]
    };
    return InAppNotificationComponent;
}());
export { InAppNotificationComponent };
if (false) {
    /** @type {?} */
    InAppNotificationComponent.prototype.notificationList;
    /** @type {?} */
    InAppNotificationComponent.prototype.inAppNotificationConfig;
    /** @type {?} */
    InAppNotificationComponent.prototype.notificationClick;
    /** @type {?} */
    InAppNotificationComponent.prototype.deleteNotificationClick;
    /** @type {?} */
    InAppNotificationComponent.prototype.clearAllClick;
    /** @type {?} */
    InAppNotificationComponent.prototype.showMore;
    /** @type {?} */
    InAppNotificationComponent.prototype.showLess;
    /** @type {?} */
    InAppNotificationComponent.prototype.displayItemCount;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW4tYXBwLW5vdGlmaWNhdGlvbi5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AcHJvamVjdC1zdW5iaXJkL2NvbW1vbi1jb25zdW1wdGlvbi12OC8iLCJzb3VyY2VzIjpbImxpYi9sYXlvdXQvaW4tYXBwLW5vdGlmaWNhdGlvbi9pbi1hcHAtbm90aWZpY2F0aW9uLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxZQUFZLEVBQUUsS0FBSyxFQUFVLE1BQU0sRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUUvRSxPQUFPLEVBQUUsc0JBQXNCLEVBQUUsTUFBTSw0QkFBNEIsQ0FBQztBQUVwRTtJQWdCRTtRQVRTLHFCQUFnQixHQUFHLEVBQUUsQ0FBQztRQUN0Qiw0QkFBdUIsR0FBMkIsc0JBQXNCLENBQUM7UUFDeEUsc0JBQWlCLEdBQXNCLElBQUksWUFBWSxFQUFFLENBQUM7UUFDMUQsNEJBQXVCLEdBQXNCLElBQUksWUFBWSxFQUFFLENBQUM7UUFDaEUsa0JBQWEsR0FBc0IsSUFBSSxZQUFZLEVBQUUsQ0FBQztRQUN0RCxhQUFRLEdBQXNCLElBQUksWUFBWSxFQUFFLENBQUM7UUFDakQsYUFBUSxHQUFzQixJQUFJLFlBQVksRUFBRSxDQUFDO0lBRzNDLENBQUM7Ozs7SUFFakIsNkNBQVE7OztJQUFSO1FBQ0UsSUFBSSxDQUFDLGdCQUFnQixHQUFHLElBQUksQ0FBQyx1QkFBdUIsQ0FBQyx3QkFBd0IsQ0FBQztRQUM5RSxPQUFPLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxDQUFDO0lBQ3JDLENBQUM7Ozs7O0lBRUQsNkRBQXdCOzs7O0lBQXhCLFVBQXlCLEtBQUs7UUFDNUIsT0FBTyxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsZ0JBQWdCLENBQUMsQ0FBQztRQUNuQyxJQUFJLENBQUMsaUJBQWlCLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDO0lBQ3JDLENBQUM7Ozs7O0lBRUQsOERBQXlCOzs7O0lBQXpCLFVBQTBCLEtBQUs7UUFDN0IsSUFBSSxDQUFDLHVCQUF1QixDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUMzQyxDQUFDOzs7OztJQUVELDBEQUFxQjs7OztJQUFyQixVQUFzQixLQUFLOztZQUNuQixTQUFTLEdBQUc7WUFDaEIsS0FBSyxPQUFBO1lBQ0wsSUFBSSxFQUFFLElBQUksQ0FBQyxnQkFBZ0I7U0FDNUI7UUFDRCxJQUFJLENBQUMsYUFBYSxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsQ0FBQztJQUNyQyxDQUFDOzs7O0lBRUQsK0NBQVU7OztJQUFWO1FBQ0UsSUFBSSxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDekIsSUFBSSxJQUFJLENBQUMsZ0JBQWdCLENBQUMsTUFBTSxFQUFFO1lBQ2hDLElBQUksQ0FBQyxnQkFBZ0IsR0FBRyxJQUFJLENBQUMsZ0JBQWdCLENBQUMsTUFBTSxDQUFDO1NBQ3REO0lBQ0gsQ0FBQzs7OztJQUVELCtDQUFVOzs7SUFBVjtRQUNFLElBQUksQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQ3pCLElBQUksQ0FBQyxnQkFBZ0IsR0FBRyxJQUFJLENBQUMsdUJBQXVCLENBQUMsd0JBQXdCLENBQUM7SUFDaEYsQ0FBQzs7Z0JBbERGLFNBQVMsU0FBQztvQkFDVCxRQUFRLEVBQUUsd0JBQXdCO29CQUNsQyx5N0NBQW1EOztpQkFFcEQ7Ozs7O21DQUdFLEtBQUs7MENBQ0wsS0FBSztvQ0FDTCxNQUFNOzBDQUNOLE1BQU07Z0NBQ04sTUFBTTsyQkFDTixNQUFNOzJCQUNOLE1BQU07O0lBdUNULGlDQUFDO0NBQUEsQUFwREQsSUFvREM7U0EvQ1ksMEJBQTBCOzs7SUFFckMsc0RBQStCOztJQUMvQiw2REFBa0Y7O0lBQ2xGLHVEQUFvRTs7SUFDcEUsNkRBQTBFOztJQUMxRSxtREFBZ0U7O0lBQ2hFLDhDQUEyRDs7SUFDM0QsOENBQTJEOztJQUMzRCxzREFBeUIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIEV2ZW50RW1pdHRlciwgSW5wdXQsIE9uSW5pdCwgT3V0cHV0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IE5vdGlmaWNhdGlvblZpZXdDb25maWcgfSBmcm9tICcuLi8uLi9jYXJkL21vZGVscyc7XHJcbmltcG9ydCB7IG5vdGlmaWNhdGlvblZpZXdDb25maWcgfSBmcm9tICcuL2luLWFwcC1ub3RpZmljYXRpb24tZGF0YSc7XHJcblxyXG5AQ29tcG9uZW50KHtcclxuICBzZWxlY3RvcjogJ3NiLWluLWFwcC1ub3RpZmljYXRpb24nLFxyXG4gIHRlbXBsYXRlVXJsOiAnLi9pbi1hcHAtbm90aWZpY2F0aW9uLmNvbXBvbmVudC5odG1sJyxcclxuICBzdHlsZVVybHM6IFsnLi9pbi1hcHAtbm90aWZpY2F0aW9uLmNvbXBvbmVudC5zY3NzJ11cclxufSlcclxuZXhwb3J0IGNsYXNzIEluQXBwTm90aWZpY2F0aW9uQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0IHtcclxuXHJcbiAgQElucHV0KCkgbm90aWZpY2F0aW9uTGlzdCA9IFtdO1xyXG4gIEBJbnB1dCgpIGluQXBwTm90aWZpY2F0aW9uQ29uZmlnOiBOb3RpZmljYXRpb25WaWV3Q29uZmlnID0gbm90aWZpY2F0aW9uVmlld0NvbmZpZztcclxuICBAT3V0cHV0KCkgbm90aWZpY2F0aW9uQ2xpY2s6IEV2ZW50RW1pdHRlcjxhbnk+ID0gbmV3IEV2ZW50RW1pdHRlcigpO1xyXG4gIEBPdXRwdXQoKSBkZWxldGVOb3RpZmljYXRpb25DbGljazogRXZlbnRFbWl0dGVyPGFueT4gPSBuZXcgRXZlbnRFbWl0dGVyKCk7XHJcbiAgQE91dHB1dCgpIGNsZWFyQWxsQ2xpY2s6IEV2ZW50RW1pdHRlcjxhbnk+ID0gbmV3IEV2ZW50RW1pdHRlcigpO1xyXG4gIEBPdXRwdXQoKSBzaG93TW9yZTogRXZlbnRFbWl0dGVyPGFueT4gPSBuZXcgRXZlbnRFbWl0dGVyKCk7XHJcbiAgQE91dHB1dCgpIHNob3dMZXNzOiBFdmVudEVtaXR0ZXI8YW55PiA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcclxuICBkaXNwbGF5SXRlbUNvdW50OiBudW1iZXI7XHJcblxyXG4gIGNvbnN0cnVjdG9yKCkgeyB9XHJcblxyXG4gIG5nT25Jbml0KCkge1xyXG4gICAgdGhpcy5kaXNwbGF5SXRlbUNvdW50ID0gdGhpcy5pbkFwcE5vdGlmaWNhdGlvbkNvbmZpZy5taW5Ob3RpZmljYXRpb25WaWV3Q291bnQ7XHJcbiAgICBjb25zb2xlLmxvZyh0aGlzLm5vdGlmaWNhdGlvbkxpc3QpO1xyXG4gIH1cclxuXHJcbiAgbm90aWZpY2F0aW9uQ2xpY2tIYW5kbGVyKGV2ZW50KSB7XHJcbiAgICBjb25zb2xlLmxvZyh0aGlzLm5vdGlmaWNhdGlvbkxpc3QpO1xyXG4gICAgdGhpcy5ub3RpZmljYXRpb25DbGljay5lbWl0KGV2ZW50KTtcclxuICB9XHJcblxyXG4gIGRlbGV0ZU5vdGlmaWNhdGlvbkhhbmRsZXIoZXZlbnQpIHtcclxuICAgIHRoaXMuZGVsZXRlTm90aWZpY2F0aW9uQ2xpY2suZW1pdChldmVudCk7XHJcbiAgfVxyXG5cclxuICBjbGVhckFsbE5vdGlmaWNhdGlvbnMoZXZlbnQpIHtcclxuICAgIGNvbnN0IGV2ZW50RGF0YSA9IHtcclxuICAgICAgZXZlbnQsXHJcbiAgICAgIGRhdGE6IHRoaXMubm90aWZpY2F0aW9uTGlzdFxyXG4gICAgfTtcclxuICAgIHRoaXMuY2xlYXJBbGxDbGljay5lbWl0KGV2ZW50RGF0YSk7XHJcbiAgfVxyXG5cclxuICBvblNob3dNb3JlKCkge1xyXG4gICAgdGhpcy5zaG93TW9yZS5lbWl0KHRydWUpO1xyXG4gICAgaWYgKHRoaXMubm90aWZpY2F0aW9uTGlzdC5sZW5ndGgpIHtcclxuICAgICAgdGhpcy5kaXNwbGF5SXRlbUNvdW50ID0gdGhpcy5ub3RpZmljYXRpb25MaXN0Lmxlbmd0aDtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIG9uU2hvd0xlc3MoKSB7XHJcbiAgICB0aGlzLnNob3dMZXNzLmVtaXQodHJ1ZSk7XHJcbiAgICB0aGlzLmRpc3BsYXlJdGVtQ291bnQgPSB0aGlzLmluQXBwTm90aWZpY2F0aW9uQ29uZmlnLm1pbk5vdGlmaWNhdGlvblZpZXdDb3VudDtcclxuICB9XHJcblxyXG59XHJcbiJdfQ==