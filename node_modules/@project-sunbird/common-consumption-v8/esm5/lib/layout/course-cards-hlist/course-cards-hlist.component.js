/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input, Output, EventEmitter } from '@angular/core';
import { courseSection } from './course-section-data';
import { myCourses } from './my-courses-data';
import { CourseCardGridTypes, CourseCardTypes, ButtonPosition } from '../../card/models';
var CourseCardsHlistComponent = /** @class */ (function () {
    function CourseCardsHlistComponent() {
        /* Title for the grid */
        this.title = courseSection.name;
        /* Max card count to be shown */
        this.maxCardCount = 10;
        this.viewMoreButtonText = 'View More';
        /* Show Menu on each card */
        this.isMenu = false;
        this.viewMoreButtonPosition = ButtonPosition.TOP;
        this.viewMoreClick = new EventEmitter();
        this.cardClick = new EventEmitter();
        this.menuClick = new EventEmitter();
    }
    Object.defineProperty(CourseCardsHlistComponent.prototype, "ButtonPosition", {
        get: /**
         * @return {?}
         */
        function () { return ButtonPosition; },
        enumerable: true,
        configurable: true
    });
    /**
     * @return {?}
     */
    CourseCardsHlistComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        if (this.type != null) {
            if (this.type == CourseCardGridTypes.MY_COURSE_CARD_GRID ||
                this.type == CourseCardGridTypes.MY_COURSE_RECENTLY_VIEWED_CARD_GRID) {
                if (!(this.contentList != null)) {
                    this.contentList = myCourses.courses;
                }
            }
            else {
                if (!(this.contentList != null)) {
                    this.contentList = courseSection.contents;
                }
            }
        }
        else {
            this.type = CourseCardGridTypes.COURSE_CARD_GRID;
            if (!(this.contentList != null)) {
                this.contentList = courseSection.contents;
            }
        }
    };
    /**
     * @param {?} changes
     * @return {?}
     */
    CourseCardsHlistComponent.prototype.ngOnChanges = /**
     * @param {?} changes
     * @return {?}
     */
    function (changes) {
    };
    Object.defineProperty(CourseCardsHlistComponent.prototype, "CourseCardGridTypes", {
        get: /**
         * @return {?}
         */
        function () { return CourseCardGridTypes; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CourseCardsHlistComponent.prototype, "CourseCardTypes", {
        get: /**
         * @return {?}
         */
        function () { return CourseCardTypes; },
        enumerable: true,
        configurable: true
    });
    /**
     * Triggers event on `View More` Click
     * @param event HTML click event
     */
    /**
     * Triggers event on `View More` Click
     * @param {?} event HTML click event
     * @return {?}
     */
    CourseCardsHlistComponent.prototype.onViewMoreClick = /**
     * Triggers event on `View More` Click
     * @param {?} event HTML click event
     * @return {?}
     */
    function (event) {
        this.viewMoreClick.emit({ event: event, data: this.contentList });
    };
    /**
     * Triggers event on card click
     * @param event HTML Click event
     * @param data Content data for selected card
     */
    /**
     * Triggers event on card click
     * @param {?} event HTML Click event
     * @param {?} data Content data for selected card
     * @return {?}
     */
    CourseCardsHlistComponent.prototype.onCardClick = /**
     * Triggers event on card click
     * @param {?} event HTML Click event
     * @param {?} data Content data for selected card
     * @return {?}
     */
    function (event, data) {
        this.cardClick.emit({ event: event, data: data });
    };
    /**
     * @param {?} maxCardCounter
     * @return {?}
     */
    CourseCardsHlistComponent.prototype.range = /**
     * @param {?} maxCardCounter
     * @return {?}
     */
    function (maxCardCounter) {
        return new Array(maxCardCounter);
    };
    /**
     * @param {?} event
     * @return {?}
     */
    CourseCardsHlistComponent.prototype.onCardMenuClick = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        this.menuClick.emit(event);
    };
    CourseCardsHlistComponent.decorators = [
        { type: Component, args: [{
                    selector: 'sb-course-cards-hlist',
                    template: "<div class=\"layout-course\" *ngIf=\"!isLoading\">\r\n    <div class=\"header\">\r\n        <div class=\"title\">\r\n            {{title}}\r\n            <hr>\r\n        </div>\r\n        <button class=\"sb-btn sb-btn-normal sb-btn-outline-secondary sb-btn-white\"\r\n            *ngIf=\"contentList?.length > maxCardCount && viewMoreButtonPosition === ButtonPosition.TOP\"\r\n            (click)=\"onViewMoreClick($event)\">\r\n            {{viewMoreButtonText}}\r\n        </button>\r\n    </div>\r\n    <div class=\"sb--scrolling-wrapper-flexbox\" *ngIf=\"!multiRow\">\r\n      <div  *ngFor=\"let content of contentList | slice:0:(maxCardCount ? maxCardCount : contentList?.length); let index = index\" class=\"sb--card--container\">\r\n        <sb-course-card [course]=\"content\" (click)=\"onCardClick($event, content)\"  [cardImg]=\"content?.cardImg\" [section]=\"content?.info_to_display\" *ngIf=\"type === CourseCardGridTypes.COURSE_CARD_GRID\" [isMenu]=\"isMenu\"  (menuClick)=\"onCardMenuClick($event)\"></sb-course-card>\r\n        <sb-my-course-card [hideProgress]=\"hideProgress\" [course]=\"content\" (click)=\"onCardClick($event, content)\" [cardImg]=\"content?.cardImg\" [section]=\"content?.info_to_display\" *ngIf=\"type === CourseCardGridTypes.MY_COURSE_CARD_GRID\"></sb-my-course-card>\r\n        <sb-my-course-card [hideProgress]=\"hideProgress\" [course]=\"content\" (click)=\"onCardClick($event, content)\" [cardImg]=\"content?.cardImg\" [section]=\"content?.info_to_display\" [type]=\"CourseCardTypes.RECENTLY_VIEWED\" *ngIf=\"type === CourseCardGridTypes.MY_COURSE_RECENTLY_VIEWED_CARD_GRID\"></sb-my-course-card>\r\n        <sb-course-curiculum-card [cardData]=\"content\" [index]=\"index\" (click)=\"onCardClick($event, content)\" *ngIf=\"type === CourseCardGridTypes.CURICULUM_COURSE_CARD_GRID\"></sb-course-curiculum-card>\r\n      </div>\r\n      <div class=\"view-all\">\r\n        <button class=\"sb-btn sb-btn-normal sb-btn-outline-secondary sb-btn-white sb-btn-oval\" *ngIf=\"contentList?.length > maxCardCount && viewMoreButtonPosition === ButtonPosition.RIGHT\" (click)=\"onViewMoreClick($event)\">\r\n          {{viewMoreButtonText}}\r\n        </button>\r\n      </div>\r\n    </div>\r\n    <div class=\"sb--scrolling-wrapper-flexbox\" *ngIf=\"multiRow\">\r\n      <span *ngFor=\"let content of contentList | slice:0:(maxCardCount ? maxCardCount : contentList?.length); let index = index\">\r\n        <div *ngIf=\"index%2 == 0\"  class=\"sb--card--container\">\r\n            <sb-course-card class=\"sb--card--seperator\" *ngIf=\"contentList[index]!=null && type === CourseCardGridTypes.COURSE_CARD_GRID\" [course]=\"contentList[index]\" (click)=\"onCardClick($event, contentList[index])\"  [cardImg]=\"contentList[index]?.cardImg\" [section]=\"contentList[index]?.info_to_display\" [isMenu]=\"isMenu\"  (menuClick)=\"onCardMenuClick($event)\"></sb-course-card>\r\n            <sb-course-card class=\"sb--card--seperator\" *ngIf=\"index+1 < contentList.length && type === CourseCardGridTypes.COURSE_CARD_GRID\" [course]=\"contentList[index+1]\" (click)=\"onCardClick($event, contentList[index+1])\"  [cardImg]=\"contentList[index+1]?.cardImg\" [section]=\"contentList[index+1]?.info_to_display\"></sb-course-card>\r\n\r\n            <sb-my-course-card [hideProgress]=\"hideProgress\" class=\"sb--card--seperator\" *ngIf=\"contentList[index]!=null && type === CourseCardGridTypes.MY_COURSE_CARD_GRID\" [course]=\"contentList[index]\" (click)=\"onCardClick($event, contentList[index])\" [cardImg]=\"contentList[index]?.cardImg\" [section]=\"contentList[index]?.info_to_display\"></sb-my-course-card>\r\n            <sb-my-course-card [hideProgress]=\"hideProgress\" class=\"sb--card--seperator\" *ngIf=\"index+1 < contentList.length && type === CourseCardGridTypes.MY_COURSE_CARD_GRID\" [course]=\"contentList[index+1]\" (click)=\"onCardClick($event, contentList[index+1])\" [cardImg]=\"contentList[index+1]?.cardImg\" [section]=\"contentList[index+1]?.info_to_display\"></sb-my-course-card>\r\n            \r\n            <sb-my-course-card [hideProgress]=\"hideProgress\" class=\"sb--card--seperator\" *ngIf=\"contentList[index]!=null && type === CourseCardGridTypes.MY_COURSE_RECENTLY_VIEWED_CARD_GRID\" [course]=\"contentList[index]\" (click)=\"onCardClick($event, contentList[index])\" [cardImg]=\"contentList[index]?.cardImg\" [section]=\"contentList[index]?.info_to_display\" [type]=\"CourseCardTypes.RECENTLY_VIEWED\"></sb-my-course-card>\r\n            <sb-my-course-card [hideProgress]=\"hideProgress\" class=\"sb--card--seperator\" *ngIf=\"index+1 < contentList.length && type === CourseCardGridTypes.MY_COURSE_RECENTLY_VIEWED_CARD_GRID\" [course]=\"contentList[index+1]\" (click)=\"onCardClick($event, contentList[index+1])\" [cardImg]=\"contentList[index+1]?.cardImg\" [section]=\"contentList[index+1]?.info_to_display\" [type]=\"CourseCardTypes.RECENTLY_VIEWED\"></sb-my-course-card>\r\n        \r\n            <sb-course-curiculum-card class=\"sb--card--seperator\" [index]=\"index\" [cardData]=\"contentList[index]\" (click)=\"onCardClick($event, contentList[index])\" *ngIf=\"contentList[index]!=null && type === CourseCardGridTypes.CURICULUM_COURSE_CARD_GRID\"></sb-course-curiculum-card>\r\n            <sb-course-curiculum-card class=\"sb--card--seperator\" [index]=\"index+1\" [cardData]=\"contentList[index+1]\" (click)=\"onCardClick($event, contentList[index+1])\" *ngIf=\"index+1 < contentList.length && contentList[index+1]!=null && type === CourseCardGridTypes.CURICULUM_COURSE_CARD_GRID\"></sb-course-curiculum-card>\r\n       </div>\r\n      </span>\r\n      <div class=\"view-all\">\r\n        <button class=\"sb-btn sb-btn-normal sb-btn-outline-secondary sb-btn-white sb-btn-oval\" *ngIf=\"contentList?.length > maxCardCount && viewMoreButtonPosition === ButtonPosition.RIGHT\" (click)=\"onViewMoreClick($event)\">\r\n          {{viewMoreButtonText}}\r\n        </button>\r\n      </div>\r\n    </div>\r\n</div>\r\n<div class=\"layout-course\" *ngIf=\"isLoading\">\r\n    <div class=\"header\" style=\"width:120px;\">\r\n        <div class=\"title loading-animation sb--card--highlighter\">\r\n            \r\n        </div>\r\n    </div>\r\n    <div class=\"sb--scrolling-wrapper-flexbox\" *ngIf=\"maxCardCount > 0 && !multiRow\">\r\n        <div *ngFor=\"let content of range(maxCardCount); let i=index\" class=\"sb--card--container\">\r\n          <sb-course-card [isLoading]=\"isLoading\" *ngIf=\"type === CourseCardGridTypes.COURSE_CARD_GRID\"></sb-course-card>\r\n          <sb-my-course-card [hideProgress]=\"hideProgress\" [isLoading]=\"isLoading\" *ngIf=\"type === CourseCardGridTypes.MY_COURSE_CARD_GRID\"></sb-my-course-card>\r\n          <sb-my-course-card [hideProgress]=\"hideProgress\" [isLoading]=\"isLoading\" [type]=\"CourseCardTypes.RECENTLY_VIEWED\" *ngIf=\"type === CourseCardGridTypes.MY_COURSE_RECENTLY_VIEWED_CARD_GRID\"></sb-my-course-card>\r\n          <sb-course-curiculum-card [index]=\"i\" [isLoading]=\"isLoading\" *ngIf=\"type === CourseCardGridTypes.CURICULUM_COURSE_CARD_GRID\"></sb-course-curiculum-card>\r\n        </div>\r\n      </div>\r\n      <div class=\"sb--scrolling-wrapper-flexbox\" *ngIf=\"maxCardCount > 0 && multiRow\">\r\n          <div *ngFor=\"let content of range(maxCardCount); let i=index\" class=\"sb--card--container\">\r\n              <sb-course-card [isLoading]=\"isLoading\" *ngIf=\"type === CourseCardGridTypes.COURSE_CARD_GRID\"></sb-course-card>\r\n              <sb-course-card [isLoading]=\"isLoading\" *ngIf=\"type === CourseCardGridTypes.COURSE_CARD_GRID\"></sb-course-card>\r\n              <sb-my-course-card [hideProgress]=\"hideProgress\" [isLoading]=\"isLoading\" *ngIf=\"type === CourseCardGridTypes.MY_COURSE_CARD_GRID\"></sb-my-course-card>\r\n              <sb-my-course-card [hideProgress]=\"hideProgress\" [isLoading]=\"isLoading\" *ngIf=\"type === CourseCardGridTypes.MY_COURSE_CARD_GRID\"></sb-my-course-card>\r\n              <sb-my-course-card [hideProgress]=\"hideProgress\" [isLoading]=\"isLoading\" [type]=\"CourseCardTypes.RECENTLY_VIEWED\" *ngIf=\"type === CourseCardGridTypes.MY_COURSE_RECENTLY_VIEWED_CARD_GRID\"></sb-my-course-card>\r\n              <sb-my-course-card [hideProgress]=\"hideProgress\" [isLoading]=\"isLoading\" [type]=\"CourseCardTypes.RECENTLY_VIEWED\" *ngIf=\"type === CourseCardGridTypes.MY_COURSE_RECENTLY_VIEWED_CARD_GRID\"></sb-my-course-card>\r\n              <sb-course-curiculum-card [index]=\"i\" [isLoading]=\"isLoading\" *ngIf=\"type === CourseCardGridTypes.CURICULUM_COURSE_CARD_GRID\"></sb-course-curiculum-card>\r\n              <sb-course-curiculum-card [index]=\"i+1\" [isLoading]=\"isLoading\" *ngIf=\"type === CourseCardGridTypes.CURICULUM_COURSE_CARD_GRID\"></sb-course-curiculum-card>\r\n            </div>\r\n      </div>\r\n\r\n</div>",
                    styles: [".loading-animation{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-fill-mode:forwards;animation-fill-mode:forwards;-webkit-animation-iteration-count:infinite;animation-iteration-count:infinite;-webkit-animation-name:placeload;animation-name:placeload;-webkit-animation-timing-function:linear;animation-timing-function:linear;background:var(--lazyload-bg);background:var(--grey-nuance-lighter);background:linear-gradient(to right,var(--grey-nuance-lighter) 8%,var(--grey-nuance-darker) 18%,var(--grey-nuance-lighter) 33%);background-size:75rem 6.5rem;position:relative}@-webkit-keyframes placeload{0%{background-position:-29.25rem 0}100%{background-position:29.25rem 0}}@keyframes placeload{0%{background-position:-29.25rem 0}100%{background-position:29.25rem 0}}.sb--card--highlighter{height:.75rem;width:100%;margin-top:.3125rem}:host .layout-library{display:flex;flex-direction:column}:host .sb--scrolling-wrapper-flexbox{display:flex;flex-wrap:nowrap;overflow-x:auto;-webkit-overflow-scrolling:touch;padding-bottom:.5em}:host .sb--card--container{flex:0 0 auto;width:17.5rem;margin:0 .5rem 0 0}html[dir=rtl] :host .sb--card--container{margin-right:inherit;margin-left:1rem}:host .header{display:flex;flex-direction:row;padding:0;align-items:center}[dir=ltr] :host .header,[dir=rtl] :host .header{margin:.7rem 0 .5rem}:host .header .title{font-family:inherit;text-overflow:ellipsis;overflow:hidden;flex:1;height:1.5rem;color:var(--secondary-color);font-size:1.125rem;font-weight:700;text-transform:capitalize;line-height:1.625rem;display:flex;align-items:center}:host .header .title hr{flex:1;margin-left:1rem;display:none}:host .sb-btn-oval{border-radius:50%;padding:0;height:80%;top:10%}"]
                }] }
    ];
    /** @nocollapse */
    CourseCardsHlistComponent.ctorParameters = function () { return []; };
    CourseCardsHlistComponent.propDecorators = {
        title: [{ type: Input }],
        contentList: [{ type: Input }],
        maxCardCount: [{ type: Input }],
        viewMoreButtonText: [{ type: Input }],
        isLoading: [{ type: Input }],
        type: [{ type: Input }],
        multiRow: [{ type: Input }],
        hideProgress: [{ type: Input }],
        isMenu: [{ type: Input }],
        viewMoreButtonPosition: [{ type: Input }],
        viewMoreClick: [{ type: Output }],
        cardClick: [{ type: Output }],
        menuClick: [{ type: Output }]
    };
    return CourseCardsHlistComponent;
}());
export { CourseCardsHlistComponent };
if (false) {
    /** @type {?} */
    CourseCardsHlistComponent.prototype.title;
    /** @type {?} */
    CourseCardsHlistComponent.prototype.contentList;
    /** @type {?} */
    CourseCardsHlistComponent.prototype.maxCardCount;
    /** @type {?} */
    CourseCardsHlistComponent.prototype.viewMoreButtonText;
    /** @type {?} */
    CourseCardsHlistComponent.prototype.isLoading;
    /** @type {?} */
    CourseCardsHlistComponent.prototype.type;
    /** @type {?} */
    CourseCardsHlistComponent.prototype.multiRow;
    /** @type {?} */
    CourseCardsHlistComponent.prototype.hideProgress;
    /** @type {?} */
    CourseCardsHlistComponent.prototype.isMenu;
    /** @type {?} */
    CourseCardsHlistComponent.prototype.viewMoreButtonPosition;
    /** @type {?} */
    CourseCardsHlistComponent.prototype.viewMoreClick;
    /** @type {?} */
    CourseCardsHlistComponent.prototype.cardClick;
    /** @type {?} */
    CourseCardsHlistComponent.prototype.menuClick;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY291cnNlLWNhcmRzLWhsaXN0LmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0Bwcm9qZWN0LXN1bmJpcmQvY29tbW9uLWNvbnN1bXB0aW9uLXY4LyIsInNvdXJjZXMiOlsibGliL2xheW91dC9jb3Vyc2UtY2FyZHMtaGxpc3QvY291cnNlLWNhcmRzLWhsaXN0LmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBVSxLQUFLLEVBQUUsTUFBTSxFQUFFLFlBQVksRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUMvRSxPQUFPLEVBQUUsYUFBYSxFQUFFLE1BQU0sdUJBQXVCLENBQUM7QUFDdEQsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLG1CQUFtQixDQUFDO0FBQzlDLE9BQU8sRUFBVyxtQkFBbUIsRUFBRSxlQUFlLEVBQUUsY0FBYyxFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFHbEc7SUE0QkU7O1FBcEJVLFVBQUssR0FBVyxhQUFhLENBQUMsSUFBSSxDQUFDOztRQUduQyxpQkFBWSxHQUFHLEVBQUUsQ0FBQztRQUNsQix1QkFBa0IsR0FBRyxXQUFXLENBQUM7O1FBT2hDLFdBQU0sR0FBRyxLQUFLLENBQUM7UUFDZiwyQkFBc0IsR0FBbUIsY0FBYyxDQUFDLEdBQUcsQ0FBQTtRQUUzRCxrQkFBYSxHQUFpQyxJQUFJLFlBQVksRUFBa0IsQ0FBQztRQUNqRixjQUFTLEdBQTZCLElBQUksWUFBWSxFQUFjLENBQUM7UUFDckUsY0FBUyxHQUE2QixJQUFJLFlBQVksRUFBRSxDQUFDO0lBS3BFLENBQUM7SUFIQyxzQkFBSSxxREFBYzs7OztRQUFsQixjQUF1QixPQUFPLGNBQWMsQ0FBQyxDQUFDLENBQUM7OztPQUFBOzs7O0lBS2pELDRDQUFROzs7SUFBUjtRQUNFLElBQUcsSUFBSSxDQUFDLElBQUksSUFBRSxJQUFJLEVBQUU7WUFDaEIsSUFBRyxJQUFJLENBQUMsSUFBSSxJQUFJLG1CQUFtQixDQUFDLG1CQUFtQjtnQkFDbkQsSUFBSSxDQUFDLElBQUksSUFBSSxtQkFBbUIsQ0FBQyxtQ0FBbUMsRUFBRTtnQkFDdEUsSUFBRyxDQUFDLENBQUMsSUFBSSxDQUFDLFdBQVcsSUFBRSxJQUFJLENBQUMsRUFBRTtvQkFDMUIsSUFBSSxDQUFDLFdBQVcsR0FBRyxTQUFTLENBQUMsT0FBTyxDQUFDO2lCQUN4QzthQUVKO2lCQUFNO2dCQUNILElBQUcsQ0FBQyxDQUFDLElBQUksQ0FBQyxXQUFXLElBQUUsSUFBSSxDQUFDLEVBQUU7b0JBQzFCLElBQUksQ0FBQyxXQUFXLEdBQUcsYUFBYSxDQUFDLFFBQVEsQ0FBQztpQkFDN0M7YUFDSjtTQUNKO2FBQU07WUFDSCxJQUFJLENBQUMsSUFBSSxHQUFHLG1CQUFtQixDQUFDLGdCQUFnQixDQUFDO1lBQ2pELElBQUcsQ0FBQyxDQUFDLElBQUksQ0FBQyxXQUFXLElBQUUsSUFBSSxDQUFDLEVBQUU7Z0JBQzFCLElBQUksQ0FBQyxXQUFXLEdBQUcsYUFBYSxDQUFDLFFBQVEsQ0FBQzthQUM3QztTQUNKO0lBQ0gsQ0FBQzs7Ozs7SUFDRCwrQ0FBVzs7OztJQUFYLFVBQVksT0FBTztJQUNwQixDQUFDO0lBRUMsc0JBQUksMERBQW1COzs7O1FBQXZCLGNBQTRCLE9BQU8sbUJBQW1CLENBQUMsQ0FBQyxDQUFDOzs7T0FBQTtJQUN6RCxzQkFBSSxzREFBZTs7OztRQUFuQixjQUF3QixPQUFPLGVBQWUsQ0FBQyxDQUFDLENBQUM7OztPQUFBO0lBRWpEOzs7T0FHRzs7Ozs7O0lBQ0gsbURBQWU7Ozs7O0lBQWYsVUFBZ0IsS0FBaUI7UUFDN0IsSUFBSSxDQUFDLGFBQWEsQ0FBQyxJQUFJLENBQUMsRUFBRSxLQUFLLE9BQUEsRUFBRSxJQUFJLEVBQUUsSUFBSSxDQUFDLFdBQVcsRUFBRSxDQUFDLENBQUM7SUFDL0QsQ0FBQztJQUVEOzs7O09BSUc7Ozs7Ozs7SUFDSCwrQ0FBVzs7Ozs7O0lBQVgsVUFBWSxLQUFpQixFQUFFLElBQWE7UUFDeEMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsRUFBRSxLQUFLLE9BQUEsRUFBRSxJQUFJLE1BQUEsRUFBRSxDQUFDLENBQUM7SUFDekMsQ0FBQzs7Ozs7SUFFRCx5Q0FBSzs7OztJQUFMLFVBQU0sY0FBYztRQUNoQixPQUFRLElBQUksS0FBSyxDQUFDLGNBQWMsQ0FBQyxDQUFDO0lBQ3RDLENBQUM7Ozs7O0lBRUQsbURBQWU7Ozs7SUFBZixVQUFnQixLQUFLO1FBQ2pCLElBQUksQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDO0lBQy9CLENBQUM7O2dCQWhGSCxTQUFTLFNBQUM7b0JBQ1QsUUFBUSxFQUFFLHVCQUF1QjtvQkFDakMseW9SQUFrRDs7aUJBRW5EOzs7Ozt3QkFJRyxLQUFLOzhCQUNMLEtBQUs7K0JBRUwsS0FBSztxQ0FDTCxLQUFLOzRCQUNMLEtBQUs7dUJBQ0wsS0FBSzsyQkFDTCxLQUFLOytCQUNMLEtBQUs7eUJBR0osS0FBSzt5Q0FDTCxLQUFLO2dDQUVOLE1BQU07NEJBQ04sTUFBTTs0QkFDTixNQUFNOztJQTBEVixnQ0FBQztDQUFBLEFBbEZELElBa0ZDO1NBN0VZLHlCQUF5Qjs7O0lBR25DLDBDQUE0Qzs7SUFDNUMsZ0RBQTBCOztJQUUxQixpREFBMkI7O0lBQzNCLHVEQUEwQzs7SUFDMUMsOENBQTJCOztJQUMzQix5Q0FBa0M7O0lBQ2xDLDZDQUEwQjs7SUFDMUIsaURBQThCOztJQUc3QiwyQ0FBd0I7O0lBQ3hCLDJEQUFvRTs7SUFFckUsa0RBQTJGOztJQUMzRiw4Q0FBK0U7O0lBQy9FLDhDQUFtRSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgT25Jbml0LCBJbnB1dCwgT3V0cHV0LCBFdmVudEVtaXR0ZXIgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgY291cnNlU2VjdGlvbiB9IGZyb20gJy4vY291cnNlLXNlY3Rpb24tZGF0YSc7XHJcbmltcG9ydCB7IG15Q291cnNlcyB9IGZyb20gJy4vbXktY291cnNlcy1kYXRhJztcclxuaW1wb3J0IHsgSUNvdXJzZSwgQ291cnNlQ2FyZEdyaWRUeXBlcywgQ291cnNlQ2FyZFR5cGVzLCBCdXR0b25Qb3NpdGlvbiB9IGZyb20gJy4uLy4uL2NhcmQvbW9kZWxzJztcclxuaW1wb3J0IHsgSVZpZXdNb3JlQ2xpY2ssIElDYXJkQ2xpY2sgfSBmcm9tICcuLi9tb2RlbHMnO1xyXG5cclxuQENvbXBvbmVudCh7XHJcbiAgc2VsZWN0b3I6ICdzYi1jb3Vyc2UtY2FyZHMtaGxpc3QnLFxyXG4gIHRlbXBsYXRlVXJsOiAnLi9jb3Vyc2UtY2FyZHMtaGxpc3QuY29tcG9uZW50Lmh0bWwnLFxyXG4gIHN0eWxlVXJsczogWycuL2NvdXJzZS1jYXJkcy1obGlzdC5jb21wb25lbnQuc2NzcyddXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBDb3Vyc2VDYXJkc0hsaXN0Q29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0IHtcclxuXHJcbiAgICAvKiBUaXRsZSBmb3IgdGhlIGdyaWQgKi9cclxuICAgQElucHV0KCkgdGl0bGU6IHN0cmluZyA9IGNvdXJzZVNlY3Rpb24ubmFtZTtcclxuICAgQElucHV0KCkgY29udGVudExpc3Q6IGFueTtcclxuICAgLyogTWF4IGNhcmQgY291bnQgdG8gYmUgc2hvd24gKi9cclxuICAgQElucHV0KCkgbWF4Q2FyZENvdW50ID0gMTA7XHJcbiAgIEBJbnB1dCgpIHZpZXdNb3JlQnV0dG9uVGV4dCA9ICdWaWV3IE1vcmUnO1xyXG4gICBASW5wdXQoKSBpc0xvYWRpbmc6Ym9vbGVhbjtcclxuICAgQElucHV0KCkgdHlwZTpDb3Vyc2VDYXJkR3JpZFR5cGVzO1xyXG4gICBASW5wdXQoKSBtdWx0aVJvdzpib29sZWFuO1xyXG4gICBASW5wdXQoKSBoaWRlUHJvZ3Jlc3M6Ym9vbGVhbjtcclxuXHJcbiAgIC8qIFNob3cgTWVudSBvbiBlYWNoIGNhcmQgKi9cclxuICAgIEBJbnB1dCgpIGlzTWVudSA9IGZhbHNlO1xyXG4gICAgQElucHV0KCkgdmlld01vcmVCdXR0b25Qb3NpdGlvbjogQnV0dG9uUG9zaXRpb24gPSBCdXR0b25Qb3NpdGlvbi5UT1BcclxuXHJcbiAgIEBPdXRwdXQoKSB2aWV3TW9yZUNsaWNrOiBFdmVudEVtaXR0ZXI8SVZpZXdNb3JlQ2xpY2s+ID0gbmV3IEV2ZW50RW1pdHRlcjxJVmlld01vcmVDbGljaz4oKTtcclxuICAgQE91dHB1dCgpIGNhcmRDbGljazogRXZlbnRFbWl0dGVyPElDYXJkQ2xpY2s+ID0gbmV3IEV2ZW50RW1pdHRlcjxJQ2FyZENsaWNrPigpO1xyXG4gICBAT3V0cHV0KCkgbWVudUNsaWNrOiBFdmVudEVtaXR0ZXI8SUNhcmRDbGljaz4gPSBuZXcgRXZlbnRFbWl0dGVyKCk7XHJcblxyXG4gICAgZ2V0IEJ1dHRvblBvc2l0aW9uKCkgeyByZXR1cm4gQnV0dG9uUG9zaXRpb247IH1cclxuXHJcbiAgY29uc3RydWN0b3IoKSB7XHJcbiAgfVxyXG5cclxuICBuZ09uSW5pdCgpIHtcclxuICAgIGlmKHRoaXMudHlwZSE9bnVsbCkge1xyXG4gICAgICAgIGlmKHRoaXMudHlwZSA9PSBDb3Vyc2VDYXJkR3JpZFR5cGVzLk1ZX0NPVVJTRV9DQVJEX0dSSUQgfHwgXHJcbiAgICAgICAgICAgIHRoaXMudHlwZSA9PSBDb3Vyc2VDYXJkR3JpZFR5cGVzLk1ZX0NPVVJTRV9SRUNFTlRMWV9WSUVXRURfQ0FSRF9HUklEKSB7XHJcbiAgICAgICAgICAgIGlmKCEodGhpcy5jb250ZW50TGlzdCE9bnVsbCkpIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuY29udGVudExpc3QgPSBteUNvdXJzZXMuY291cnNlcztcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICBpZighKHRoaXMuY29udGVudExpc3QhPW51bGwpKSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmNvbnRlbnRMaXN0ID0gY291cnNlU2VjdGlvbi5jb250ZW50cztcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH0gZWxzZSB7XHJcbiAgICAgICAgdGhpcy50eXBlID0gQ291cnNlQ2FyZEdyaWRUeXBlcy5DT1VSU0VfQ0FSRF9HUklEO1xyXG4gICAgICAgIGlmKCEodGhpcy5jb250ZW50TGlzdCE9bnVsbCkpIHtcclxuICAgICAgICAgICAgdGhpcy5jb250ZW50TGlzdCA9IGNvdXJzZVNlY3Rpb24uY29udGVudHM7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gIH1cclxuICBuZ09uQ2hhbmdlcyhjaGFuZ2VzKSB7XHJcbiB9XHJcblxyXG4gICBnZXQgQ291cnNlQ2FyZEdyaWRUeXBlcygpIHsgcmV0dXJuIENvdXJzZUNhcmRHcmlkVHlwZXM7IH1cclxuICAgZ2V0IENvdXJzZUNhcmRUeXBlcygpIHsgcmV0dXJuIENvdXJzZUNhcmRUeXBlczsgfVxyXG5cclxuICAgLyoqXHJcbiAgICAqIFRyaWdnZXJzIGV2ZW50IG9uIGBWaWV3IE1vcmVgIENsaWNrXHJcbiAgICAqIEBwYXJhbSBldmVudCBIVE1MIGNsaWNrIGV2ZW50XHJcbiAgICAqL1xyXG4gICBvblZpZXdNb3JlQ2xpY2soZXZlbnQ6IE1vdXNlRXZlbnQpIHtcclxuICAgICAgIHRoaXMudmlld01vcmVDbGljay5lbWl0KHsgZXZlbnQsIGRhdGE6IHRoaXMuY29udGVudExpc3QgfSk7XHJcbiAgIH1cclxuXHJcbiAgIC8qKlxyXG4gICAgKiBUcmlnZ2VycyBldmVudCBvbiBjYXJkIGNsaWNrXHJcbiAgICAqIEBwYXJhbSBldmVudCBIVE1MIENsaWNrIGV2ZW50XHJcbiAgICAqIEBwYXJhbSBkYXRhIENvbnRlbnQgZGF0YSBmb3Igc2VsZWN0ZWQgY2FyZFxyXG4gICAgKi9cclxuICAgb25DYXJkQ2xpY2soZXZlbnQ6IE1vdXNlRXZlbnQsIGRhdGE6IElDb3Vyc2UpIHtcclxuICAgICAgIHRoaXMuY2FyZENsaWNrLmVtaXQoeyBldmVudCwgZGF0YSB9KTtcclxuICAgfVxyXG5cclxuICAgcmFuZ2UobWF4Q2FyZENvdW50ZXIpIHtcclxuICAgICAgIHJldHVybiAgbmV3IEFycmF5KG1heENhcmRDb3VudGVyKTtcclxuICAgfVxyXG5cclxuICAgb25DYXJkTWVudUNsaWNrKGV2ZW50KSB7XHJcbiAgICAgICB0aGlzLm1lbnVDbGljay5lbWl0KGV2ZW50KTtcclxuICAgfVxyXG5cclxufVxyXG4iXX0=