/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input, Output, EventEmitter, TemplateRef } from '@angular/core';
import { defaultLibraryCardsGrid } from '../library-cards.data';
import { LibraryCardTypes, ButtonPosition } from '../../card/models';
import { staticContent } from './library-cards-hlist.data';
var LibraryCardsHlistComponent = /** @class */ (function () {
    function LibraryCardsHlistComponent() {
        this.contentList = staticContent;
        this.viewMoreButtonText = defaultLibraryCardsGrid.viewMoreButtonText;
        this.maxCardCount = 10;
        this.isLoading = true;
        this.isMenu = false;
        this.isMobile = false;
        this.isOffline = false;
        this.type = LibraryCardTypes.DESKTOP_TEXTBOOK;
        this.moreInfoLabel = 'Medium';
        this.section = '';
        this.btnlabel = '';
        this.btnicon = '';
        this.isSelected = false;
        this.viewMoreButtonPosition = ButtonPosition.TOP;
        this.viewMoreClick = new EventEmitter();
        this.cardClick = new EventEmitter();
        this.menuClick = new EventEmitter();
    }
    Object.defineProperty(LibraryCardsHlistComponent.prototype, "LibraryCardTypes", {
        get: /**
         * @return {?}
         */
        function () { return LibraryCardTypes; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(LibraryCardsHlistComponent.prototype, "ButtonPosition", {
        get: /**
         * @return {?}
         */
        function () { return ButtonPosition; },
        enumerable: true,
        configurable: true
    });
    /**
     * @param {?} event
     * @return {?}
     */
    LibraryCardsHlistComponent.prototype.onViewMoreClick = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        this.viewMoreClick.emit(event);
    };
    /**
     * @param {?} event
     * @param {?} index
     * @return {?}
     */
    LibraryCardsHlistComponent.prototype.onCardClick = /**
     * @param {?} event
     * @param {?} index
     * @return {?}
     */
    function (event, index) {
        this.cardClick.emit({ 'data': event.data, 'index': index });
    };
    /**
     * @param {?} event
     * @return {?}
     */
    LibraryCardsHlistComponent.prototype.onMenuClick = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        this.menuClick.emit(event);
    };
    /**
     * @param {?} maxCardCounter
     * @return {?}
     */
    LibraryCardsHlistComponent.prototype.range = /**
     * @param {?} maxCardCounter
     * @return {?}
     */
    function (maxCardCounter) {
        return new Array(maxCardCounter);
    };
    LibraryCardsHlistComponent.decorators = [
        { type: Component, args: [{
                    selector: 'sb-library-cards-hlist',
                    template: "<div class=\"layout-course\" *ngIf=\"!isLoading\">\r\n    <div class=\"header\">\r\n        <div class=\"title\"> {{title}} <hr> </div>\r\n        <button class=\"sb-btn sb-btn-normal sb-btn-outline-secondary sb-btn-white\" *ngIf=\"contentList?.length > maxCardCount && viewMoreButtonPosition === ButtonPosition.TOP\" (click)=\"onViewMoreClick($event)\">\r\n            {{viewMoreButtonText}}\r\n        </button>\r\n    </div>\r\n\r\n    <div class=\"sb--scrolling-wrapper-flexbox\" *ngIf=\"!multiRow\">\r\n        <div *ngFor=\"let content of contentList | slice:0:(maxCardCount ? maxCardCount : contentList?.length); let index = index\" class=\"sb--card--container\">\r\n            <sb-library-card [indexToDisplay]=\"index\" [layoutConfig]=\"layoutConfig\" [content]=\"content\" [type]=\"type\" [isMobile]=\"isMobile\" [isOffline]=\"(isOffline && !content.isAvailableLocally)\" [moreInfoLabel]=\"moreInfoLabel\" [section]=\"section\" [btnlabel]=\"btnlabel\" [btnicon]=\"btnicon\" [isMenu]=\"isMenu\" [isSelected]=\"isSelected\" (cardClick)=\"onCardClick($event, index)\" (menuClick)=\"onMenuClick($event)\" [cardImg]=\"content?.cardImg || content?.contentData?.cardImg\"></sb-library-card>\r\n        </div>\r\n        <div class=\"view-all\">\r\n            <button class=\"sb-btn sb-btn-normal sb-btn-outline-secondary sb-btn-white sb-btn-oval\" *ngIf=\"contentList?.length > maxCardCount && viewMoreButtonPosition === ButtonPosition.RIGHT\" (click)=\"onViewMoreClick($event)\">\r\n                {{viewMoreButtonText}}\r\n            </button>\r\n        </div>\r\n    </div>\r\n    \r\n    <div class=\"sb--scrolling-wrapper-flexbox\" *ngIf=\"multiRow\">\r\n        <span *ngFor=\"let content of contentList | slice:0:(maxCardCount ? maxCardCount : contentList?.length); let index = index\">\r\n            <div *ngIf=\"index%2 == 0\" class=\"sb--card--container\">\r\n                <sb-library-card class=\"sb--card--seperator\" *ngIf=\"contentList[index]!=null\" [indexToDisplay]=\"index\" [layoutConfig]=\"layoutConfig\" [content]=\"contentList[index]\" [type]=\"type\" [isMobile]=\"isMobile\" [isOffline]=\"isOffline && !content.isAvailableLocally\" [moreInfoLabel]=\"moreInfoLabel\" [section]=\"section\" [btnlabel]=\"btnlabel\" [btnicon]=\"btnicon\" [isMenu]=\"isMenu\" [isSelected]=\"isSelected\" (cardClick)=\"onCardClick($event, index)\" (menuClick)=\"onMenuClick($event)\" [cardImg]=\"contentList[index]?.cardImg || contentList[index]?.contentData?.cardImg\"></sb-library-card>\r\n                <sb-library-card class=\"sb--card--seperator\" *ngIf=\"index+1 < contentList.length\" [indexToDisplay]=\"index+1\" [layoutConfig]=\"layoutConfig\" [content]=\"contentList[index+1]\" [type]=\"type\" [isMobile]=\"isMobile\" [isOffline]=\"isOffline && !content.isAvailableLocally\" [moreInfoLabel]=\"moreInfoLabel\" [section]=\"section\" [btnlabel]=\"btnlabel\" [btnicon]=\"btnicon\" [isMenu]=\"isMenu\" [isSelected]=\"isSelected\" (cardClick)=\"onCardClick($event, index+1)\" (menuClick)=\"onMenuClick($event)\" [cardImg]=\"contentList[index+1]?.cardImg || contentList[index+1]?.contentData?.cardImg\"></sb-library-card>\r\n            </div>\r\n        </span>\r\n        <div class=\"view-all\">\r\n            <button class=\"sb-btn sb-btn-normal sb-btn-outline-secondary sb-btn-white sb-btn-oval\" *ngIf=\"contentList?.length > maxCardCount && viewMoreButtonPosition === ButtonPosition.RIGHT\" (click)=\"onViewMoreClick($event)\">\r\n                {{viewMoreButtonText}}\r\n            </button>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"layout-course\" *ngIf=\"isLoading\">\r\n    <div class=\"header\" style=\"width:120px;\">\r\n        <div class=\"title loading-animation sb--card--highlighter\"></div>\r\n    </div>\r\n\r\n    <div class=\"sb--scrolling-wrapper-flexbox\" *ngIf=\"maxCardCount > 0 && !multiRow\">\r\n        <div *ngFor=\"let content of range(maxCardCount); let index=index\" class=\"sb--card--container\">\r\n            <sb-library-card [indexToDisplay]=\"index\" [isLoading]=\"isLoading\" [type]=\"type\"></sb-library-card>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"sb--scrolling-wrapper-flexbox\" *ngIf=\"maxCardCount > 0 && multiRow\">\r\n        <div *ngFor=\"let content of range(maxCardCount); let index=index\" class=\"sb--card--container\">\r\n            <sb-library-card [indexToDisplay]=\"index\" [isLoading]=\"isLoading\" [type]=\"type\"></sb-library-card>\r\n            <sb-library-card [indexToDisplay]=\"index\" [isLoading]=\"isLoading\" [type]=\"type\"></sb-library-card>\r\n        </div>\r\n    </div>\r\n\r\n</div>\r\n",
                    styles: [".loading-animation{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-fill-mode:forwards;animation-fill-mode:forwards;-webkit-animation-iteration-count:infinite;animation-iteration-count:infinite;-webkit-animation-name:placeload;animation-name:placeload;-webkit-animation-timing-function:linear;animation-timing-function:linear;background:var(--lazyload-bg);background:var(--grey-nuance-lighter);background:linear-gradient(to right,var(--grey-nuance-lighter) 8%,var(--grey-nuance-darker) 18%,var(--grey-nuance-lighter) 33%);background-size:75rem 6.5rem;position:relative}@-webkit-keyframes placeload{0%{background-position:-29.25rem 0}100%{background-position:29.25rem 0}}@keyframes placeload{0%{background-position:-29.25rem 0}100%{background-position:29.25rem 0}}.sb--card--highlighter{height:.75rem;width:100%;margin-top:.3125rem}:host .layout-library{display:flex;flex-direction:column}:host .sb--scrolling-wrapper-flexbox{display:flex;flex-wrap:nowrap;overflow-x:auto;-webkit-overflow-scrolling:touch;padding-bottom:.5em}:host .sb--card--container{flex:0 0 auto;width:17.5rem;margin:0 .5rem 0 0}html[dir=rtl] :host .sb--card--container{margin-right:inherit;margin-left:1rem}:host .header{display:flex;flex-direction:row;padding:0;align-items:center}[dir=ltr] :host .header,[dir=rtl] :host .header{margin:.7rem 0 .5rem}:host .header .title{font-family:inherit;text-overflow:ellipsis;overflow:hidden;flex:1;height:1.5rem;color:var(--black);font-size:1.125rem;font-weight:700;text-transform:capitalize;line-height:1.625rem;display:flex;align-items:center}:host .header .title hr{flex:1;margin-left:1rem;display:none}:host .sb-btn-oval{border-radius:50%;padding:0;height:80%;top:10%}"]
                }] }
    ];
    LibraryCardsHlistComponent.propDecorators = {
        contentList: [{ type: Input }],
        title: [{ type: Input }],
        viewMoreButtonText: [{ type: Input }],
        maxCardCount: [{ type: Input }],
        isLoading: [{ type: Input }],
        isMenu: [{ type: Input }],
        layoutConfig: [{ type: Input }],
        multiRow: [{ type: Input }],
        isMobile: [{ type: Input }],
        isOffline: [{ type: Input }],
        type: [{ type: Input }],
        moreInfoLabel: [{ type: Input }],
        section: [{ type: Input }],
        gridTemplate: [{ type: Input, args: ['hover-template',] }],
        btnlabel: [{ type: Input }],
        btnicon: [{ type: Input }],
        indexToDisplay: [{ type: Input }],
        isSelected: [{ type: Input }],
        viewMoreButtonPosition: [{ type: Input }],
        viewMoreClick: [{ type: Output }],
        cardClick: [{ type: Output }],
        menuClick: [{ type: Output }]
    };
    return LibraryCardsHlistComponent;
}());
export { LibraryCardsHlistComponent };
if (false) {
    /** @type {?} */
    LibraryCardsHlistComponent.prototype.contentList;
    /** @type {?} */
    LibraryCardsHlistComponent.prototype.title;
    /** @type {?} */
    LibraryCardsHlistComponent.prototype.viewMoreButtonText;
    /** @type {?} */
    LibraryCardsHlistComponent.prototype.maxCardCount;
    /** @type {?} */
    LibraryCardsHlistComponent.prototype.isLoading;
    /** @type {?} */
    LibraryCardsHlistComponent.prototype.isMenu;
    /** @type {?} */
    LibraryCardsHlistComponent.prototype.layoutConfig;
    /** @type {?} */
    LibraryCardsHlistComponent.prototype.multiRow;
    /** @type {?} */
    LibraryCardsHlistComponent.prototype.isMobile;
    /** @type {?} */
    LibraryCardsHlistComponent.prototype.isOffline;
    /** @type {?} */
    LibraryCardsHlistComponent.prototype.type;
    /** @type {?} */
    LibraryCardsHlistComponent.prototype.moreInfoLabel;
    /** @type {?} */
    LibraryCardsHlistComponent.prototype.section;
    /** @type {?} */
    LibraryCardsHlistComponent.prototype.gridTemplate;
    /** @type {?} */
    LibraryCardsHlistComponent.prototype.btnlabel;
    /** @type {?} */
    LibraryCardsHlistComponent.prototype.btnicon;
    /** @type {?} */
    LibraryCardsHlistComponent.prototype.indexToDisplay;
    /** @type {?} */
    LibraryCardsHlistComponent.prototype.isSelected;
    /** @type {?} */
    LibraryCardsHlistComponent.prototype.viewMoreButtonPosition;
    /** @type {?} */
    LibraryCardsHlistComponent.prototype.viewMoreClick;
    /** @type {?} */
    LibraryCardsHlistComponent.prototype.cardClick;
    /** @type {?} */
    LibraryCardsHlistComponent.prototype.menuClick;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGlicmFyeS1jYXJkcy1obGlzdC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AcHJvamVjdC1zdW5iaXJkL2NvbW1vbi1jb25zdW1wdGlvbi12OC8iLCJzb3VyY2VzIjpbImxpYi9sYXlvdXQvbGlicmFyeS1jYXJkcy1obGlzdC9saWJyYXJ5LWNhcmRzLWhsaXN0LmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBVSxLQUFLLEVBQUUsTUFBTSxFQUFFLFlBQVksRUFBRSxXQUFXLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDNUYsT0FBTyxFQUFFLHVCQUF1QixFQUFFLE1BQU0sdUJBQXVCLENBQUM7QUFDaEUsT0FBTyxFQUFFLGdCQUFnQixFQUFjLGNBQWMsRUFBRSxNQUFNLG1CQUFtQixDQUFDO0FBQ2pGLE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSw0QkFBNEIsQ0FBQztBQUUzRDtJQUFBO1FBT2EsZ0JBQVcsR0FBRyxhQUFhLENBQUM7UUFFNUIsdUJBQWtCLEdBQVcsdUJBQXVCLENBQUMsa0JBQWtCLENBQUM7UUFDeEUsaUJBQVksR0FBVyxFQUFFLENBQUM7UUFDMUIsY0FBUyxHQUFZLElBQUksQ0FBQztRQUMxQixXQUFNLEdBQVksS0FBSyxDQUFDO1FBSXhCLGFBQVEsR0FBRyxLQUFLLENBQUM7UUFDakIsY0FBUyxHQUFHLEtBQUssQ0FBQztRQUNsQixTQUFJLEdBQXFCLGdCQUFnQixDQUFDLGdCQUFnQixDQUFDO1FBQzNELGtCQUFhLEdBQUcsUUFBUSxDQUFDO1FBQ3pCLFlBQU8sR0FBRyxFQUFFLENBQUM7UUFFYixhQUFRLEdBQUcsRUFBRSxDQUFDO1FBQ2QsWUFBTyxHQUFHLEVBQUUsQ0FBQztRQUViLGVBQVUsR0FBRyxLQUFLLENBQUM7UUFDbkIsMkJBQXNCLEdBQW1CLGNBQWMsQ0FBQyxHQUFHLENBQUE7UUFFMUQsa0JBQWEsR0FBNkIsSUFBSSxZQUFZLEVBQUUsQ0FBQztRQUM3RCxjQUFTLEdBQXNCLElBQUksWUFBWSxFQUFFLENBQUM7UUFDbEQsY0FBUyxHQUFzQixJQUFJLFlBQVksRUFBRSxDQUFDO0lBcUJoRSxDQUFDO0lBbkJHLHNCQUFJLHdEQUFnQjs7OztRQUFwQixjQUF5QixPQUFPLGdCQUFnQixDQUFDLENBQUMsQ0FBQzs7O09BQUE7SUFDbkQsc0JBQUksc0RBQWM7Ozs7UUFBbEIsY0FBdUIsT0FBTyxjQUFjLENBQUMsQ0FBQyxDQUFDOzs7T0FBQTs7Ozs7SUFFL0Msb0RBQWU7Ozs7SUFBZixVQUFnQixLQUFLO1FBQ2pCLElBQUksQ0FBQyxhQUFhLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDO0lBQ25DLENBQUM7Ozs7OztJQUVELGdEQUFXOzs7OztJQUFYLFVBQVksS0FBSyxFQUFFLEtBQUs7UUFDcEIsSUFBSSxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsRUFBRSxNQUFNLEVBQUUsS0FBSyxDQUFDLElBQUksRUFBRSxPQUFPLEVBQUUsS0FBSyxFQUFFLENBQUMsQ0FBQztJQUNoRSxDQUFDOzs7OztJQUVELGdEQUFXOzs7O0lBQVgsVUFBWSxLQUFpQjtRQUN6QixJQUFJLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUMvQixDQUFDOzs7OztJQUVELDBDQUFLOzs7O0lBQUwsVUFBTSxjQUFjO1FBQ2hCLE9BQVEsSUFBSSxLQUFLLENBQUMsY0FBYyxDQUFDLENBQUM7SUFDdEMsQ0FBQzs7Z0JBakRKLFNBQVMsU0FBQztvQkFDUCxRQUFRLEVBQUUsd0JBQXdCO29CQUNsQyxzaEpBQW1EOztpQkFFdEQ7Ozs4QkFHSSxLQUFLO3dCQUNMLEtBQUs7cUNBQ0wsS0FBSzsrQkFDTCxLQUFLOzRCQUNMLEtBQUs7eUJBQ0wsS0FBSzsrQkFDTCxLQUFLOzJCQUNMLEtBQUs7MkJBRUwsS0FBSzs0QkFDTCxLQUFLO3VCQUNMLEtBQUs7Z0NBQ0wsS0FBSzswQkFDTCxLQUFLOytCQUNMLEtBQUssU0FBQyxnQkFBZ0I7MkJBQ3RCLEtBQUs7MEJBQ0wsS0FBSztpQ0FDTCxLQUFLOzZCQUNMLEtBQUs7eUNBQ0wsS0FBSztnQ0FFTCxNQUFNOzRCQUNOLE1BQU07NEJBQ04sTUFBTTs7SUFxQlgsaUNBQUM7Q0FBQSxBQW5ERCxJQW1EQztTQTdDWSwwQkFBMEI7OztJQUNuQyxpREFBcUM7O0lBQ3JDLDJDQUF1Qjs7SUFDdkIsd0RBQWlGOztJQUNqRixrREFBbUM7O0lBQ25DLCtDQUFtQzs7SUFDbkMsNENBQWlDOztJQUNqQyxrREFBMkI7O0lBQzNCLDhDQUF3Qjs7SUFFeEIsOENBQTBCOztJQUMxQiwrQ0FBMkI7O0lBQzNCLDBDQUFvRTs7SUFDcEUsbURBQWtDOztJQUNsQyw2Q0FBc0I7O0lBQ3RCLGtEQUF3RDs7SUFDeEQsOENBQXVCOztJQUN2Qiw2Q0FBc0I7O0lBQ3RCLG9EQUErQjs7SUFDL0IsZ0RBQTRCOztJQUM1Qiw0REFBb0U7O0lBRXBFLG1EQUF1RTs7SUFDdkUsK0NBQTREOztJQUM1RCwrQ0FBNEQiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIE9uSW5pdCwgSW5wdXQsIE91dHB1dCwgRXZlbnRFbWl0dGVyLCBUZW1wbGF0ZVJlZiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBkZWZhdWx0TGlicmFyeUNhcmRzR3JpZCB9IGZyb20gJy4uL2xpYnJhcnktY2FyZHMuZGF0YSc7XHJcbmltcG9ydCB7IExpYnJhcnlDYXJkVHlwZXMsIElDYXJkQ2xpY2ssIEJ1dHRvblBvc2l0aW9uIH0gZnJvbSAnLi4vLi4vY2FyZC9tb2RlbHMnO1xyXG5pbXBvcnQgeyBzdGF0aWNDb250ZW50IH0gZnJvbSAnLi9saWJyYXJ5LWNhcmRzLWhsaXN0LmRhdGEnO1xyXG5cclxuQENvbXBvbmVudCh7XHJcbiAgICBzZWxlY3RvcjogJ3NiLWxpYnJhcnktY2FyZHMtaGxpc3QnLFxyXG4gICAgdGVtcGxhdGVVcmw6ICcuL2xpYnJhcnktY2FyZHMtaGxpc3QuY29tcG9uZW50Lmh0bWwnLFxyXG4gICAgc3R5bGVVcmxzOiBbJy4vbGlicmFyeS1jYXJkcy1obGlzdC5jb21wb25lbnQuc2NzcyddXHJcbn0pXHJcblxyXG5leHBvcnQgY2xhc3MgTGlicmFyeUNhcmRzSGxpc3RDb21wb25lbnQge1xyXG4gICAgQElucHV0KCkgY29udGVudExpc3QgPSBzdGF0aWNDb250ZW50O1xyXG4gICAgQElucHV0KCkgdGl0bGU6IHN0cmluZztcclxuICAgIEBJbnB1dCgpIHZpZXdNb3JlQnV0dG9uVGV4dDogc3RyaW5nID0gZGVmYXVsdExpYnJhcnlDYXJkc0dyaWQudmlld01vcmVCdXR0b25UZXh0O1xyXG4gICAgQElucHV0KCkgbWF4Q2FyZENvdW50OiBudW1iZXIgPSAxMDtcclxuICAgIEBJbnB1dCgpIGlzTG9hZGluZzogYm9vbGVhbiA9IHRydWU7XHJcbiAgICBASW5wdXQoKSBpc01lbnU6IGJvb2xlYW4gPSBmYWxzZTtcclxuICAgIEBJbnB1dCgpIGxheW91dENvbmZpZzogYW55O1xyXG4gICAgQElucHV0KCkgbXVsdGlSb3c6IGZhbHNlXHJcblxyXG4gICAgQElucHV0KCkgaXNNb2JpbGUgPSBmYWxzZTtcclxuICAgIEBJbnB1dCgpIGlzT2ZmbGluZSA9IGZhbHNlO1xyXG4gICAgQElucHV0KCkgdHlwZTogTGlicmFyeUNhcmRUeXBlcyA9IExpYnJhcnlDYXJkVHlwZXMuREVTS1RPUF9URVhUQk9PSztcclxuICAgIEBJbnB1dCgpIG1vcmVJbmZvTGFiZWwgPSAnTWVkaXVtJztcclxuICAgIEBJbnB1dCgpIHNlY3Rpb24gPSAnJztcclxuICAgIEBJbnB1dCgnaG92ZXItdGVtcGxhdGUnKSBncmlkVGVtcGxhdGU6IFRlbXBsYXRlUmVmPGFueT47XHJcbiAgICBASW5wdXQoKSBidG5sYWJlbCA9ICcnO1xyXG4gICAgQElucHV0KCkgYnRuaWNvbiA9ICcnO1xyXG4gICAgQElucHV0KCkgaW5kZXhUb0Rpc3BsYXk6bnVtYmVyO1xyXG4gICAgQElucHV0KCkgaXNTZWxlY3RlZCA9IGZhbHNlO1xyXG4gICAgQElucHV0KCkgdmlld01vcmVCdXR0b25Qb3NpdGlvbjogQnV0dG9uUG9zaXRpb24gPSBCdXR0b25Qb3NpdGlvbi5UT1BcclxuXHJcbiAgICBAT3V0cHV0KCkgdmlld01vcmVDbGljazogRXZlbnRFbWl0dGVyPE1vdXNlRXZlbnQ+ID0gbmV3IEV2ZW50RW1pdHRlcigpO1xyXG4gICAgQE91dHB1dCgpIGNhcmRDbGljazogRXZlbnRFbWl0dGVyPGFueT4gPSBuZXcgRXZlbnRFbWl0dGVyKCk7XHJcbiAgICBAT3V0cHV0KCkgbWVudUNsaWNrOiBFdmVudEVtaXR0ZXI8YW55PiA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcclxuXHJcbiAgICBnZXQgTGlicmFyeUNhcmRUeXBlcygpIHsgcmV0dXJuIExpYnJhcnlDYXJkVHlwZXM7IH1cclxuICAgIGdldCBCdXR0b25Qb3NpdGlvbigpIHsgcmV0dXJuIEJ1dHRvblBvc2l0aW9uOyB9XHJcblxyXG4gICAgb25WaWV3TW9yZUNsaWNrKGV2ZW50KSB7XHJcbiAgICAgICAgdGhpcy52aWV3TW9yZUNsaWNrLmVtaXQoZXZlbnQpO1xyXG4gICAgfVxyXG5cclxuICAgIG9uQ2FyZENsaWNrKGV2ZW50LCBpbmRleCkge1xyXG4gICAgICAgIHRoaXMuY2FyZENsaWNrLmVtaXQoeyAnZGF0YSc6IGV2ZW50LmRhdGEsICdpbmRleCc6IGluZGV4IH0pO1xyXG4gICAgfVxyXG5cclxuICAgIG9uTWVudUNsaWNrKGV2ZW50OiBJQ2FyZENsaWNrKSB7XHJcbiAgICAgICAgdGhpcy5tZW51Q2xpY2suZW1pdChldmVudCk7XHJcbiAgICB9XHJcblxyXG4gICAgcmFuZ2UobWF4Q2FyZENvdW50ZXIpIHtcclxuICAgICAgICByZXR1cm4gIG5ldyBBcnJheShtYXhDYXJkQ291bnRlcik7XHJcbiAgICB9XHJcblxyXG59XHJcbiJdfQ==