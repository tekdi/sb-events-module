/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input, Output, TemplateRef, EventEmitter } from '@angular/core';
import { defaultLibraryCardsGrid } from '../library-cards.data';
import { LibraryCardTypes, CardGridTypes } from '../../card/models';
var CardsGridComponent = /** @class */ (function () {
    function CardsGridComponent() {
        /* Title for the grid */
        this.title = defaultLibraryCardsGrid.title;
        this.contentList = defaultLibraryCardsGrid.contentList;
        this.hoverData = [];
        this.cardType = "textbook";
        /* Max card count to be shown */
        this.maxCardCount = defaultLibraryCardsGrid.maxCardCount;
        this.viewMoreButtonText = defaultLibraryCardsGrid.viewMoreButtonText;
        this.isMenu = false;
        this.viewMoreClick = new EventEmitter();
        this.menuClick = new EventEmitter();
        this.cardClick = new EventEmitter();
        this.hoverActionClick = new EventEmitter();
    }
    Object.defineProperty(CardsGridComponent.prototype, "LibraryCardTypes", {
        get: /**
         * @return {?}
         */
        function () { return LibraryCardTypes; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CardsGridComponent.prototype, "CardGridTypes", {
        get: /**
         * @return {?}
         */
        function () { return CardGridTypes; },
        enumerable: true,
        configurable: true
    });
    /**
     * Triggers event on `View More` Click
     * @param event HTML click event
     */
    /**
     * Triggers event on `View More` Click
     * @param {?} event HTML click event
     * @return {?}
     */
    CardsGridComponent.prototype.onViewMoreClick = /**
     * Triggers event on `View More` Click
     * @param {?} event HTML click event
     * @return {?}
     */
    function (event) {
        this.viewMoreClick.emit({ event: event, data: this.contentList });
    };
    /**
     * Triggers event on card click
     * @param event HTML Click event
     * @param data Content data for selected card
     */
    /**
     * Triggers event on card click
     * @param {?} event HTML Click event
     * @param {?} data Content data for selected card
     * @return {?}
     */
    CardsGridComponent.prototype.onCardClick = /**
     * Triggers event on card click
     * @param {?} event HTML Click event
     * @param {?} data Content data for selected card
     * @return {?}
     */
    function (event, data) {
        this.cardClick.emit({ event: event, data: data });
    };
    /**
     * @param {?} event
     * @param {?} data
     * @return {?}
     */
    CardsGridComponent.prototype.onMenuClick = /**
     * @param {?} event
     * @param {?} data
     * @return {?}
     */
    function (event, data) {
        this.menuClick.emit({ event: event, data: data });
    };
    /**
     * @param {?} event
     * @return {?}
     */
    CardsGridComponent.prototype.hoverActionClicked = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        this.hoverActionClick.emit(event);
    };
    /**
     * @param {?} maxCardCounter
     * @return {?}
     */
    CardsGridComponent.prototype.range = /**
     * @param {?} maxCardCounter
     * @return {?}
     */
    function (maxCardCounter) {
        return new Array(maxCardCounter);
    };
    CardsGridComponent.decorators = [
        { type: Component, args: [{
                    selector: 'sb-cards-grid',
                    template: "<div class=\"layout-library\" *ngIf=\"!isLoading\">\r\n    <div class=\"header\">\r\n        <div class=\"title\">\r\n            <i class=\"icon-svg icon-svg--sm\">\r\n                <svg class=\"icon\">\r\n                    <use xlink:href=\"assets/common-consumption/images/sprite.svg#book\"></use>\r\n                </svg>\r\n            </i>\r\n            {{title}}\r\n            <span class=\"badge\">{{contentList?.length}}</span>\r\n        </div>\r\n        <button class=\"sb-btn sb-btn-normal sb-btn-outline-secondary sb-btn-white\"\r\n            *ngIf=\"(type !== CardGridTypes.INFINITE_CARD_GRID) && maxCardCount && contentList?.length >maxCardCount\"\r\n            (click)=\"onViewMoreClick($event)\">\r\n            {{viewMoreButtonText}}\r\n        </button>\r\n    </div>\r\n\r\n\r\n    <div class=\"cards-container\"\r\n        *ngIf=\"type !== CardGridTypes.INFINITE_CARD_GRID\">\r\n        <div class=\"item\" [ngClass]=\"maxCardCount ? 'show-' + maxCardCount: ''\"\r\n            *ngFor=\"let content of contentList | slice:0:(maxCardCount ? maxCardCount : contentList?.length);let i=index\">\r\n            <sb-library-card [indexToDisplay]=\"i\" [layoutConfig]=\"layoutConfig\" *ngIf=\"cardType === 'textbook'\" (menuClick)=\"onMenuClick($event, content)\" [isMenu]=\"isMenu\" [content]=\"content\" [type]=\"LibraryCardTypes.DESKTOP_TEXTBOOK\"\r\n                (click)=\"onCardClick($event, content)\" [cardImg]=\"content?.cardImg\">\r\n            </sb-library-card>\r\n            <sb-course-card [course]=\"content\" (menuClick)=\"onMenuClick($event, content)\" [isMenu]=\"isMenu\" (click)=\"onCardClick($event, content)\"  \r\n            [cardImg]=\"content?.cardImg\" [section]=\"content?.info_to_display\" \r\n            *ngIf=\"cardType === 'course'\"></sb-course-card>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"cards-container\" *ngIf=\"type === CardGridTypes.INFINITE_CARD_GRID\">\r\n        <div class=\"item\" [ngClass]=\"maxCardCount ? 'show-' + maxCardCount: ''\" *ngFor=\"let content of contentList;let i=index\">\r\n            <sb-library-card [indexToDisplay]=\"i\" [layoutConfig]=\"layoutConfig\" *ngIf=\"cardType === 'textbook'\" [isMenu]=\"isMenu\" [content]=\"content\" [type]=\"LibraryCardTypes.DESKTOP_TEXTBOOK\"\r\n                (click)=\"onCardClick($event, content)\" (menuClick)=\"onMenuClick($event, content)\" [cardImg]=\"content?.cardImg\">\r\n            </sb-library-card>\r\n            <sb-course-card [isMenu]=\"isMenu\" [course]=\"content\" (click)=\"onCardClick($event, content)\"  \r\n            [cardImg]=\"content?.cardImg\" (menuClick)=\"onMenuClick($event, content)\" [section]=\"content?.info_to_display\" \r\n            *ngIf=\"cardType === 'course'\"></sb-course-card>\r\n        </div>\r\n    </div>\r\n\r\n</div>\r\n\r\n<!--Loading Indicator for header-->\r\n<div class=\"layout-library\" *ngIf=\"isLoading\">\r\n<div class=\"header\" *ngIf=\"isLoading\">\r\n        <div class=\"loading-animation sb--card--highlighter\" style=\"width:100px;height:20px;\">\r\n                <i class=\"icon-svg icon-svg--sm\"></i>\r\n        </div>\r\n</div>\r\n<div class=\"cards-container\" *ngIf=\"maxCardCount > 0\">\r\n    <div class=\"item\" [ngClass]=\"maxCardCount ? 'show-' + maxCardCount: ''\"\r\n        *ngFor=\"let element of range(maxCardCount); let i=index\">\r\n        <sb-library-card [indexToDisplay]=\"i\" [layoutConfig]=\"layoutConfig\" [isLoading]=\"isLoading\" [type]=\"LibraryCardTypes.DESKTOP_TEXTBOOK\">\r\n        </sb-library-card>\r\n    </div>    \r\n</div>\r\n<div class=\"cards-container\" *ngIf=\"maxCardCount <= 0\">\r\n    <div class=\"item\"\r\n        *ngFor=\"let number of [0,1,2]\">\r\n        <sb-library-card [indexToDisplay]=\"number\" [isLoading]=\"isLoading\" [type]=\"LibraryCardTypes.DESKTOP_TEXTBOOK\">\r\n        </sb-library-card>\r\n    </div>\r\n</div>\r\n\r\n</div>\r\n",
                    styles: ["", ".loading-animation{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-fill-mode:forwards;animation-fill-mode:forwards;-webkit-animation-iteration-count:infinite;animation-iteration-count:infinite;-webkit-animation-name:placeload;animation-name:placeload;-webkit-animation-timing-function:linear;animation-timing-function:linear;background:var(--lazyload-bg);background:var(--grey-nuance-lighter);background:linear-gradient(to right,var(--grey-nuance-lighter) 8%,var(--grey-nuance-darker) 18%,var(--grey-nuance-lighter) 33%);background-size:75rem 6.5rem;position:relative}@-webkit-keyframes placeload{0%{background-position:-29.25rem 0}100%{background-position:29.25rem 0}}@keyframes placeload{0%{background-position:-29.25rem 0}100%{background-position:29.25rem 0}}.sb--card--highlighter{height:.75rem;width:100%;margin-top:.3125rem}:host .layout-library{display:flex;flex-direction:column}:host .header{display:flex;flex-direction:row;padding:0;align-items:center}[dir=ltr] :host .header,[dir=rtl] :host .header{margin:1.5rem 0 1rem}:host .header .title{font-family:inherit;text-overflow:ellipsis;overflow:hidden;flex:1;height:1.5rem;color:var(--primary-color);font-size:1.125rem;font-weight:700;text-transform:capitalize;line-height:1.625rem;display:flex;align-items:center}:host .header .title i{vertical-align:middle;height:1.0625rem;width:.875rem;top:0}[dir=ltr] :host .header .title i{margin-right:.5rem}[dir=rtl] :host .header .title i{margin-left:.5rem}:host .header .title .badge{display:inline-block;background:var(--rc-d4d3d3);color:var(--gray-800);text-align:center;padding:0 .75rem;border-radius:.25rem;height:1.5rem;line-height:1.5rem;font-size:1rem;font-weight:400}[dir=ltr] :host .header .title .badge{margin-left:.5rem}[dir=rtl] :host .header .title .badge{margin-right:.5rem}:host .cards-containers{display:-ms-grid;display:grid;grid-template-columns:repeat(auto-fill,minmax(292px,1fr));grid-gap:1rem;grid-row-gap:1.5rem}:host .cards-containers--show-1{grid-template-columns:repeat(auto-fill,minmax(calc(100% / 1.5),1fr))}:host .cards-containers--show-2{grid-template-columns:repeat(auto-fill,minmax(calc(100% / 2.5),1fr))}:host .cards-containers--show-3{grid-template-columns:repeat(auto-fill,minmax(calc(100% / 3.5),1fr))}:host .cards-containers--show-4{grid-template-columns:repeat(auto-fill,minmax(calc(100% / 4.5),1fr))}:host .cards-containers--show-5{grid-template-columns:repeat(auto-fill,minmax(calc(100% / 5.5),1fr))}:host .cards-container{display:flex;flex-direction:row;flex-wrap:wrap;margin:-1.5rem -.5rem 0}:host .cards-container .item{box-sizing:border-box;margin-top:1.5rem}[dir=ltr] :host .cards-container .item,[dir=rtl] :host .cards-container .item{padding:0 .5rem}@media (max-width:767px){:host .cards-container .item{margin-top:1rem}}:host .cards-container .item.show-1{max-width:100%}:host .cards-container .item.show-2{flex:0 0 50%;max-width:50%}:host .cards-container .item.show-3{flex:0 0 33.33%;max-width:33.33%}:host .cards-container .item.show-4{flex:0 0 25%;max-width:25%}:host .cards-container .item.show-5{flex:0 0 20%;max-width:20%}@media (max-width:991px){:host .cards-containers--show-3,:host .cards-containers--show-4,:host .cards-containers--show-5{grid-template-columns:repeat(auto-fill,minmax(calc(100% / 2.5),1fr))}:host .cards-container .item.show-2,:host .cards-container .item.show-3,:host .cards-container .item.show-4,:host .cards-container .item.show-5{flex:0 0 50%;max-width:50%}}@media (max-width:575px){:host .cards-containers--show-2,:host .cards-containers--show-3,:host .cards-containers--show-4,:host .cards-containers--show-5{grid-template-columns:repeat(auto-fill,minmax(calc(100% / 1.5),1fr))}:host .cards-container .item.show-2,:host .cards-container .item.show-3,:host .cards-container .item.show-4,:host .cards-container .item.show-5{flex:0 0 100%;max-width:100%}}@media (min-width:992px) and (max-width:1279px){:host .cards-containers--show-4,:host .cards-containers--show-5{grid-template-columns:repeat(auto-fill,minmax(calc(100% / 3.5),1fr))}:host .cards-container .item.show-4,:host .cards-container .item.show-5{flex:0 0 33.33%;max-width:33.33%}}"]
                }] }
    ];
    CardsGridComponent.propDecorators = {
        title: [{ type: Input }],
        contentList: [{ type: Input }],
        type: [{ type: Input }],
        hoverData: [{ type: Input }],
        cardType: [{ type: Input }],
        layoutConfig: [{ type: Input }],
        maxCardCount: [{ type: Input }],
        viewMoreButtonText: [{ type: Input }],
        gridTemplate: [{ type: Input, args: ['hover-template',] }],
        isLoading: [{ type: Input }],
        isMenu: [{ type: Input }],
        viewMoreClick: [{ type: Output }],
        menuClick: [{ type: Output }],
        cardClick: [{ type: Output }],
        hoverActionClick: [{ type: Output }]
    };
    return CardsGridComponent;
}());
export { CardsGridComponent };
if (false) {
    /** @type {?} */
    CardsGridComponent.prototype.title;
    /** @type {?} */
    CardsGridComponent.prototype.contentList;
    /** @type {?} */
    CardsGridComponent.prototype.type;
    /** @type {?} */
    CardsGridComponent.prototype.hoverData;
    /** @type {?} */
    CardsGridComponent.prototype.cardType;
    /** @type {?} */
    CardsGridComponent.prototype.layoutConfig;
    /** @type {?} */
    CardsGridComponent.prototype.maxCardCount;
    /** @type {?} */
    CardsGridComponent.prototype.viewMoreButtonText;
    /** @type {?} */
    CardsGridComponent.prototype.gridTemplate;
    /** @type {?} */
    CardsGridComponent.prototype.isLoading;
    /** @type {?} */
    CardsGridComponent.prototype.isMenu;
    /** @type {?} */
    CardsGridComponent.prototype.viewMoreClick;
    /** @type {?} */
    CardsGridComponent.prototype.menuClick;
    /** @type {?} */
    CardsGridComponent.prototype.cardClick;
    /** @type {?} */
    CardsGridComponent.prototype.hoverActionClick;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2FyZHMtZ3JpZC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AcHJvamVjdC1zdW5iaXJkL2NvbW1vbi1jb25zdW1wdGlvbi12OC8iLCJzb3VyY2VzIjpbImxpYi9sYXlvdXQvY2FyZHMtZ3JpZC9jYXJkcy1ncmlkLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBVSxLQUFLLEVBQUUsTUFBTSxFQUFFLFdBQVcsRUFBRSxZQUFZLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDNUYsT0FBTyxFQUFFLHVCQUF1QixFQUFFLE1BQU0sdUJBQXVCLENBQUM7QUFDaEUsT0FBTyxFQUFZLGdCQUFnQixFQUFFLGFBQWEsRUFBRSxNQUFNLG1CQUFtQixDQUFDO0FBRzlFO0lBQUE7O1FBUVcsVUFBSyxHQUFXLHVCQUF1QixDQUFDLEtBQUssQ0FBQztRQUM5QyxnQkFBVyxHQUEwQix1QkFBdUIsQ0FBQyxXQUFXLENBQUM7UUFFekUsY0FBUyxHQUFHLEVBQUUsQ0FBQztRQUNmLGFBQVEsR0FBVSxVQUFVLENBQUM7O1FBSzdCLGlCQUFZLEdBQUcsdUJBQXVCLENBQUMsWUFBWSxDQUFDO1FBQ3BELHVCQUFrQixHQUFHLHVCQUF1QixDQUFDLGtCQUFrQixDQUFDO1FBSWhFLFdBQU0sR0FBVyxLQUFLLENBQUM7UUFFdEIsa0JBQWEsR0FBaUMsSUFBSSxZQUFZLEVBQWtCLENBQUM7UUFDakYsY0FBUyxHQUFpQyxJQUFJLFlBQVksRUFBa0IsQ0FBQztRQUM3RSxjQUFTLEdBQTZCLElBQUksWUFBWSxFQUFjLENBQUM7UUFDckUscUJBQWdCLEdBQXNCLElBQUksWUFBWSxFQUFPLENBQUM7SUFpQzFFLENBQUM7SUE5QkMsc0JBQUksZ0RBQWdCOzs7O1FBQXBCLGNBQXlCLE9BQU8sZ0JBQWdCLENBQUMsQ0FBQyxDQUFDOzs7T0FBQTtJQUNuRCxzQkFBSSw2Q0FBYTs7OztRQUFqQixjQUFzQixPQUFPLGFBQWEsQ0FBQyxDQUFDLENBQUM7OztPQUFBO0lBRTdDOzs7T0FHRzs7Ozs7O0lBQ0gsNENBQWU7Ozs7O0lBQWYsVUFBZ0IsS0FBaUI7UUFDN0IsSUFBSSxDQUFDLGFBQWEsQ0FBQyxJQUFJLENBQUMsRUFBRSxLQUFLLE9BQUEsRUFBRSxJQUFJLEVBQUUsSUFBSSxDQUFDLFdBQVcsRUFBRSxDQUFDLENBQUM7SUFDL0QsQ0FBQztJQUVEOzs7O09BSUc7Ozs7Ozs7SUFDSCx3Q0FBVzs7Ozs7O0lBQVgsVUFBWSxLQUFpQixFQUFFLElBQWM7UUFDekMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsRUFBRSxLQUFLLE9BQUEsRUFBRSxJQUFJLE1BQUEsRUFBRSxDQUFDLENBQUM7SUFDekMsQ0FBQzs7Ozs7O0lBQ0Qsd0NBQVc7Ozs7O0lBQVgsVUFBWSxLQUFpQixFQUFFLElBQWM7UUFDM0MsSUFBSSxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsRUFBRSxLQUFLLE9BQUEsRUFBRSxJQUFJLE1BQUEsRUFBRSxDQUFDLENBQUM7SUFDeEMsQ0FBQzs7Ozs7SUFFQSwrQ0FBa0I7Ozs7SUFBbEIsVUFBbUIsS0FBSztRQUNwQixJQUFJLENBQUMsZ0JBQWdCLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDO0lBQ3RDLENBQUM7Ozs7O0lBQ0Qsa0NBQUs7Ozs7SUFBTCxVQUFNLGNBQWM7UUFDaEIsT0FBUSxJQUFJLEtBQUssQ0FBQyxjQUFjLENBQUMsQ0FBQztJQUN0QyxDQUFDOztnQkExREYsU0FBUyxTQUFDO29CQUNULFFBQVEsRUFBRSxlQUFlO29CQUN6QixnMUhBQTBDOztpQkFFM0M7Ozt3QkFJRSxLQUFLOzhCQUNMLEtBQUs7dUJBQ0wsS0FBSzs0QkFDTCxLQUFLOzJCQUNMLEtBQUs7K0JBRUwsS0FBSzsrQkFHTCxLQUFLO3FDQUNMLEtBQUs7K0JBQ0wsS0FBSyxTQUFDLGdCQUFnQjs0QkFFdEIsS0FBSzt5QkFDTCxLQUFLO2dDQUVMLE1BQU07NEJBQ04sTUFBTTs0QkFDTixNQUFNO21DQUNOLE1BQU07O0lBaUNULHlCQUFDO0NBQUEsQUE1REQsSUE0REM7U0F2RFksa0JBQWtCOzs7SUFHN0IsbUNBQXVEOztJQUN2RCx5Q0FBa0Y7O0lBQ2xGLGtDQUE2Qjs7SUFDN0IsdUNBQXdCOztJQUN4QixzQ0FBc0M7O0lBRXRDLDBDQUEyQjs7SUFHM0IsMENBQTZEOztJQUM3RCxnREFBeUU7O0lBQ3pFLDBDQUF3RDs7SUFFeEQsdUNBQTJCOztJQUMzQixvQ0FBZ0M7O0lBRWhDLDJDQUEyRjs7SUFDM0YsdUNBQXVGOztJQUN2Rix1Q0FBK0U7O0lBQy9FLDhDQUF3RSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgT25Jbml0LCBJbnB1dCwgT3V0cHV0LCBUZW1wbGF0ZVJlZiwgRXZlbnRFbWl0dGVyIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IGRlZmF1bHRMaWJyYXJ5Q2FyZHNHcmlkIH0gZnJvbSAnLi4vbGlicmFyeS1jYXJkcy5kYXRhJztcclxuaW1wb3J0IHsgSUNvbnRlbnQsIExpYnJhcnlDYXJkVHlwZXMsIENhcmRHcmlkVHlwZXMgfSBmcm9tICcuLi8uLi9jYXJkL21vZGVscyc7XHJcbmltcG9ydCB7IElWaWV3TW9yZUNsaWNrLCBJQ2FyZENsaWNrIH0gZnJvbSAnLi4vbW9kZWxzJztcclxuXHJcbkBDb21wb25lbnQoe1xyXG4gIHNlbGVjdG9yOiAnc2ItY2FyZHMtZ3JpZCcsXHJcbiAgdGVtcGxhdGVVcmw6ICcuL2NhcmRzLWdyaWQuY29tcG9uZW50Lmh0bWwnLFxyXG4gIHN0eWxlVXJsczogWycuL2NhcmRzLWdyaWQuY29tcG9uZW50LnNjc3MnLCcuLi9saWJyYXJ5LWNhcmRzLWdyaWQvbGlicmFyeS1jYXJkcy1ncmlkLmNvbXBvbmVudC5zY3NzJ11cclxufSlcclxuZXhwb3J0IGNsYXNzIENhcmRzR3JpZENvbXBvbmVudCB7XHJcblxyXG4gIC8qIFRpdGxlIGZvciB0aGUgZ3JpZCAqL1xyXG4gIEBJbnB1dCgpIHRpdGxlOiBzdHJpbmcgPSBkZWZhdWx0TGlicmFyeUNhcmRzR3JpZC50aXRsZTtcclxuICBASW5wdXQoKSBjb250ZW50TGlzdDogQXJyYXk8SUNvbnRlbnQ+IHwgYW55ID0gZGVmYXVsdExpYnJhcnlDYXJkc0dyaWQuY29udGVudExpc3Q7XHJcbiAgQElucHV0KCkgdHlwZTogQ2FyZEdyaWRUeXBlcztcclxuICBASW5wdXQoKSBob3ZlckRhdGEgPSBbXTtcclxuICBASW5wdXQoKSBjYXJkVHlwZTpTdHJpbmcgPSBcInRleHRib29rXCI7XHJcblxyXG4gIEBJbnB1dCgpIGxheW91dENvbmZpZzogYW55O1xyXG5cclxuICAvKiBNYXggY2FyZCBjb3VudCB0byBiZSBzaG93biAqL1xyXG4gIEBJbnB1dCgpIG1heENhcmRDb3VudCA9IGRlZmF1bHRMaWJyYXJ5Q2FyZHNHcmlkLm1heENhcmRDb3VudDtcclxuICBASW5wdXQoKSB2aWV3TW9yZUJ1dHRvblRleHQgPSBkZWZhdWx0TGlicmFyeUNhcmRzR3JpZC52aWV3TW9yZUJ1dHRvblRleHQ7XHJcbiAgQElucHV0KCdob3Zlci10ZW1wbGF0ZScpIGdyaWRUZW1wbGF0ZTogVGVtcGxhdGVSZWY8YW55PjtcclxuXHJcbiAgQElucHV0KCkgaXNMb2FkaW5nOmJvb2xlYW47XHJcbiAgQElucHV0KCkgaXNNZW51OmJvb2xlYW4gPSBmYWxzZTtcclxuXHJcbiAgQE91dHB1dCgpIHZpZXdNb3JlQ2xpY2s6IEV2ZW50RW1pdHRlcjxJVmlld01vcmVDbGljaz4gPSBuZXcgRXZlbnRFbWl0dGVyPElWaWV3TW9yZUNsaWNrPigpO1xyXG4gIEBPdXRwdXQoKSBtZW51Q2xpY2s6IEV2ZW50RW1pdHRlcjxJVmlld01vcmVDbGljaz4gPSBuZXcgRXZlbnRFbWl0dGVyPElWaWV3TW9yZUNsaWNrPigpO1xyXG4gIEBPdXRwdXQoKSBjYXJkQ2xpY2s6IEV2ZW50RW1pdHRlcjxJQ2FyZENsaWNrPiA9IG5ldyBFdmVudEVtaXR0ZXI8SUNhcmRDbGljaz4oKTtcclxuICBAT3V0cHV0KCkgaG92ZXJBY3Rpb25DbGljazogRXZlbnRFbWl0dGVyPGFueT4gPSBuZXcgRXZlbnRFbWl0dGVyPGFueT4oKTtcclxuXHJcblxyXG4gIGdldCBMaWJyYXJ5Q2FyZFR5cGVzKCkgeyByZXR1cm4gTGlicmFyeUNhcmRUeXBlczsgfVxyXG4gIGdldCBDYXJkR3JpZFR5cGVzKCkgeyByZXR1cm4gQ2FyZEdyaWRUeXBlczsgfVxyXG5cclxuICAvKipcclxuICAgKiBUcmlnZ2VycyBldmVudCBvbiBgVmlldyBNb3JlYCBDbGlja1xyXG4gICAqIEBwYXJhbSBldmVudCBIVE1MIGNsaWNrIGV2ZW50XHJcbiAgICovXHJcbiAgb25WaWV3TW9yZUNsaWNrKGV2ZW50OiBNb3VzZUV2ZW50KSB7XHJcbiAgICAgIHRoaXMudmlld01vcmVDbGljay5lbWl0KHsgZXZlbnQsIGRhdGE6IHRoaXMuY29udGVudExpc3QgfSk7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBUcmlnZ2VycyBldmVudCBvbiBjYXJkIGNsaWNrXHJcbiAgICogQHBhcmFtIGV2ZW50IEhUTUwgQ2xpY2sgZXZlbnRcclxuICAgKiBAcGFyYW0gZGF0YSBDb250ZW50IGRhdGEgZm9yIHNlbGVjdGVkIGNhcmRcclxuICAgKi9cclxuICBvbkNhcmRDbGljayhldmVudDogTW91c2VFdmVudCwgZGF0YTogSUNvbnRlbnQpIHtcclxuICAgICAgdGhpcy5jYXJkQ2xpY2suZW1pdCh7IGV2ZW50LCBkYXRhIH0pO1xyXG4gIH1cclxuICBvbk1lbnVDbGljayhldmVudDogTW91c2VFdmVudCwgZGF0YTogSUNvbnRlbnQpIHtcclxuICAgIHRoaXMubWVudUNsaWNrLmVtaXQoeyBldmVudCwgZGF0YSB9KTtcclxuIH1cclxuXHJcbiAgaG92ZXJBY3Rpb25DbGlja2VkKGV2ZW50KSB7XHJcbiAgICAgIHRoaXMuaG92ZXJBY3Rpb25DbGljay5lbWl0KGV2ZW50KTtcclxuICB9XHJcbiAgcmFuZ2UobWF4Q2FyZENvdW50ZXIpIHtcclxuICAgICAgcmV0dXJuICBuZXcgQXJyYXkobWF4Q2FyZENvdW50ZXIpO1xyXG4gIH1cclxuXHJcbn1cclxuIl19