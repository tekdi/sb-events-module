/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Component, Input, Output, EventEmitter, ViewChild, QueryList, ViewChildren } from '@angular/core';
import { ExpandBehavior, ExpandMode, FlattenedType, TocCardType } from '../../card/models';
import { MimeTypePipe, MimeTypeMasterData } from '../../pipes-module/mime-type';
var TocItemComponent = /** @class */ (function () {
    function TocItemComponent() {
        var _this = this;
        this.accordianConfig = {
            expandMode: ExpandMode.MULTIPLE,
            expandBehavior: ExpandBehavior.NONE
        };
        this.activeMimeTypeFilter = ['all'];
        this.noContentMessage = 'No content available';
        this.contentStatus = [];
        this.trackableDefaultImage = '';
        this.type = "";
        this.recogniseCollection = false;
        this.tocCardClick = new EventEmitter();
        this.noContent = new EventEmitter();
        this.selectedItem = new EventEmitter();
        this.playButtonClick = new EventEmitter();
        this.resetActiveContent = false;
        this.isMimeTypeFilterChanged = false;
        this.isSameMimeTypeInChildren = ((/**
         * @param {?} mimeTypesCount
         * @param {?} activeMimeType
         * @return {?}
         */
        function (mimeTypesCount, activeMimeType) {
            /** @type {?} */
            var contentMimeType = Object.keys(JSON.parse(mimeTypesCount));
            return Boolean(activeMimeType.filter((/**
             * @param {?} value
             * @return {?}
             */
            function (value) { return contentMimeType.includes(value); })).length);
        }));
        this.isSameMimeType = (/**
         * @param {?} currentContent
         * @return {?}
         */
        function (currentContent) { return _this.activeMimeTypeFilter.find((/**
         * @param {?} mimeType
         * @return {?}
         */
        function (mimeType) { return mimeType === currentContent.mimeType; })); });
        this.isChildrenPresent = (/**
         * @param {?} currentContent
         * @return {?}
         */
        function (currentContent) { return Boolean(currentContent.children && currentContent.children.length); });
        this.subscriptions = [];
    }
    Object.defineProperty(TocItemComponent.prototype, "FlattenedType", {
        get: /**
         * @return {?}
         */
        function () { return FlattenedType; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TocItemComponent.prototype, "MimeTypeMasterData", {
        get: /**
         * @return {?}
         */
        function () { return MimeTypeMasterData; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TocItemComponent.prototype, "ExpandBehavior", {
        get: /**
         * @return {?}
         */
        function () { return ExpandBehavior; },
        enumerable: true,
        configurable: true
    });
    /**
     * @return {?}
     */
    TocItemComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        this.setActiveContent();
    };
    /**
     * @param {?} changes
     * @return {?}
     */
    TocItemComponent.prototype.ngOnChanges = /**
     * @param {?} changes
     * @return {?}
     */
    function (changes) {
        if (changes.activeMimeTypeFilter) {
            this.isMimeTypeFilterChanged = false;
            this.resetActiveContent = true;
        }
        else if (changes.tocData) {
            this.setActiveContent();
        }
        else if (changes.selectAll) {
            this.selectAllItems(this.selectAll);
        }
    };
    /**
     * @return {?}
     */
    TocItemComponent.prototype.ngAfterViewInit = /**
     * @return {?}
     */
    function () {
        var _this = this;
        /** @type {?} */
        var subscription = this.accordionItems.changes.subscribe((/**
         * @param {?} change
         * @return {?}
         */
        function (change) {
            if (_this.resetActiveContent && _this.accordionItems.length && _this.accordianConfig.expandBehavior === ExpandBehavior.EXPAND_FIRST) {
                _this.resetActiveContent = false;
                _this.accordionItems.first.collapsed = false;
                _this.collapsedChangeHandler(false, _this.accordionItems.first);
            }
        }));
        this.subscriptions.push(subscription);
    };
    /**
     * @return {?}
     */
    TocItemComponent.prototype.setActiveContent = /**
     * @return {?}
     */
    function () {
        if (this.tocData && this.tocData.children) {
            if ((this.tocData.children[0].contentData && this.tocData.children[0].contentData.trackable && this.tocData.children[0].contentData.trackable.enabled === 'Yes') ||
                (this.tocData.children[0].trackable && this.tocData.children[0].trackable.enabled === 'Yes')) {
                return;
            }
            /** @type {?} */
            var flattenDeepContents = this.flattenDeep(this.tocData.children);
            if (!this.activeContent) {
                this.activeContent = this.firstNonCollectionContent(flattenDeepContents);
            }
            if (!this.activeContent) {
                this.noContent.emit({ message: 'No Content Available' });
            }
        }
    };
    /**
     * @param {?} content
     * @return {?}
     */
    TocItemComponent.prototype.filterChildren = /**
     * @param {?} content
     * @return {?}
     */
    function (content) {
        // Check for the ActiveMimeType
        if (this.activeMimeTypeFilter.includes('all')) {
            if (content.mimeType === MimeTypeMasterData.COLLECTION) {
                return this.isShowContent(content, true);
            }
            return true; // Return true for all the content except collection mimeType
        }
        else if (content.mimeType && this.isSameMimeType(content)) {
            return true;
        }
        else if (content.mimeType === MimeTypeMasterData.COLLECTION) {
            return this.isShowContent(content, false);
        }
        else {
            return false;
        }
    };
    /**
     * @private
     * @param {?} content
     * @param {?} isActiveFilterAll
     * @return {?}
     */
    TocItemComponent.prototype.isShowContent = /**
     * @private
     * @param {?} content
     * @param {?} isActiveFilterAll
     * @return {?}
     */
    function (content, isActiveFilterAll) {
        var _this = this;
        if (content.mimeTypesCount && !isActiveFilterAll) {
            return this.isSameMimeTypeInChildren(content.mimeTypesCount, this.activeMimeTypeFilter);
        }
        else if (this.isChildrenPresent(content)) {
            /** @type {?} */
            var contentList = this.flattenDeep(content.children);
            return isActiveFilterAll ? contentList.some((/**
             * @param {?} c
             * @return {?}
             */
            function (c) { return c.mimeType !== MimeTypeMasterData.COLLECTION; })) :
                contentList.some((/**
                 * @param {?} c
                 * @return {?}
                 */
                function (c) { return _this.isSameMimeType(c); }));
        }
        else {
            return false;
        }
    };
    /**
     * @param {?} event
     * @return {?}
     */
    TocItemComponent.prototype.onTocCardClick = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        /** @type {?} */
        var rollup = this.getRollup(this.tocData, event.data.sbUniqueIdentifier);
        if (rollup.length) {
            rollup.pop();
        }
        this.tocCardClick.emit(tslib_1.__assign({}, event, { rollup: rollup }));
    };
    /**
     * @param {?} collapsed
     * @param {?} item
     * @return {?}
     */
    TocItemComponent.prototype.collapsedChangeHandler = /**
     * @param {?} collapsed
     * @param {?} item
     * @return {?}
     */
    function (collapsed, item) {
        if (this.accordianConfig.expandMode === ExpandMode.SINGLE && !collapsed) {
            this.accordionItems.filter((/**
             * @param {?} i
             * @return {?}
             */
            function (i) { return i !== item; })).forEach((/**
             * @param {?} i
             * @return {?}
             */
            function (i) {
                if (i.expanded) {
                    i.expanded = false;
                }
            }));
        }
    };
    /**
     * @private
     * @param {?} contents
     * @return {?}
     */
    TocItemComponent.prototype.firstNonCollectionContent = /**
     * @private
     * @param {?} contents
     * @return {?}
     */
    function (contents) {
        return contents.find((/**
         * @param {?} content
         * @return {?}
         */
        function (content) { return content.mimeType !== 'application/vnd.ekstep.content-collection'; }));
    };
    /**
     * @private
     * @param {?} contents
     * @return {?}
     */
    TocItemComponent.prototype.flattenDeep = /**
     * @private
     * @param {?} contents
     * @return {?}
     */
    function (contents) {
        var _this = this;
        if (contents) {
            return contents.reduce((/**
             * @param {?} acc
             * @param {?} val
             * @return {?}
             */
            function (acc, val) {
                if (val.children) {
                    acc.push(val);
                    return acc.concat(_this.flattenDeep(val.children));
                }
                else {
                    return acc.concat(val);
                }
            }), []);
        }
    };
    /**
     * @param {?} index
     * @param {?} item
     * @return {?}
     */
    TocItemComponent.prototype.isExpanded = /**
     * @param {?} index
     * @param {?} item
     * @return {?}
     */
    function (index, item) {
        var _this = this;
        /** @type {?} */
        var activeContent = item.children ? this.flattenDeep(item.children).find((/**
         * @param {?} child
         * @return {?}
         */
        function (child) {
            if (_this.activeContent && _this.activeContent.parent) {
                return child.identifier === _this.activeContent.identifier && child.parent === _this.activeContent.parent;
            }
            else {
                return child.identifier === _this.activeContent.identifier;
            }
        })) : undefined;
        return Boolean(activeContent || item && item.mimeType !== MimeTypeMasterData.COLLECTION);
    };
    /**
     * @param {?} item
     * @param {?} index
     * @return {?}
     */
    TocItemComponent.prototype.isShowBody = /**
     * @param {?} item
     * @param {?} index
     * @return {?}
     */
    function (item, index) {
        var _this = this;
        if (item) {
            /** @type {?} */
            var isShowAllMimeType = (/**
             * @return {?}
             */
            function () { return _this.activeMimeTypeFilter.indexOf('all') > -1; });
            /** @type {?} */
            var isCollection = (/**
             * @return {?}
             */
            function () { return item.mimeType === MimeTypeMasterData.COLLECTION; });
            /** @type {?} */
            var isMathchesMimeType = (/**
             * @return {?}
             */
            function () { return _this.activeMimeTypeFilter.indexOf(item.mimeType) > -1; });
            /** @type {?} */
            var isLastContent = (/**
             * @return {?}
             */
            function () { return _this.tocData.children.length === index + 1; });
            if (this.tocData && isShowAllMimeType() || (isCollection() || isMathchesMimeType())) {
                this.isMimeTypeFilterChanged = true;
                return true;
            }
            else if (this.activeMimeTypeFilter.indexOf(item.mimeType) < 0 && !isLastContent()) {
                return false;
            }
            else if (this.activeMimeTypeFilter.indexOf(item.mimeType) < 0 && isLastContent()) {
                if (this.isMimeTypeFilterChanged) {
                    return false;
                }
                this.isMimeTypeFilterChanged = false;
                return true;
            }
        }
        return false;
    };
    /**
     * @param {?} tree
     * @param {?} identifier
     * @return {?}
     */
    TocItemComponent.prototype.getRollup = /**
     * @param {?} tree
     * @param {?} identifier
     * @return {?}
     */
    function (tree, identifier) {
        /** @type {?} */
        var rollup = [tree.identifier];
        if (tree.sbUniqueIdentifier === identifier) {
            return rollup;
        }
        if (!tree.children || !tree.children.length) {
            return [];
        }
        /** @type {?} */
        var notDone = true;
        /** @type {?} */
        var childRollup;
        /** @type {?} */
        var index = 0;
        while (notDone && tree.children[index]) {
            childRollup = this.getRollup(tree.children[index], identifier);
            if (childRollup && childRollup.length) {
                notDone = false;
            }
            index++;
        }
        if (childRollup && childRollup.length) {
            rollup.push.apply(rollup, tslib_1.__spread(childRollup));
            return rollup;
        }
        else {
            return [];
        }
    };
    /**
     * @param {?} tocData
     * @param {?} item
     * @return {?}
     */
    TocItemComponent.prototype.createUniqueId = /**
     * @param {?} tocData
     * @param {?} item
     * @return {?}
     */
    function (tocData, item) {
        item['sbUniqueIdentifier'] = tocData.identifier + '_' + item.identifier;
    };
    /**
     * @since #SH-362
     * @param item - selected children data.
     * @description - It will despatch an event on individual checkbox click
     */
    /**
     * \@since #SH-362
     * \@description - It will despatch an event on individual checkbox click
     * @param {?} item - selected children data.
     * @return {?}
     */
    TocItemComponent.prototype.onItemSelect = /**
     * \@since #SH-362
     * \@description - It will despatch an event on individual checkbox click
     * @param {?} item - selected children data.
     * @return {?}
     */
    function (item) {
        this.selectedItem.emit({ data: item });
    };
    /**
     * @since #SH-362
     * @param isSelectAll - boolean, which will be true/false if 'Select all checkbox is checked/unchecked
     * @description - this method will mark every children of tocData object with an additional variable -
     *                selected: true/false based on the value of 'isSelectAll' and also despatch an event
     *                with the data.
     */
    /**
     * \@since #SH-362
     * \@description - this method will mark every children of tocData object with an additional variable -
     *                selected: true/false based on the value of 'isSelectAll' and also despatch an event
     *                with the data.
     * @param {?} isSelectAll - boolean, which will be true/false if 'Select all checkbox is checked/unchecked
     * @return {?}
     */
    TocItemComponent.prototype.selectAllItems = /**
     * \@since #SH-362
     * \@description - this method will mark every children of tocData object with an additional variable -
     *                selected: true/false based on the value of 'isSelectAll' and also despatch an event
     *                with the data.
     * @param {?} isSelectAll - boolean, which will be true/false if 'Select all checkbox is checked/unchecked
     * @return {?}
     */
    function (isSelectAll) {
        this.tocData['children'].forEach((/**
         * @param {?} item
         * @return {?}
         */
        function (item) {
            item.selected = isSelectAll;
        }));
        this.selectedItem.emit({ selectAll: isSelectAll, data: this.tocData['children'] });
    };
    /**
     * @param {?} event
     * @return {?}
     */
    TocItemComponent.prototype.onPlayButtonClick = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        /** @type {?} */
        var rollup = this.getRollup(this.tocData, event.data.sbUniqueIdentifier);
        if (rollup.length) {
            rollup.pop();
        }
        this.playButtonClick.emit(tslib_1.__assign({}, event, { rollup: rollup }));
    };
    /**
     * @param {?} content
     * @return {?}
     */
    TocItemComponent.prototype.isFlattenedType = /**
     * @param {?} content
     * @return {?}
     */
    function (content) {
        if (!(this.type === TocCardType.TRACKABLE) ||
            !((content.contentData && content.contentData.trackable && content.contentData.trackable.enabled === 'Yes') ||
                (content.trackable && content.trackable.enabled === 'Yes'))) {
            return FlattenedType.EXPAND;
        }
        else if (this.type === TocCardType.TRACKABLE &&
            ((content.contentData && content.contentData.trackable && content.contentData.trackable.enabled === 'Yes') ||
                (content.trackable && content.trackable.enabled === 'Yes'))) {
            return FlattenedType.COLLAPSE;
        }
        return '';
    };
    /**
     * @return {?}
     */
    TocItemComponent.prototype.ngOnDestroy = /**
     * @return {?}
     */
    function () {
        this.subscriptions.forEach((/**
         * @param {?} s
         * @return {?}
         */
        function (s) { return s.unsubscribe(); }));
    };
    TocItemComponent.decorators = [
        { type: Component, args: [{
                    selector: 'sb-toc-item',
                    template: "<div *ngFor=\"let item of tocData?.children; let index = index;\">\r\n  <ng-container *ngIf=\"(item | hasMimeType: activeMimeTypeFilter) || this.accordianConfig.expandBehavior === ExpandBehavior.NONE\">\r\n  <div *ngIf=\"item?.mimeType === MimeTypeMasterData?.COLLECTION && !(item?.contentData?.trackable?.enabled === 'Yes' || item?.trackable?.enabled === 'Yes')\">\r\n    <sb-accordion [multi]=\"false\" [id]=\"item.identifier\">\r\n      <sb-accordion-item #sbAccordionItem [expanded]=\"isExpanded(index, item)\" (collapsedChange)=\"collapsedChangeHandler($event, sbAccordionItem);\">\r\n        {{ createUniqueId(tocData, item) }}\r\n        <sb-accordion-header>\r\n            <div class=\"sb-checkbox sb-checkbox-primary\" *ngIf=\"selectMode\">\r\n                <input (change)=\"onItemSelect(item)\" [(ngModel)]=\"item.selected\" type=\"checkbox\" name=\"example\">\r\n                <label class=\"mb-0\"><span class=\"title font-weight-bold\">{{item?.name}}</span></label>\r\n            </div>\r\n            <span *ngIf=\"!selectMode\" class=\"title\">{{item?.name}}</span>\r\n        </sb-accordion-header>\r\n        <sb-accordion-body *ngIf=\"isShowBody(item, index)\">\r\n          <div *ngIf=\"item && (item | hasMimeType: activeMimeTypeFilter);else noContent\" #chapterContainer>\r\n            <ng-container *ngIf=\"item?.children?.length\">\r\n              <ng-container *ngFor=\"let child of item?.children; let j = index;\">\r\n                {{ createUniqueId(item, child) }}\r\n                <div class=\"sbchapter\"\r\n                  *ngIf=\"recogniseCollection && filterChildren(child) && child.item?.contentType === 'TextBook'\">\r\n                  <sb-my-course-card [type]=\"'recently_viewed'\"></sb-my-course-card>\r\n                </div>\r\n                <div class=\"sbchapter\"\r\n                  *ngIf=\"recogniseCollection && filterChildren(child) && child.item?.contentType === 'Course'\">\r\n                  <sb-my-course-card [type]=\"'recently_viewed'\"></sb-my-course-card>\r\n                </div>\r\n                <div class=\"sbchapter\" *ngIf=\"filterChildren(child)\" [id]=\"child.identifier\">\r\n                  <ng-container *ngIf=\"isFlattenedType(child) === FlattenedType.EXPAND\">\r\n                    <sb-toc-child-item *ngIf=\"type\" [type]=\"type\" [contentStatus]=\"contentStatus\" [childData]=\"child\"\r\n                      [activeMimeTypeFilter]=\"activeMimeTypeFilter\" [activeContent]=\"activeContent\" [platform]=\"platform\"\r\n                      (tocCardClick)=\"onTocCardClick($event)\" [playBtnConfig]=\"playBtnConfig\" (playButtonClick)=\"onPlayButtonClick($event)\"\r\n                      [trackableDefaultImage]=\"trackableDefaultImage\">\r\n                    </sb-toc-child-item>\r\n                    <sb-toc-child-item *ngIf=\"!type\" [childData]=\"child\" [activeMimeTypeFilter]=\"activeMimeTypeFilter\"\r\n                      [activeContent]=\"activeContent\" (tocCardClick)=\"onTocCardClick($event)\" [playBtnConfig]=\"playBtnConfig\"\r\n                      (playButtonClick)=\"onPlayButtonClick($event)\" [platform]=\"platform\" [trackableDefaultImage]=\"trackableDefaultImage\">\r\n                    </sb-toc-child-item>\r\n                  </ng-container>\r\n\r\n                  <ng-container *ngIf=\"isFlattenedType(child) === FlattenedType.COLLAPSE\">\r\n                    <sb-toc-card *ngIf=\"type\" [type]=\"type\" [content]=\"child\" (tocCardClick)=\"onTocCardClick($event)\"\r\n                      [activeContent]=\"activeContent\" [playBtnConfig]=\"playBtnConfig\" (playButtonClick)=\"onPlayButtonClick($event)\"\r\n                      [trackableDefaultImage]=\"trackableDefaultImage\" [platform]=\"platform\">\r\n                    </sb-toc-card>\r\n                    <sb-toc-card *ngIf=\"!type\" [content]=\"child\" (tocCardClick)=\"onTocCardClick($event)\"\r\n                      [activeContent]=\"activeContent\" [playBtnConfig]=\"playBtnConfig\" (playButtonClick)=\"onPlayButtonClick($event)\"\r\n                      [trackableDefaultImage]=\"trackableDefaultImage\" [platform]=\"platform\">\r\n                    </sb-toc-card>\r\n                  </ng-container>\r\n\r\n                </div>\r\n              </ng-container>\r\n            </ng-container>\r\n            <ng-container *ngIf=\"item?.mimeType === MimeTypeMasterData?.COLLECTION && !item?.children?.length\">\r\n              <div class=\"heading\">{{noContentMessage}}</div>\r\n            </ng-container>\r\n          </div>\r\n          <ng-template #noContent>\r\n            <div class=\"heading\">{{noContentMessage}}</div>\r\n          </ng-template>\r\n        </sb-accordion-body>\r\n      </sb-accordion-item>\r\n    </sb-accordion>\r\n  </div>\r\n  <div *ngIf=\"(item?.mimeType !== MimeTypeMasterData?.COLLECTION && !item?.children?.length) ||\r\n    item?.contentData?.trackable?.enabled === 'Yes' || item?.trackable?.enabled === 'Yes'\" class=\"sb-content__bar\">\r\n    <ng-container>\r\n    <div class=\"child-content-padding\">\r\n      <sb-toc-card *ngIf=\"type\" [type]=\"type\" [contentStatus]=\"contentStatus\" [content]=\"item\"\r\n        (tocCardClick)=\"onTocCardClick($event)\" [activeContent]=\"activeContent\" [playBtnConfig]=\"playBtnConfig\"\r\n        (playButtonClick)=\"onPlayButtonClick($event)\" [platform]=\"platform\" [trackableDefaultImage]=\"trackableDefaultImage\">\r\n      </sb-toc-card>\r\n      <sb-toc-card *ngIf=\"!type\" [content]=\"item\" (tocCardClick)=\"onTocCardClick($event)\" [platform]=\"platform\"\r\n        [activeContent]=\"activeContent\" [playBtnConfig]=\"playBtnConfig\" (playButtonClick)=\"onPlayButtonClick($event)\"\r\n        [trackableDefaultImage]=\"trackableDefaultImage\">\r\n      </sb-toc-card>\r\n    </div>\r\n    </ng-container>\r\n  </div>\r\n  </ng-container>\r\n</div>\r\n",
                    providers: [MimeTypePipe],
                    styles: [".sbchapter{border-bottom:.0625rem solid var(--gray-100);padding:0 0 1rem;margin-bottom:1rem}.sbchapter:last-child{border-bottom:0;margin-bottom:0;padding-bottom:0}.sbchapter h4{font-size:.625rem;line-height:1.125rem;color:var(--gray-800);margin-bottom:.5rem}.sbchapter__item{background:var(--white);box-shadow:0 .1875rem .25rem 0 rgba(var(--rc-rgba-primary),.1);border:.03125rem solid rgba(var(--rc-rgba-primary),.5);display:flex;align-items:center;justify-content:space-between;margin-bottom:.5rem;padding:.5rem;cursor:pointer;min-height:3.5rem}.sbchapter__item h4{font-size:.75rem;line-height:1.25rem;color:var(--primary-400);margin:0;padding:0}.sbchapter__item .sbchapter__img{width:1.5rem;height:1.5rem;flex:0 0 1.5rem}.sbchapter__item .sbchapter__img img{width:100%}.sbchapter__item .sbchapter__img .icon-svg svg.icon .icon-svg--primary{fill:#9cb9ff}.sbchapter__item:hover{background:var(--gray-0)}.sbchapter__item--active,.sbchapter__item--active:hover{background:var(--primary-100)}.sbchapter-open{border-bottom:.0625rem solid #e0e0e0;padding-bottom:var(--base-block-space)}.sbchapter-open__title{font-size:.875rem;font-weight:700;color:var(--primary-400);margin:0;padding:1rem;width:100%}.sbchapter-open__topics{padding:0}.sbchapter-open__topics__title{font-size:.875rem;line-height:1.375rem;margin:0 0 .5rem;color:var(--primary-400);padding:0 1rem}.sbchapter-open__topic{font-size:.75rem;line-height:1.25rem;padding:8px 2rem;margin:0;color:var(--primary-400)}.sbchapter-open__topic--active{background:var(--primary-100)}.sbchapter-open__topic:hover{background:var(--gray-0)}.sbsmartscroll-style::-webkit-scrollbar{width:.3125rem;height:.3125rem;background-color:var(--primary-400);-webkit-appearance:none}.sbsmartscroll-style::-webkit-scrollbar-thumb{background-color:var(--gray-400)}.sbsmartscroll-style::-webkit-scrollbar-track{-webkit-box-shadow:inset 0 0 .375rem rgba(var(--rc-rgba-black),0);background-color:var(--gray-0)}.heading{font-size:.875rem;line-height:1.375rem;font-weight:700;text-align:center;color:var(--gray-400);padding:1rem}.child-content-padding{padding:0}.sb-content__bar{margin:.5rem 0;background:var(--gray-0)}"]
                }] }
    ];
    /** @nocollapse */
    TocItemComponent.ctorParameters = function () { return []; };
    TocItemComponent.propDecorators = {
        accordianConfig: [{ type: Input }],
        accordionItems: [{ type: ViewChildren, args: ['sbAccordionItem',] }],
        tocData: [{ type: Input }],
        activeMimeTypeFilter: [{ type: Input }],
        noContentMessage: [{ type: Input }],
        contentStatus: [{ type: Input }],
        selectMode: [{ type: Input }],
        selectAll: [{ type: Input }],
        playBtnConfig: [{ type: Input }],
        platform: [{ type: Input }],
        trackableDefaultImage: [{ type: Input }],
        divs: [{ type: ViewChild, args: ['chapter', { static: false },] }],
        chapterContainer: [{ type: ViewChildren, args: ['chapterContainer',] }],
        type: [{ type: Input }],
        activeContent: [{ type: Input }],
        recogniseCollection: [{ type: Input }],
        tocCardClick: [{ type: Output }],
        noContent: [{ type: Output }],
        selectedItem: [{ type: Output }],
        playButtonClick: [{ type: Output }]
    };
    return TocItemComponent;
}());
export { TocItemComponent };
if (false) {
    /** @type {?} */
    TocItemComponent.prototype.accordianConfig;
    /** @type {?} */
    TocItemComponent.prototype.accordionItems;
    /** @type {?} */
    TocItemComponent.prototype.tocData;
    /** @type {?} */
    TocItemComponent.prototype.activeMimeTypeFilter;
    /** @type {?} */
    TocItemComponent.prototype.noContentMessage;
    /** @type {?} */
    TocItemComponent.prototype.contentStatus;
    /** @type {?} */
    TocItemComponent.prototype.selectMode;
    /** @type {?} */
    TocItemComponent.prototype.selectAll;
    /** @type {?} */
    TocItemComponent.prototype.playBtnConfig;
    /** @type {?} */
    TocItemComponent.prototype.platform;
    /** @type {?} */
    TocItemComponent.prototype.trackableDefaultImage;
    /** @type {?} */
    TocItemComponent.prototype.divs;
    /** @type {?} */
    TocItemComponent.prototype.chapterContainer;
    /** @type {?} */
    TocItemComponent.prototype.type;
    /** @type {?} */
    TocItemComponent.prototype.activeContent;
    /** @type {?} */
    TocItemComponent.prototype.recogniseCollection;
    /** @type {?} */
    TocItemComponent.prototype.tocCardClick;
    /** @type {?} */
    TocItemComponent.prototype.noContent;
    /** @type {?} */
    TocItemComponent.prototype.selectedItem;
    /** @type {?} */
    TocItemComponent.prototype.playButtonClick;
    /**
     * @type {?}
     * @private
     */
    TocItemComponent.prototype.resetActiveContent;
    /** @type {?} */
    TocItemComponent.prototype.isMimeTypeFilterChanged;
    /**
     * @type {?}
     * @private
     */
    TocItemComponent.prototype.isSameMimeTypeInChildren;
    /**
     * @type {?}
     * @private
     */
    TocItemComponent.prototype.isSameMimeType;
    /**
     * @type {?}
     * @private
     */
    TocItemComponent.prototype.isChildrenPresent;
    /**
     * @type {?}
     * @private
     */
    TocItemComponent.prototype.subscriptions;
}
//# sourceMappingURL=data:application/json;base64,