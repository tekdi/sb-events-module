/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input, Output, EventEmitter } from '@angular/core';
import { TocCardType } from '../../card/models';
export class TocChildItemComponent {
    constructor() {
        this.activeMimeTypeFilter = ['all'];
        this.type = TocCardType.TEXTBOOK;
        this.contentStatus = [];
        this.disabled = '';
        this.scoreLabel = '';
        this.tocCardClick = new EventEmitter();
        this.playButtonClick = new EventEmitter();
    }
    /**
     * @return {?}
     */
    ngOnInit() {
    }
    /**
     * @param {?} activeMimeType
     * @param {?} mimeType
     * @param {?} content
     * @return {?}
     */
    hasMimeType(activeMimeType, mimeType, content) {
        if (!activeMimeType) {
            return true;
        }
        else {
            if (activeMimeType.indexOf('all') > -1) {
                // if (content.contentData.mimeType === MimeType.COLLECTION && !content.children) {
                //     return false;
                // }
                return true;
            }
            return !!activeMimeType.find((/**
             * @param {?} m
             * @return {?}
             */
            m => m === mimeType));
        }
    }
    /**
     * @param {?} event
     * @return {?}
     */
    tocCardClickHandler(event) {
        this.tocCardClick.emit(Object.assign({}, event));
    }
    /**
     * @param {?} tocData
     * @param {?} item
     * @return {?}
     */
    createUniqueId(tocData, item) {
        item['sbUniqueIdentifier'] = tocData.identifier + '_' + item.identifier;
    }
    /**
     * @param {?} event
     * @return {?}
     */
    onPlayButtonClick(event) {
        this.playButtonClick.emit(Object.assign({}, event));
    }
}
TocChildItemComponent.decorators = [
    { type: Component, args: [{
                selector: 'sb-toc-child-item',
                template: "<ng-container *ngIf=\"childData | hasMimeType: activeMimeTypeFilter\">\r\n  <div *ngIf=\"childData?.mimeType === 'application/vnd.ekstep.content-collection' && childData?.children\">\r\n    <h4 class=\"sbchapter__title text-left sb__ellipsis sb__ellipsis--two ml-16 mb-8\" title=\"{{childData?.name}}\">{{childData?.name}}</h4>\r\n  </div>\r\n</ng-container>\r\n\r\n<ng-container *ngIf=\"childData?.mimeType !== 'application/vnd.ekstep.content-collection' && hasMimeType(activeMimeTypeFilter, childData?.mimeType, childData) ||\r\n  (childData?.contentData?.trackable?.enabled === 'Yes' || childData?.trackable?.enabled === 'Yes')\">\r\n  <sb-toc-card [content]=\"childData\" (tocCardClick)=\"tocCardClickHandler($event)\" [activeContent]=\"activeContent\"\r\n    [type]=\"type\" [contentStatus]=\"contentStatus\" [playBtnConfig]=\"playBtnConfig\" (playButtonClick)=\"onPlayButtonClick($event)\"\r\n    [platform]=\"platform\" [trackableDefaultImage]=\"trackableDefaultImage\" [maxAttempts]=\"maxAttempts\" [disabled]=\"disabled\" [scoreLabel]=\"scoreLabel\">\r\n  </sb-toc-card>\r\n</ng-container>\r\n\r\n<div *ngIf=\"childData?.children && !(childData?.contentData?.trackable?.enabled === 'Yes' || childData?.trackable?.enabled === 'Yes')\">\r\n  <div *ngFor=\"let child of childData?.children; let j = index;\" [id]=\"child.identifier\">\r\n    {{ createUniqueId(childData, child) }}\r\n    <sb-toc-child-item [childData]=\"child\" [activeContent]=\"activeContent\" (tocCardClick)=\"tocCardClickHandler($event)\"\r\n      [activeMimeTypeFilter]=\"activeMimeTypeFilter\" [type]=\"type\" [contentStatus]=\"contentStatus\" [playBtnConfig]=\"playBtnConfig\" \r\n      (playButtonClick)=\"onPlayButtonClick($event)\" [platform]=\"platform\" [trackableDefaultImage]=\"trackableDefaultImage\">\r\n    </sb-toc-child-item>\r\n  </div>\r\n</div>",
                styles: [".sbchapter__title{font-size:.875rem;line-height:1.375rem}"]
            }] }
];
/** @nocollapse */
TocChildItemComponent.ctorParameters = () => [];
TocChildItemComponent.propDecorators = {
    childData: [{ type: Input }],
    activeContent: [{ type: Input }],
    activeMimeTypeFilter: [{ type: Input }],
    type: [{ type: Input }],
    contentStatus: [{ type: Input }],
    playBtnConfig: [{ type: Input }],
    platform: [{ type: Input }],
    trackableDefaultImage: [{ type: Input }],
    maxAttempts: [{ type: Input }],
    disabled: [{ type: Input }],
    scoreLabel: [{ type: Input }],
    tocCardClick: [{ type: Output }],
    playButtonClick: [{ type: Output }]
};
if (false) {
    /** @type {?} */
    TocChildItemComponent.prototype.childData;
    /** @type {?} */
    TocChildItemComponent.prototype.activeContent;
    /** @type {?} */
    TocChildItemComponent.prototype.activeMimeTypeFilter;
    /** @type {?} */
    TocChildItemComponent.prototype.type;
    /** @type {?} */
    TocChildItemComponent.prototype.contentStatus;
    /** @type {?} */
    TocChildItemComponent.prototype.playBtnConfig;
    /** @type {?} */
    TocChildItemComponent.prototype.platform;
    /** @type {?} */
    TocChildItemComponent.prototype.trackableDefaultImage;
    /** @type {?} */
    TocChildItemComponent.prototype.maxAttempts;
    /** @type {?} */
    TocChildItemComponent.prototype.disabled;
    /** @type {?} */
    TocChildItemComponent.prototype.scoreLabel;
    /** @type {?} */
    TocChildItemComponent.prototype.tocCardClick;
    /** @type {?} */
    TocChildItemComponent.prototype.playButtonClick;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidG9jLWNoaWxkLWl0ZW0uY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQHByb2plY3Qtc3VuYmlyZC9jb21tb24tY29uc3VtcHRpb24tdjgvIiwic291cmNlcyI6WyJsaWIvY29udGVudC1kZXRhaWxzL3RvYy1jaGlsZC1pdGVtL3RvYy1jaGlsZC1pdGVtLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBVSxLQUFLLEVBQUUsTUFBTSxFQUFFLFlBQVksRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUMvRSxPQUFPLEVBQUUsV0FBVyxFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFPaEQsTUFBTSxPQUFPLHFCQUFxQjtJQWdCaEM7UUFiUyx5QkFBb0IsR0FBRyxDQUFDLEtBQUssQ0FBQyxDQUFDO1FBQy9CLFNBQUksR0FBZ0IsV0FBVyxDQUFDLFFBQVEsQ0FBQztRQUN6QyxrQkFBYSxHQUFHLEVBQUUsQ0FBQztRQUtuQixhQUFRLEdBQUcsRUFBRSxDQUFDO1FBQ2QsZUFBVSxHQUFHLEVBQUUsQ0FBQztRQUVmLGlCQUFZLEdBQXNCLElBQUksWUFBWSxFQUFFLENBQUM7UUFDckQsb0JBQWUsR0FBc0IsSUFBSSxZQUFZLEVBQUUsQ0FBQztJQUVsRCxDQUFDOzs7O0lBRWpCLFFBQVE7SUFDUixDQUFDOzs7Ozs7O0lBRUQsV0FBVyxDQUFDLGNBQXdCLEVBQUUsUUFBZ0IsRUFBRSxPQUFPO1FBQzdELElBQUksQ0FBQyxjQUFjLEVBQUU7WUFDbkIsT0FBTyxJQUFJLENBQUM7U0FDYjthQUFNO1lBQ0wsSUFBSSxjQUFjLENBQUMsT0FBTyxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsQ0FBQyxFQUFFO2dCQUN0QyxtRkFBbUY7Z0JBQ25GLG9CQUFvQjtnQkFDcEIsSUFBSTtnQkFDSixPQUFPLElBQUksQ0FBQzthQUNiO1lBQ0QsT0FBTyxDQUFDLENBQUMsY0FBYyxDQUFDLElBQUk7Ozs7WUFBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsS0FBSyxRQUFRLEVBQUMsQ0FBQztTQUNuRDtJQUNILENBQUM7Ozs7O0lBRUQsbUJBQW1CLENBQUMsS0FBSztRQUN2QixJQUFJLENBQUMsWUFBWSxDQUFDLElBQUksbUJBQU0sS0FBSyxFQUFHLENBQUM7SUFDdkMsQ0FBQzs7Ozs7O0lBRUQsY0FBYyxDQUFDLE9BQU8sRUFBRSxJQUFJO1FBQzFCLElBQUksQ0FBQyxvQkFBb0IsQ0FBQyxHQUFHLE9BQU8sQ0FBQyxVQUFVLEdBQUcsR0FBRyxHQUFHLElBQUksQ0FBQyxVQUFVLENBQUM7SUFDMUUsQ0FBQzs7Ozs7SUFFRCxpQkFBaUIsQ0FBQyxLQUFLO1FBQ3JCLElBQUksQ0FBQyxlQUFlLENBQUMsSUFBSSxtQkFBTSxLQUFLLEVBQUcsQ0FBQztJQUMxQyxDQUFDOzs7WUFsREYsU0FBUyxTQUFDO2dCQUNULFFBQVEsRUFBRSxtQkFBbUI7Z0JBQzdCLDJ6REFBOEM7O2FBRS9DOzs7Ozt3QkFFRSxLQUFLOzRCQUNMLEtBQUs7bUNBQ0wsS0FBSzttQkFDTCxLQUFLOzRCQUNMLEtBQUs7NEJBQ0wsS0FBSzt1QkFDTCxLQUFLO29DQUNMLEtBQUs7MEJBQ0wsS0FBSzt1QkFDTCxLQUFLO3lCQUNMLEtBQUs7MkJBRUwsTUFBTTs4QkFDTixNQUFNOzs7O0lBYlAsMENBQW1COztJQUNuQiw4Q0FBdUI7O0lBQ3ZCLHFEQUF3Qzs7SUFDeEMscUNBQWtEOztJQUNsRCw4Q0FBNEI7O0lBQzVCLDhDQUF1Qjs7SUFDdkIseUNBQWtCOztJQUNsQixzREFBK0I7O0lBQy9CLDRDQUFxQjs7SUFDckIseUNBQXVCOztJQUN2QiwyQ0FBeUI7O0lBRXpCLDZDQUErRDs7SUFDL0QsZ0RBQWtFIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBPbkluaXQsIElucHV0LCBPdXRwdXQsIEV2ZW50RW1pdHRlciB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBUb2NDYXJkVHlwZSB9IGZyb20gJy4uLy4uL2NhcmQvbW9kZWxzJztcclxuXHJcbkBDb21wb25lbnQoe1xyXG4gIHNlbGVjdG9yOiAnc2ItdG9jLWNoaWxkLWl0ZW0nLFxyXG4gIHRlbXBsYXRlVXJsOiAnLi90b2MtY2hpbGQtaXRlbS5jb21wb25lbnQuaHRtbCcsXHJcbiAgc3R5bGVVcmxzOiBbJy4vdG9jLWNoaWxkLWl0ZW0uY29tcG9uZW50LnNjc3MnXVxyXG59KVxyXG5leHBvcnQgY2xhc3MgVG9jQ2hpbGRJdGVtQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0IHtcclxuICBASW5wdXQoKSBjaGlsZERhdGE7XHJcbiAgQElucHV0KCkgYWN0aXZlQ29udGVudDtcclxuICBASW5wdXQoKSBhY3RpdmVNaW1lVHlwZUZpbHRlciA9IFsnYWxsJ107XHJcbiAgQElucHV0KCkgdHlwZTogVG9jQ2FyZFR5cGUgPSBUb2NDYXJkVHlwZS5URVhUQk9PSztcclxuICBASW5wdXQoKSBjb250ZW50U3RhdHVzID0gW107XHJcbiAgQElucHV0KCkgcGxheUJ0bkNvbmZpZztcclxuICBASW5wdXQoKSBwbGF0Zm9ybTtcclxuICBASW5wdXQoKSB0cmFja2FibGVEZWZhdWx0SW1hZ2U7XHJcbiAgQElucHV0KCkgbWF4QXR0ZW1wdHM7XHJcbiAgQElucHV0KCkgZGlzYWJsZWQgPSAnJztcclxuICBASW5wdXQoKSBzY29yZUxhYmVsID0gJyc7XHJcblxyXG4gIEBPdXRwdXQoKSB0b2NDYXJkQ2xpY2s6IEV2ZW50RW1pdHRlcjxhbnk+ID0gbmV3IEV2ZW50RW1pdHRlcigpO1xyXG4gIEBPdXRwdXQoKSBwbGF5QnV0dG9uQ2xpY2s6IEV2ZW50RW1pdHRlcjxhbnk+ID0gbmV3IEV2ZW50RW1pdHRlcigpO1xyXG5cclxuICBjb25zdHJ1Y3RvcigpIHsgfVxyXG5cclxuICBuZ09uSW5pdCgpIHtcclxuICB9XHJcblxyXG4gIGhhc01pbWVUeXBlKGFjdGl2ZU1pbWVUeXBlOiBzdHJpbmdbXSwgbWltZVR5cGU6IHN0cmluZywgY29udGVudCk6IGJvb2xlYW4ge1xyXG4gICAgaWYgKCFhY3RpdmVNaW1lVHlwZSkge1xyXG4gICAgICByZXR1cm4gdHJ1ZTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIGlmIChhY3RpdmVNaW1lVHlwZS5pbmRleE9mKCdhbGwnKSA+IC0xKSB7XHJcbiAgICAgICAgLy8gaWYgKGNvbnRlbnQuY29udGVudERhdGEubWltZVR5cGUgPT09IE1pbWVUeXBlLkNPTExFQ1RJT04gJiYgIWNvbnRlbnQuY2hpbGRyZW4pIHtcclxuICAgICAgICAvLyAgICAgcmV0dXJuIGZhbHNlO1xyXG4gICAgICAgIC8vIH1cclxuICAgICAgICByZXR1cm4gdHJ1ZTtcclxuICAgICAgfVxyXG4gICAgICByZXR1cm4gISFhY3RpdmVNaW1lVHlwZS5maW5kKG0gPT4gbSA9PT0gbWltZVR5cGUpO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgdG9jQ2FyZENsaWNrSGFuZGxlcihldmVudCkge1xyXG4gICAgdGhpcy50b2NDYXJkQ2xpY2suZW1pdCh7IC4uLmV2ZW50IH0pO1xyXG4gIH1cclxuXHJcbiAgY3JlYXRlVW5pcXVlSWQodG9jRGF0YSwgaXRlbSkge1xyXG4gICAgaXRlbVsnc2JVbmlxdWVJZGVudGlmaWVyJ10gPSB0b2NEYXRhLmlkZW50aWZpZXIgKyAnXycgKyBpdGVtLmlkZW50aWZpZXI7XHJcbiAgfVxyXG5cclxuICBvblBsYXlCdXR0b25DbGljayhldmVudCkge1xyXG4gICAgdGhpcy5wbGF5QnV0dG9uQ2xpY2suZW1pdCh7IC4uLmV2ZW50IH0pO1xyXG4gIH1cclxuXHJcbn1cclxuIl19