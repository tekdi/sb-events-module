/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input, Output, EventEmitter, ViewChild, QueryList, ViewChildren } from '@angular/core';
import { ExpandBehavior, ExpandMode, FlattenedType, TocCardType } from '../../card/models';
import { MimeTypePipe, MimeTypeMasterData } from '../../pipes-module/mime-type';
export class TocItemComponent {
    constructor() {
        this.accordianConfig = {
            expandMode: ExpandMode.MULTIPLE,
            expandBehavior: ExpandBehavior.NONE
        };
        this.activeMimeTypeFilter = ['all'];
        this.noContentMessage = 'No content available';
        this.contentStatus = [];
        this.trackableDefaultImage = '';
        this.type = "";
        this.recogniseCollection = false;
        this.tocCardClick = new EventEmitter();
        this.noContent = new EventEmitter();
        this.selectedItem = new EventEmitter();
        this.playButtonClick = new EventEmitter();
        this.resetActiveContent = false;
        this.isMimeTypeFilterChanged = false;
        this.isSameMimeTypeInChildren = ((/**
         * @param {?} mimeTypesCount
         * @param {?} activeMimeType
         * @return {?}
         */
        (mimeTypesCount, activeMimeType) => {
            /** @type {?} */
            const contentMimeType = Object.keys(JSON.parse(mimeTypesCount));
            return Boolean(activeMimeType.filter((/**
             * @param {?} value
             * @return {?}
             */
            value => contentMimeType.includes(value))).length);
        }));
        this.isSameMimeType = (/**
         * @param {?} currentContent
         * @return {?}
         */
        (currentContent) => this.activeMimeTypeFilter.find((/**
         * @param {?} mimeType
         * @return {?}
         */
        mimeType => mimeType === currentContent.mimeType)));
        this.isChildrenPresent = (/**
         * @param {?} currentContent
         * @return {?}
         */
        (currentContent) => Boolean(currentContent.children && currentContent.children.length));
        this.subscriptions = [];
    }
    /**
     * @return {?}
     */
    get FlattenedType() { return FlattenedType; }
    /**
     * @return {?}
     */
    get MimeTypeMasterData() { return MimeTypeMasterData; }
    /**
     * @return {?}
     */
    get ExpandBehavior() { return ExpandBehavior; }
    /**
     * @return {?}
     */
    ngOnInit() {
        this.setActiveContent();
    }
    /**
     * @param {?} changes
     * @return {?}
     */
    ngOnChanges(changes) {
        if (changes.activeMimeTypeFilter) {
            this.isMimeTypeFilterChanged = false;
            this.resetActiveContent = true;
        }
        else if (changes.tocData) {
            this.setActiveContent();
        }
        else if (changes.selectAll) {
            this.selectAllItems(this.selectAll);
        }
    }
    /**
     * @return {?}
     */
    ngAfterViewInit() {
        /** @type {?} */
        const subscription = this.accordionItems.changes.subscribe((/**
         * @param {?} change
         * @return {?}
         */
        change => {
            if (this.resetActiveContent && this.accordionItems.length && this.accordianConfig.expandBehavior === ExpandBehavior.EXPAND_FIRST) {
                this.resetActiveContent = false;
                this.accordionItems.first.collapsed = false;
                this.collapsedChangeHandler(false, this.accordionItems.first);
            }
        }));
        this.subscriptions.push(subscription);
    }
    /**
     * @return {?}
     */
    setActiveContent() {
        if (this.tocData && this.tocData.children) {
            if ((this.tocData.children[0].contentData && this.tocData.children[0].contentData.trackable && this.tocData.children[0].contentData.trackable.enabled === 'Yes') ||
                (this.tocData.children[0].trackable && this.tocData.children[0].trackable.enabled === 'Yes')) {
                return;
            }
            /** @type {?} */
            const flattenDeepContents = this.flattenDeep(this.tocData.children);
            if (!this.activeContent) {
                this.activeContent = this.firstNonCollectionContent(flattenDeepContents);
            }
            if (!this.activeContent) {
                this.noContent.emit({ message: 'No Content Available' });
            }
        }
    }
    /**
     * @param {?} content
     * @return {?}
     */
    filterChildren(content) {
        // Check for the ActiveMimeType
        if (this.activeMimeTypeFilter.includes('all')) {
            if (content.mimeType === MimeTypeMasterData.COLLECTION) {
                return this.isShowContent(content, true);
            }
            return true; // Return true for all the content except collection mimeType
        }
        else if (content.mimeType && this.isSameMimeType(content)) {
            return true;
        }
        else if (content.mimeType === MimeTypeMasterData.COLLECTION) {
            return this.isShowContent(content, false);
        }
        else {
            return false;
        }
    }
    /**
     * @private
     * @param {?} content
     * @param {?} isActiveFilterAll
     * @return {?}
     */
    isShowContent(content, isActiveFilterAll) {
        if (content.mimeTypesCount && !isActiveFilterAll) {
            return this.isSameMimeTypeInChildren(content.mimeTypesCount, this.activeMimeTypeFilter);
        }
        else if (this.isChildrenPresent(content)) {
            /** @type {?} */
            const contentList = this.flattenDeep(content.children);
            return isActiveFilterAll ? contentList.some((/**
             * @param {?} c
             * @return {?}
             */
            (c) => c.mimeType !== MimeTypeMasterData.COLLECTION)) :
                contentList.some((/**
                 * @param {?} c
                 * @return {?}
                 */
                (c) => this.isSameMimeType(c)));
        }
        else {
            return false;
        }
    }
    /**
     * @param {?} event
     * @return {?}
     */
    onTocCardClick(event) {
        /** @type {?} */
        const rollup = this.getRollup(this.tocData, event.data.sbUniqueIdentifier);
        if (rollup.length) {
            rollup.pop();
        }
        this.tocCardClick.emit(Object.assign({}, event, { rollup }));
    }
    /**
     * @param {?} collapsed
     * @param {?} item
     * @return {?}
     */
    collapsedChangeHandler(collapsed, item) {
        if (this.accordianConfig.expandMode === ExpandMode.SINGLE && !collapsed) {
            this.accordionItems.filter((/**
             * @param {?} i
             * @return {?}
             */
            i => i !== item)).forEach((/**
             * @param {?} i
             * @return {?}
             */
            (i) => {
                if (i.expanded) {
                    i.expanded = false;
                }
            }));
        }
    }
    /**
     * @private
     * @param {?} contents
     * @return {?}
     */
    firstNonCollectionContent(contents) {
        return contents.find((/**
         * @param {?} content
         * @return {?}
         */
        (content) => content.mimeType !== 'application/vnd.ekstep.content-collection'));
    }
    /**
     * @private
     * @param {?} contents
     * @return {?}
     */
    flattenDeep(contents) {
        if (contents) {
            return contents.reduce((/**
             * @param {?} acc
             * @param {?} val
             * @return {?}
             */
            (acc, val) => {
                if (val.children) {
                    acc.push(val);
                    return acc.concat(this.flattenDeep(val.children));
                }
                else {
                    return acc.concat(val);
                }
            }), []);
        }
    }
    /**
     * @param {?} index
     * @param {?} item
     * @return {?}
     */
    isExpanded(index, item) {
        /** @type {?} */
        const activeContent = item.children ? this.flattenDeep(item.children).find((/**
         * @param {?} child
         * @return {?}
         */
        (child) => {
            if (this.activeContent && this.activeContent.parent) {
                return child.identifier === this.activeContent.identifier && child.parent === this.activeContent.parent;
            }
            else {
                return child.identifier === this.activeContent.identifier;
            }
        })) : undefined;
        return Boolean(activeContent || item && item.mimeType !== MimeTypeMasterData.COLLECTION);
    }
    /**
     * @param {?} item
     * @param {?} index
     * @return {?}
     */
    isShowBody(item, index) {
        if (item) {
            /** @type {?} */
            const isShowAllMimeType = (/**
             * @return {?}
             */
            () => this.activeMimeTypeFilter.indexOf('all') > -1);
            /** @type {?} */
            const isCollection = (/**
             * @return {?}
             */
            () => item.mimeType === MimeTypeMasterData.COLLECTION);
            /** @type {?} */
            const isMathchesMimeType = (/**
             * @return {?}
             */
            () => this.activeMimeTypeFilter.indexOf(item.mimeType) > -1);
            /** @type {?} */
            const isLastContent = (/**
             * @return {?}
             */
            () => this.tocData.children.length === index + 1);
            if (this.tocData && isShowAllMimeType() || (isCollection() || isMathchesMimeType())) {
                this.isMimeTypeFilterChanged = true;
                return true;
            }
            else if (this.activeMimeTypeFilter.indexOf(item.mimeType) < 0 && !isLastContent()) {
                return false;
            }
            else if (this.activeMimeTypeFilter.indexOf(item.mimeType) < 0 && isLastContent()) {
                if (this.isMimeTypeFilterChanged) {
                    return false;
                }
                this.isMimeTypeFilterChanged = false;
                return true;
            }
        }
        return false;
    }
    /**
     * @param {?} tree
     * @param {?} identifier
     * @return {?}
     */
    getRollup(tree, identifier) {
        /** @type {?} */
        let rollup = [tree.identifier];
        if (tree.sbUniqueIdentifier === identifier) {
            return rollup;
        }
        if (!tree.children || !tree.children.length) {
            return [];
        }
        /** @type {?} */
        let notDone = true;
        /** @type {?} */
        let childRollup;
        /** @type {?} */
        let index = 0;
        while (notDone && tree.children[index]) {
            childRollup = this.getRollup(tree.children[index], identifier);
            if (childRollup && childRollup.length) {
                notDone = false;
            }
            index++;
        }
        if (childRollup && childRollup.length) {
            rollup.push(...childRollup);
            return rollup;
        }
        else {
            return [];
        }
    }
    /**
     * @param {?} tocData
     * @param {?} item
     * @return {?}
     */
    createUniqueId(tocData, item) {
        item['sbUniqueIdentifier'] = tocData.identifier + '_' + item.identifier;
    }
    /**
     * \@since #SH-362
     * \@description - It will despatch an event on individual checkbox click
     * @param {?} item - selected children data.
     * @return {?}
     */
    onItemSelect(item) {
        this.selectedItem.emit({ data: item });
    }
    /**
     * \@since #SH-362
     * \@description - this method will mark every children of tocData object with an additional variable -
     *                selected: true/false based on the value of 'isSelectAll' and also despatch an event
     *                with the data.
     * @param {?} isSelectAll - boolean, which will be true/false if 'Select all checkbox is checked/unchecked
     * @return {?}
     */
    selectAllItems(isSelectAll) {
        this.tocData['children'].forEach((/**
         * @param {?} item
         * @return {?}
         */
        item => {
            item.selected = isSelectAll;
        }));
        this.selectedItem.emit({ selectAll: isSelectAll, data: this.tocData['children'] });
    }
    /**
     * @param {?} event
     * @return {?}
     */
    onPlayButtonClick(event) {
        /** @type {?} */
        const rollup = this.getRollup(this.tocData, event.data.sbUniqueIdentifier);
        if (rollup.length) {
            rollup.pop();
        }
        this.playButtonClick.emit(Object.assign({}, event, { rollup }));
    }
    /**
     * @param {?} content
     * @return {?}
     */
    isFlattenedType(content) {
        if (!(this.type === TocCardType.TRACKABLE) ||
            !((content.contentData && content.contentData.trackable && content.contentData.trackable.enabled === 'Yes') ||
                (content.trackable && content.trackable.enabled === 'Yes'))) {
            return FlattenedType.EXPAND;
        }
        else if (this.type === TocCardType.TRACKABLE &&
            ((content.contentData && content.contentData.trackable && content.contentData.trackable.enabled === 'Yes') ||
                (content.trackable && content.trackable.enabled === 'Yes'))) {
            return FlattenedType.COLLAPSE;
        }
        return '';
    }
    /**
     * @return {?}
     */
    ngOnDestroy() {
        this.subscriptions.forEach((/**
         * @param {?} s
         * @return {?}
         */
        s => s.unsubscribe()));
    }
}
TocItemComponent.decorators = [
    { type: Component, args: [{
                selector: 'sb-toc-item',
                template: "<div *ngFor=\"let item of tocData?.children; let index = index;\">\r\n  <ng-container *ngIf=\"(item | hasMimeType: activeMimeTypeFilter) || this.accordianConfig.expandBehavior === ExpandBehavior.NONE\">\r\n  <div *ngIf=\"item?.mimeType === MimeTypeMasterData?.COLLECTION && !(item?.contentData?.trackable?.enabled === 'Yes' || item?.trackable?.enabled === 'Yes')\">\r\n    <sb-accordion [multi]=\"false\" [id]=\"item.identifier\">\r\n      <sb-accordion-item #sbAccordionItem [expanded]=\"isExpanded(index, item)\" (collapsedChange)=\"collapsedChangeHandler($event, sbAccordionItem);\">\r\n        {{ createUniqueId(tocData, item) }}\r\n        <sb-accordion-header>\r\n            <div class=\"sb-checkbox sb-checkbox-primary\" *ngIf=\"selectMode\">\r\n                <input (change)=\"onItemSelect(item)\" [(ngModel)]=\"item.selected\" type=\"checkbox\" name=\"example\">\r\n                <label class=\"mb-0\"><span class=\"title font-weight-bold\">{{item?.name}}</span></label>\r\n            </div>\r\n            <span *ngIf=\"!selectMode\" class=\"title\">{{item?.name}}</span>\r\n        </sb-accordion-header>\r\n        <sb-accordion-body *ngIf=\"isShowBody(item, index)\">\r\n          <div *ngIf=\"item && (item | hasMimeType: activeMimeTypeFilter);else noContent\" #chapterContainer>\r\n            <ng-container *ngIf=\"item?.children?.length\">\r\n              <ng-container *ngFor=\"let child of item?.children; let j = index;\">\r\n                {{ createUniqueId(item, child) }}\r\n                <div class=\"sbchapter\"\r\n                  *ngIf=\"recogniseCollection && filterChildren(child) && child.item?.contentType === 'TextBook'\">\r\n                  <sb-my-course-card [type]=\"'recently_viewed'\"></sb-my-course-card>\r\n                </div>\r\n                <div class=\"sbchapter\"\r\n                  *ngIf=\"recogniseCollection && filterChildren(child) && child.item?.contentType === 'Course'\">\r\n                  <sb-my-course-card [type]=\"'recently_viewed'\"></sb-my-course-card>\r\n                </div>\r\n                <div class=\"sbchapter\" *ngIf=\"filterChildren(child)\" [id]=\"child.identifier\">\r\n                  <ng-container *ngIf=\"isFlattenedType(child) === FlattenedType.EXPAND\">\r\n                    <sb-toc-child-item *ngIf=\"type\" [type]=\"type\" [contentStatus]=\"contentStatus\" [childData]=\"child\"\r\n                      [activeMimeTypeFilter]=\"activeMimeTypeFilter\" [activeContent]=\"activeContent\" [platform]=\"platform\"\r\n                      (tocCardClick)=\"onTocCardClick($event)\" [playBtnConfig]=\"playBtnConfig\" (playButtonClick)=\"onPlayButtonClick($event)\"\r\n                      [trackableDefaultImage]=\"trackableDefaultImage\">\r\n                    </sb-toc-child-item>\r\n                    <sb-toc-child-item *ngIf=\"!type\" [childData]=\"child\" [activeMimeTypeFilter]=\"activeMimeTypeFilter\"\r\n                      [activeContent]=\"activeContent\" (tocCardClick)=\"onTocCardClick($event)\" [playBtnConfig]=\"playBtnConfig\"\r\n                      (playButtonClick)=\"onPlayButtonClick($event)\" [platform]=\"platform\" [trackableDefaultImage]=\"trackableDefaultImage\">\r\n                    </sb-toc-child-item>\r\n                  </ng-container>\r\n\r\n                  <ng-container *ngIf=\"isFlattenedType(child) === FlattenedType.COLLAPSE\">\r\n                    <sb-toc-card *ngIf=\"type\" [type]=\"type\" [content]=\"child\" (tocCardClick)=\"onTocCardClick($event)\"\r\n                      [activeContent]=\"activeContent\" [playBtnConfig]=\"playBtnConfig\" (playButtonClick)=\"onPlayButtonClick($event)\"\r\n                      [trackableDefaultImage]=\"trackableDefaultImage\" [platform]=\"platform\">\r\n                    </sb-toc-card>\r\n                    <sb-toc-card *ngIf=\"!type\" [content]=\"child\" (tocCardClick)=\"onTocCardClick($event)\"\r\n                      [activeContent]=\"activeContent\" [playBtnConfig]=\"playBtnConfig\" (playButtonClick)=\"onPlayButtonClick($event)\"\r\n                      [trackableDefaultImage]=\"trackableDefaultImage\" [platform]=\"platform\">\r\n                    </sb-toc-card>\r\n                  </ng-container>\r\n\r\n                </div>\r\n              </ng-container>\r\n            </ng-container>\r\n            <ng-container *ngIf=\"item?.mimeType === MimeTypeMasterData?.COLLECTION && !item?.children?.length\">\r\n              <div class=\"heading\">{{noContentMessage}}</div>\r\n            </ng-container>\r\n          </div>\r\n          <ng-template #noContent>\r\n            <div class=\"heading\">{{noContentMessage}}</div>\r\n          </ng-template>\r\n        </sb-accordion-body>\r\n      </sb-accordion-item>\r\n    </sb-accordion>\r\n  </div>\r\n  <div *ngIf=\"(item?.mimeType !== MimeTypeMasterData?.COLLECTION && !item?.children?.length) ||\r\n    item?.contentData?.trackable?.enabled === 'Yes' || item?.trackable?.enabled === 'Yes'\" class=\"sb-content__bar\">\r\n    <ng-container>\r\n    <div class=\"child-content-padding\">\r\n      <sb-toc-card *ngIf=\"type\" [type]=\"type\" [contentStatus]=\"contentStatus\" [content]=\"item\"\r\n        (tocCardClick)=\"onTocCardClick($event)\" [activeContent]=\"activeContent\" [playBtnConfig]=\"playBtnConfig\"\r\n        (playButtonClick)=\"onPlayButtonClick($event)\" [platform]=\"platform\" [trackableDefaultImage]=\"trackableDefaultImage\">\r\n      </sb-toc-card>\r\n      <sb-toc-card *ngIf=\"!type\" [content]=\"item\" (tocCardClick)=\"onTocCardClick($event)\" [platform]=\"platform\"\r\n        [activeContent]=\"activeContent\" [playBtnConfig]=\"playBtnConfig\" (playButtonClick)=\"onPlayButtonClick($event)\"\r\n        [trackableDefaultImage]=\"trackableDefaultImage\">\r\n      </sb-toc-card>\r\n    </div>\r\n    </ng-container>\r\n  </div>\r\n  </ng-container>\r\n</div>\r\n",
                providers: [MimeTypePipe],
                styles: [".sbchapter{border-bottom:.0625rem solid var(--gray-100);padding:0 0 1rem;margin-bottom:1rem}.sbchapter:last-child{border-bottom:0;margin-bottom:0;padding-bottom:0}.sbchapter h4{font-size:.625rem;line-height:1.125rem;color:var(--gray-800);margin-bottom:.5rem}.sbchapter__item{background:var(--white);box-shadow:0 .1875rem .25rem 0 rgba(var(--rc-rgba-primary),.1);border:.03125rem solid rgba(var(--rc-rgba-primary),.5);display:flex;align-items:center;justify-content:space-between;margin-bottom:.5rem;padding:.5rem;cursor:pointer;min-height:3.5rem}.sbchapter__item h4{font-size:.75rem;line-height:1.25rem;color:var(--primary-400);margin:0;padding:0}.sbchapter__item .sbchapter__img{width:1.5rem;height:1.5rem;flex:0 0 1.5rem}.sbchapter__item .sbchapter__img img{width:100%}.sbchapter__item .sbchapter__img .icon-svg svg.icon .icon-svg--primary{fill:#9cb9ff}.sbchapter__item:hover{background:var(--gray-0)}.sbchapter__item--active,.sbchapter__item--active:hover{background:var(--primary-100)}.sbchapter-open{border-bottom:.0625rem solid #e0e0e0;padding-bottom:var(--base-block-space)}.sbchapter-open__title{font-size:.875rem;font-weight:700;color:var(--primary-400);margin:0;padding:1rem;width:100%}.sbchapter-open__topics{padding:0}.sbchapter-open__topics__title{font-size:.875rem;line-height:1.375rem;margin:0 0 .5rem;color:var(--primary-400);padding:0 1rem}.sbchapter-open__topic{font-size:.75rem;line-height:1.25rem;padding:8px 2rem;margin:0;color:var(--primary-400)}.sbchapter-open__topic--active{background:var(--primary-100)}.sbchapter-open__topic:hover{background:var(--gray-0)}.sbsmartscroll-style::-webkit-scrollbar{width:.3125rem;height:.3125rem;background-color:var(--primary-400);-webkit-appearance:none}.sbsmartscroll-style::-webkit-scrollbar-thumb{background-color:var(--gray-400)}.sbsmartscroll-style::-webkit-scrollbar-track{-webkit-box-shadow:inset 0 0 .375rem rgba(var(--rc-rgba-black),0);background-color:var(--gray-0)}.heading{font-size:.875rem;line-height:1.375rem;font-weight:700;text-align:center;color:var(--gray-400);padding:1rem}.child-content-padding{padding:0}.sb-content__bar{margin:.5rem 0;background:var(--gray-0)}"]
            }] }
];
/** @nocollapse */
TocItemComponent.ctorParameters = () => [];
TocItemComponent.propDecorators = {
    accordianConfig: [{ type: Input }],
    accordionItems: [{ type: ViewChildren, args: ['sbAccordionItem',] }],
    tocData: [{ type: Input }],
    activeMimeTypeFilter: [{ type: Input }],
    noContentMessage: [{ type: Input }],
    contentStatus: [{ type: Input }],
    selectMode: [{ type: Input }],
    selectAll: [{ type: Input }],
    playBtnConfig: [{ type: Input }],
    platform: [{ type: Input }],
    trackableDefaultImage: [{ type: Input }],
    divs: [{ type: ViewChild, args: ['chapter', { static: false },] }],
    chapterContainer: [{ type: ViewChildren, args: ['chapterContainer',] }],
    type: [{ type: Input }],
    activeContent: [{ type: Input }],
    recogniseCollection: [{ type: Input }],
    tocCardClick: [{ type: Output }],
    noContent: [{ type: Output }],
    selectedItem: [{ type: Output }],
    playButtonClick: [{ type: Output }]
};
if (false) {
    /** @type {?} */
    TocItemComponent.prototype.accordianConfig;
    /** @type {?} */
    TocItemComponent.prototype.accordionItems;
    /** @type {?} */
    TocItemComponent.prototype.tocData;
    /** @type {?} */
    TocItemComponent.prototype.activeMimeTypeFilter;
    /** @type {?} */
    TocItemComponent.prototype.noContentMessage;
    /** @type {?} */
    TocItemComponent.prototype.contentStatus;
    /** @type {?} */
    TocItemComponent.prototype.selectMode;
    /** @type {?} */
    TocItemComponent.prototype.selectAll;
    /** @type {?} */
    TocItemComponent.prototype.playBtnConfig;
    /** @type {?} */
    TocItemComponent.prototype.platform;
    /** @type {?} */
    TocItemComponent.prototype.trackableDefaultImage;
    /** @type {?} */
    TocItemComponent.prototype.divs;
    /** @type {?} */
    TocItemComponent.prototype.chapterContainer;
    /** @type {?} */
    TocItemComponent.prototype.type;
    /** @type {?} */
    TocItemComponent.prototype.activeContent;
    /** @type {?} */
    TocItemComponent.prototype.recogniseCollection;
    /** @type {?} */
    TocItemComponent.prototype.tocCardClick;
    /** @type {?} */
    TocItemComponent.prototype.noContent;
    /** @type {?} */
    TocItemComponent.prototype.selectedItem;
    /** @type {?} */
    TocItemComponent.prototype.playButtonClick;
    /**
     * @type {?}
     * @private
     */
    TocItemComponent.prototype.resetActiveContent;
    /** @type {?} */
    TocItemComponent.prototype.isMimeTypeFilterChanged;
    /**
     * @type {?}
     * @private
     */
    TocItemComponent.prototype.isSameMimeTypeInChildren;
    /**
     * @type {?}
     * @private
     */
    TocItemComponent.prototype.isSameMimeType;
    /**
     * @type {?}
     * @private
     */
    TocItemComponent.prototype.isChildrenPresent;
    /**
     * @type {?}
     * @private
     */
    TocItemComponent.prototype.subscriptions;
}
//# sourceMappingURL=data:application/json;base64,