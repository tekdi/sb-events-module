/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input, Output, EventEmitter } from '@angular/core';
import { courseSection } from './course-section-data';
import { myCourses } from './my-courses-data';
import { CourseCardGridTypes, CourseCardTypes, ButtonPosition } from '../../card/models';
export class CourseCardsHlistComponent {
    constructor() {
        /* Title for the grid */
        this.title = courseSection.name;
        /* Max card count to be shown */
        this.maxCardCount = 10;
        this.viewMoreButtonText = 'View More';
        /* Show Menu on each card */
        this.isMenu = false;
        this.viewMoreButtonPosition = ButtonPosition.TOP;
        this.viewMoreClick = new EventEmitter();
        this.cardClick = new EventEmitter();
        this.menuClick = new EventEmitter();
    }
    /**
     * @return {?}
     */
    get ButtonPosition() { return ButtonPosition; }
    /**
     * @return {?}
     */
    ngOnInit() {
        if (this.type != null) {
            if (this.type == CourseCardGridTypes.MY_COURSE_CARD_GRID ||
                this.type == CourseCardGridTypes.MY_COURSE_RECENTLY_VIEWED_CARD_GRID) {
                if (!(this.contentList != null)) {
                    this.contentList = myCourses.courses;
                }
            }
            else {
                if (!(this.contentList != null)) {
                    this.contentList = courseSection.contents;
                }
            }
        }
        else {
            this.type = CourseCardGridTypes.COURSE_CARD_GRID;
            if (!(this.contentList != null)) {
                this.contentList = courseSection.contents;
            }
        }
    }
    /**
     * @param {?} changes
     * @return {?}
     */
    ngOnChanges(changes) {
    }
    /**
     * @return {?}
     */
    get CourseCardGridTypes() { return CourseCardGridTypes; }
    /**
     * @return {?}
     */
    get CourseCardTypes() { return CourseCardTypes; }
    /**
     * Triggers event on `View More` Click
     * @param {?} event HTML click event
     * @return {?}
     */
    onViewMoreClick(event) {
        this.viewMoreClick.emit({ event, data: this.contentList });
    }
    /**
     * Triggers event on card click
     * @param {?} event HTML Click event
     * @param {?} data Content data for selected card
     * @return {?}
     */
    onCardClick(event, data) {
        this.cardClick.emit({ event, data });
    }
    /**
     * @param {?} maxCardCounter
     * @return {?}
     */
    range(maxCardCounter) {
        return new Array(maxCardCounter);
    }
    /**
     * @param {?} event
     * @return {?}
     */
    onCardMenuClick(event) {
        this.menuClick.emit(event);
    }
}
CourseCardsHlistComponent.decorators = [
    { type: Component, args: [{
                selector: 'sb-course-cards-hlist',
                template: "<div class=\"layout-course\" *ngIf=\"!isLoading\">\r\n    <div class=\"header\">\r\n        <div class=\"title\">\r\n            {{title}}\r\n            <hr>\r\n        </div>\r\n        <button class=\"sb-btn sb-btn-normal sb-btn-outline-secondary sb-btn-white\"\r\n            *ngIf=\"contentList?.length > maxCardCount && viewMoreButtonPosition === ButtonPosition.TOP\"\r\n            (click)=\"onViewMoreClick($event)\">\r\n            {{viewMoreButtonText}}\r\n        </button>\r\n    </div>\r\n    <div class=\"sb--scrolling-wrapper-flexbox\" *ngIf=\"!multiRow\">\r\n      <div  *ngFor=\"let content of contentList | slice:0:(maxCardCount ? maxCardCount : contentList?.length); let index = index\" class=\"sb--card--container\">\r\n        <sb-course-card [course]=\"content\" (click)=\"onCardClick($event, content)\"  [cardImg]=\"content?.cardImg\" [section]=\"content?.info_to_display\" *ngIf=\"type === CourseCardGridTypes.COURSE_CARD_GRID\" [isMenu]=\"isMenu\"  (menuClick)=\"onCardMenuClick($event)\"></sb-course-card>\r\n        <sb-my-course-card [hideProgress]=\"hideProgress\" [course]=\"content\" (click)=\"onCardClick($event, content)\" [cardImg]=\"content?.cardImg\" [section]=\"content?.info_to_display\" *ngIf=\"type === CourseCardGridTypes.MY_COURSE_CARD_GRID\"></sb-my-course-card>\r\n        <sb-my-course-card [hideProgress]=\"hideProgress\" [course]=\"content\" (click)=\"onCardClick($event, content)\" [cardImg]=\"content?.cardImg\" [section]=\"content?.info_to_display\" [type]=\"CourseCardTypes.RECENTLY_VIEWED\" *ngIf=\"type === CourseCardGridTypes.MY_COURSE_RECENTLY_VIEWED_CARD_GRID\"></sb-my-course-card>\r\n        <sb-course-curiculum-card [cardData]=\"content\" [index]=\"index\" (click)=\"onCardClick($event, content)\" *ngIf=\"type === CourseCardGridTypes.CURICULUM_COURSE_CARD_GRID\"></sb-course-curiculum-card>\r\n      </div>\r\n      <div class=\"view-all\">\r\n        <button class=\"sb-btn sb-btn-normal sb-btn-outline-secondary sb-btn-white sb-btn-oval\" *ngIf=\"contentList?.length > maxCardCount && viewMoreButtonPosition === ButtonPosition.RIGHT\" (click)=\"onViewMoreClick($event)\">\r\n          {{viewMoreButtonText}}\r\n        </button>\r\n      </div>\r\n    </div>\r\n    <div class=\"sb--scrolling-wrapper-flexbox\" *ngIf=\"multiRow\">\r\n      <span *ngFor=\"let content of contentList | slice:0:(maxCardCount ? maxCardCount : contentList?.length); let index = index\">\r\n        <div *ngIf=\"index%2 == 0\"  class=\"sb--card--container\">\r\n            <sb-course-card class=\"sb--card--seperator\" *ngIf=\"contentList[index]!=null && type === CourseCardGridTypes.COURSE_CARD_GRID\" [course]=\"contentList[index]\" (click)=\"onCardClick($event, contentList[index])\"  [cardImg]=\"contentList[index]?.cardImg\" [section]=\"contentList[index]?.info_to_display\" [isMenu]=\"isMenu\"  (menuClick)=\"onCardMenuClick($event)\"></sb-course-card>\r\n            <sb-course-card class=\"sb--card--seperator\" *ngIf=\"index+1 < contentList.length && type === CourseCardGridTypes.COURSE_CARD_GRID\" [course]=\"contentList[index+1]\" (click)=\"onCardClick($event, contentList[index+1])\"  [cardImg]=\"contentList[index+1]?.cardImg\" [section]=\"contentList[index+1]?.info_to_display\"></sb-course-card>\r\n\r\n            <sb-my-course-card [hideProgress]=\"hideProgress\" class=\"sb--card--seperator\" *ngIf=\"contentList[index]!=null && type === CourseCardGridTypes.MY_COURSE_CARD_GRID\" [course]=\"contentList[index]\" (click)=\"onCardClick($event, contentList[index])\" [cardImg]=\"contentList[index]?.cardImg\" [section]=\"contentList[index]?.info_to_display\"></sb-my-course-card>\r\n            <sb-my-course-card [hideProgress]=\"hideProgress\" class=\"sb--card--seperator\" *ngIf=\"index+1 < contentList.length && type === CourseCardGridTypes.MY_COURSE_CARD_GRID\" [course]=\"contentList[index+1]\" (click)=\"onCardClick($event, contentList[index+1])\" [cardImg]=\"contentList[index+1]?.cardImg\" [section]=\"contentList[index+1]?.info_to_display\"></sb-my-course-card>\r\n            \r\n            <sb-my-course-card [hideProgress]=\"hideProgress\" class=\"sb--card--seperator\" *ngIf=\"contentList[index]!=null && type === CourseCardGridTypes.MY_COURSE_RECENTLY_VIEWED_CARD_GRID\" [course]=\"contentList[index]\" (click)=\"onCardClick($event, contentList[index])\" [cardImg]=\"contentList[index]?.cardImg\" [section]=\"contentList[index]?.info_to_display\" [type]=\"CourseCardTypes.RECENTLY_VIEWED\"></sb-my-course-card>\r\n            <sb-my-course-card [hideProgress]=\"hideProgress\" class=\"sb--card--seperator\" *ngIf=\"index+1 < contentList.length && type === CourseCardGridTypes.MY_COURSE_RECENTLY_VIEWED_CARD_GRID\" [course]=\"contentList[index+1]\" (click)=\"onCardClick($event, contentList[index+1])\" [cardImg]=\"contentList[index+1]?.cardImg\" [section]=\"contentList[index+1]?.info_to_display\" [type]=\"CourseCardTypes.RECENTLY_VIEWED\"></sb-my-course-card>\r\n        \r\n            <sb-course-curiculum-card class=\"sb--card--seperator\" [index]=\"index\" [cardData]=\"contentList[index]\" (click)=\"onCardClick($event, contentList[index])\" *ngIf=\"contentList[index]!=null && type === CourseCardGridTypes.CURICULUM_COURSE_CARD_GRID\"></sb-course-curiculum-card>\r\n            <sb-course-curiculum-card class=\"sb--card--seperator\" [index]=\"index+1\" [cardData]=\"contentList[index+1]\" (click)=\"onCardClick($event, contentList[index+1])\" *ngIf=\"index+1 < contentList.length && contentList[index+1]!=null && type === CourseCardGridTypes.CURICULUM_COURSE_CARD_GRID\"></sb-course-curiculum-card>\r\n       </div>\r\n      </span>\r\n      <div class=\"view-all\">\r\n        <button class=\"sb-btn sb-btn-normal sb-btn-outline-secondary sb-btn-white sb-btn-oval\" *ngIf=\"contentList?.length > maxCardCount && viewMoreButtonPosition === ButtonPosition.RIGHT\" (click)=\"onViewMoreClick($event)\">\r\n          {{viewMoreButtonText}}\r\n        </button>\r\n      </div>\r\n    </div>\r\n</div>\r\n<div class=\"layout-course\" *ngIf=\"isLoading\">\r\n    <div class=\"header\" style=\"width:120px;\">\r\n        <div class=\"title loading-animation sb--card--highlighter\">\r\n            \r\n        </div>\r\n    </div>\r\n    <div class=\"sb--scrolling-wrapper-flexbox\" *ngIf=\"maxCardCount > 0 && !multiRow\">\r\n        <div *ngFor=\"let content of range(maxCardCount); let i=index\" class=\"sb--card--container\">\r\n          <sb-course-card [isLoading]=\"isLoading\" *ngIf=\"type === CourseCardGridTypes.COURSE_CARD_GRID\"></sb-course-card>\r\n          <sb-my-course-card [hideProgress]=\"hideProgress\" [isLoading]=\"isLoading\" *ngIf=\"type === CourseCardGridTypes.MY_COURSE_CARD_GRID\"></sb-my-course-card>\r\n          <sb-my-course-card [hideProgress]=\"hideProgress\" [isLoading]=\"isLoading\" [type]=\"CourseCardTypes.RECENTLY_VIEWED\" *ngIf=\"type === CourseCardGridTypes.MY_COURSE_RECENTLY_VIEWED_CARD_GRID\"></sb-my-course-card>\r\n          <sb-course-curiculum-card [index]=\"i\" [isLoading]=\"isLoading\" *ngIf=\"type === CourseCardGridTypes.CURICULUM_COURSE_CARD_GRID\"></sb-course-curiculum-card>\r\n        </div>\r\n      </div>\r\n      <div class=\"sb--scrolling-wrapper-flexbox\" *ngIf=\"maxCardCount > 0 && multiRow\">\r\n          <div *ngFor=\"let content of range(maxCardCount); let i=index\" class=\"sb--card--container\">\r\n              <sb-course-card [isLoading]=\"isLoading\" *ngIf=\"type === CourseCardGridTypes.COURSE_CARD_GRID\"></sb-course-card>\r\n              <sb-course-card [isLoading]=\"isLoading\" *ngIf=\"type === CourseCardGridTypes.COURSE_CARD_GRID\"></sb-course-card>\r\n              <sb-my-course-card [hideProgress]=\"hideProgress\" [isLoading]=\"isLoading\" *ngIf=\"type === CourseCardGridTypes.MY_COURSE_CARD_GRID\"></sb-my-course-card>\r\n              <sb-my-course-card [hideProgress]=\"hideProgress\" [isLoading]=\"isLoading\" *ngIf=\"type === CourseCardGridTypes.MY_COURSE_CARD_GRID\"></sb-my-course-card>\r\n              <sb-my-course-card [hideProgress]=\"hideProgress\" [isLoading]=\"isLoading\" [type]=\"CourseCardTypes.RECENTLY_VIEWED\" *ngIf=\"type === CourseCardGridTypes.MY_COURSE_RECENTLY_VIEWED_CARD_GRID\"></sb-my-course-card>\r\n              <sb-my-course-card [hideProgress]=\"hideProgress\" [isLoading]=\"isLoading\" [type]=\"CourseCardTypes.RECENTLY_VIEWED\" *ngIf=\"type === CourseCardGridTypes.MY_COURSE_RECENTLY_VIEWED_CARD_GRID\"></sb-my-course-card>\r\n              <sb-course-curiculum-card [index]=\"i\" [isLoading]=\"isLoading\" *ngIf=\"type === CourseCardGridTypes.CURICULUM_COURSE_CARD_GRID\"></sb-course-curiculum-card>\r\n              <sb-course-curiculum-card [index]=\"i+1\" [isLoading]=\"isLoading\" *ngIf=\"type === CourseCardGridTypes.CURICULUM_COURSE_CARD_GRID\"></sb-course-curiculum-card>\r\n            </div>\r\n      </div>\r\n\r\n</div>",
                styles: [".loading-animation{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-fill-mode:forwards;animation-fill-mode:forwards;-webkit-animation-iteration-count:infinite;animation-iteration-count:infinite;-webkit-animation-name:placeload;animation-name:placeload;-webkit-animation-timing-function:linear;animation-timing-function:linear;background:var(--lazyload-bg);background:var(--grey-nuance-lighter);background:linear-gradient(to right,var(--grey-nuance-lighter) 8%,var(--grey-nuance-darker) 18%,var(--grey-nuance-lighter) 33%);background-size:75rem 6.5rem;position:relative}@-webkit-keyframes placeload{0%{background-position:-29.25rem 0}100%{background-position:29.25rem 0}}@keyframes placeload{0%{background-position:-29.25rem 0}100%{background-position:29.25rem 0}}.sb--card--highlighter{height:.75rem;width:100%;margin-top:.3125rem}:host .layout-library{display:flex;flex-direction:column}:host .sb--scrolling-wrapper-flexbox{display:flex;flex-wrap:nowrap;overflow-x:auto;-webkit-overflow-scrolling:touch;padding-bottom:.5em}:host .sb--card--container{flex:0 0 auto;width:17.5rem;margin:0 .5rem 0 0}html[dir=rtl] :host .sb--card--container{margin-right:inherit;margin-left:1rem}:host .header{display:flex;flex-direction:row;padding:0;align-items:center}[dir=ltr] :host .header,[dir=rtl] :host .header{margin:.7rem 0 .5rem}:host .header .title{font-family:inherit;text-overflow:ellipsis;overflow:hidden;flex:1;height:1.5rem;color:var(--secondary-color);font-size:1.125rem;font-weight:700;text-transform:capitalize;line-height:1.625rem;display:flex;align-items:center}:host .header .title hr{flex:1;margin-left:1rem;display:none}:host .sb-btn-oval{border-radius:50%;padding:0;height:80%;top:10%}"]
            }] }
];
/** @nocollapse */
CourseCardsHlistComponent.ctorParameters = () => [];
CourseCardsHlistComponent.propDecorators = {
    title: [{ type: Input }],
    contentList: [{ type: Input }],
    maxCardCount: [{ type: Input }],
    viewMoreButtonText: [{ type: Input }],
    isLoading: [{ type: Input }],
    type: [{ type: Input }],
    multiRow: [{ type: Input }],
    hideProgress: [{ type: Input }],
    isMenu: [{ type: Input }],
    viewMoreButtonPosition: [{ type: Input }],
    viewMoreClick: [{ type: Output }],
    cardClick: [{ type: Output }],
    menuClick: [{ type: Output }]
};
if (false) {
    /** @type {?} */
    CourseCardsHlistComponent.prototype.title;
    /** @type {?} */
    CourseCardsHlistComponent.prototype.contentList;
    /** @type {?} */
    CourseCardsHlistComponent.prototype.maxCardCount;
    /** @type {?} */
    CourseCardsHlistComponent.prototype.viewMoreButtonText;
    /** @type {?} */
    CourseCardsHlistComponent.prototype.isLoading;
    /** @type {?} */
    CourseCardsHlistComponent.prototype.type;
    /** @type {?} */
    CourseCardsHlistComponent.prototype.multiRow;
    /** @type {?} */
    CourseCardsHlistComponent.prototype.hideProgress;
    /** @type {?} */
    CourseCardsHlistComponent.prototype.isMenu;
    /** @type {?} */
    CourseCardsHlistComponent.prototype.viewMoreButtonPosition;
    /** @type {?} */
    CourseCardsHlistComponent.prototype.viewMoreClick;
    /** @type {?} */
    CourseCardsHlistComponent.prototype.cardClick;
    /** @type {?} */
    CourseCardsHlistComponent.prototype.menuClick;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY291cnNlLWNhcmRzLWhsaXN0LmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0Bwcm9qZWN0LXN1bmJpcmQvY29tbW9uLWNvbnN1bXB0aW9uLXY4LyIsInNvdXJjZXMiOlsibGliL2xheW91dC9jb3Vyc2UtY2FyZHMtaGxpc3QvY291cnNlLWNhcmRzLWhsaXN0LmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBVSxLQUFLLEVBQUUsTUFBTSxFQUFFLFlBQVksRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUMvRSxPQUFPLEVBQUUsYUFBYSxFQUFFLE1BQU0sdUJBQXVCLENBQUM7QUFDdEQsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLG1CQUFtQixDQUFDO0FBQzlDLE9BQU8sRUFBVyxtQkFBbUIsRUFBRSxlQUFlLEVBQUUsY0FBYyxFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFRbEcsTUFBTSxPQUFPLHlCQUF5QjtJQXVCcEM7O1FBcEJVLFVBQUssR0FBVyxhQUFhLENBQUMsSUFBSSxDQUFDOztRQUduQyxpQkFBWSxHQUFHLEVBQUUsQ0FBQztRQUNsQix1QkFBa0IsR0FBRyxXQUFXLENBQUM7O1FBT2hDLFdBQU0sR0FBRyxLQUFLLENBQUM7UUFDZiwyQkFBc0IsR0FBbUIsY0FBYyxDQUFDLEdBQUcsQ0FBQTtRQUUzRCxrQkFBYSxHQUFpQyxJQUFJLFlBQVksRUFBa0IsQ0FBQztRQUNqRixjQUFTLEdBQTZCLElBQUksWUFBWSxFQUFjLENBQUM7UUFDckUsY0FBUyxHQUE2QixJQUFJLFlBQVksRUFBRSxDQUFDO0lBS3BFLENBQUM7Ozs7SUFIQyxJQUFJLGNBQWMsS0FBSyxPQUFPLGNBQWMsQ0FBQyxDQUFDLENBQUM7Ozs7SUFLakQsUUFBUTtRQUNOLElBQUcsSUFBSSxDQUFDLElBQUksSUFBRSxJQUFJLEVBQUU7WUFDaEIsSUFBRyxJQUFJLENBQUMsSUFBSSxJQUFJLG1CQUFtQixDQUFDLG1CQUFtQjtnQkFDbkQsSUFBSSxDQUFDLElBQUksSUFBSSxtQkFBbUIsQ0FBQyxtQ0FBbUMsRUFBRTtnQkFDdEUsSUFBRyxDQUFDLENBQUMsSUFBSSxDQUFDLFdBQVcsSUFBRSxJQUFJLENBQUMsRUFBRTtvQkFDMUIsSUFBSSxDQUFDLFdBQVcsR0FBRyxTQUFTLENBQUMsT0FBTyxDQUFDO2lCQUN4QzthQUVKO2lCQUFNO2dCQUNILElBQUcsQ0FBQyxDQUFDLElBQUksQ0FBQyxXQUFXLElBQUUsSUFBSSxDQUFDLEVBQUU7b0JBQzFCLElBQUksQ0FBQyxXQUFXLEdBQUcsYUFBYSxDQUFDLFFBQVEsQ0FBQztpQkFDN0M7YUFDSjtTQUNKO2FBQU07WUFDSCxJQUFJLENBQUMsSUFBSSxHQUFHLG1CQUFtQixDQUFDLGdCQUFnQixDQUFDO1lBQ2pELElBQUcsQ0FBQyxDQUFDLElBQUksQ0FBQyxXQUFXLElBQUUsSUFBSSxDQUFDLEVBQUU7Z0JBQzFCLElBQUksQ0FBQyxXQUFXLEdBQUcsYUFBYSxDQUFDLFFBQVEsQ0FBQzthQUM3QztTQUNKO0lBQ0gsQ0FBQzs7Ozs7SUFDRCxXQUFXLENBQUMsT0FBTztJQUNwQixDQUFDOzs7O0lBRUMsSUFBSSxtQkFBbUIsS0FBSyxPQUFPLG1CQUFtQixDQUFDLENBQUMsQ0FBQzs7OztJQUN6RCxJQUFJLGVBQWUsS0FBSyxPQUFPLGVBQWUsQ0FBQyxDQUFDLENBQUM7Ozs7OztJQU1qRCxlQUFlLENBQUMsS0FBaUI7UUFDN0IsSUFBSSxDQUFDLGFBQWEsQ0FBQyxJQUFJLENBQUMsRUFBRSxLQUFLLEVBQUUsSUFBSSxFQUFFLElBQUksQ0FBQyxXQUFXLEVBQUUsQ0FBQyxDQUFDO0lBQy9ELENBQUM7Ozs7Ozs7SUFPRCxXQUFXLENBQUMsS0FBaUIsRUFBRSxJQUFhO1FBQ3hDLElBQUksQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLEVBQUUsS0FBSyxFQUFFLElBQUksRUFBRSxDQUFDLENBQUM7SUFDekMsQ0FBQzs7Ozs7SUFFRCxLQUFLLENBQUMsY0FBYztRQUNoQixPQUFRLElBQUksS0FBSyxDQUFDLGNBQWMsQ0FBQyxDQUFDO0lBQ3RDLENBQUM7Ozs7O0lBRUQsZUFBZSxDQUFDLEtBQUs7UUFDakIsSUFBSSxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDL0IsQ0FBQzs7O1lBaEZILFNBQVMsU0FBQztnQkFDVCxRQUFRLEVBQUUsdUJBQXVCO2dCQUNqQyx5b1JBQWtEOzthQUVuRDs7Ozs7b0JBSUcsS0FBSzswQkFDTCxLQUFLOzJCQUVMLEtBQUs7aUNBQ0wsS0FBSzt3QkFDTCxLQUFLO21CQUNMLEtBQUs7dUJBQ0wsS0FBSzsyQkFDTCxLQUFLO3FCQUdKLEtBQUs7cUNBQ0wsS0FBSzs0QkFFTixNQUFNO3dCQUNOLE1BQU07d0JBQ04sTUFBTTs7OztJQWhCUCwwQ0FBNEM7O0lBQzVDLGdEQUEwQjs7SUFFMUIsaURBQTJCOztJQUMzQix1REFBMEM7O0lBQzFDLDhDQUEyQjs7SUFDM0IseUNBQWtDOztJQUNsQyw2Q0FBMEI7O0lBQzFCLGlEQUE4Qjs7SUFHN0IsMkNBQXdCOztJQUN4QiwyREFBb0U7O0lBRXJFLGtEQUEyRjs7SUFDM0YsOENBQStFOztJQUMvRSw4Q0FBbUUiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIE9uSW5pdCwgSW5wdXQsIE91dHB1dCwgRXZlbnRFbWl0dGVyIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IGNvdXJzZVNlY3Rpb24gfSBmcm9tICcuL2NvdXJzZS1zZWN0aW9uLWRhdGEnO1xyXG5pbXBvcnQgeyBteUNvdXJzZXMgfSBmcm9tICcuL215LWNvdXJzZXMtZGF0YSc7XHJcbmltcG9ydCB7IElDb3Vyc2UsIENvdXJzZUNhcmRHcmlkVHlwZXMsIENvdXJzZUNhcmRUeXBlcywgQnV0dG9uUG9zaXRpb24gfSBmcm9tICcuLi8uLi9jYXJkL21vZGVscyc7XHJcbmltcG9ydCB7IElWaWV3TW9yZUNsaWNrLCBJQ2FyZENsaWNrIH0gZnJvbSAnLi4vbW9kZWxzJztcclxuXHJcbkBDb21wb25lbnQoe1xyXG4gIHNlbGVjdG9yOiAnc2ItY291cnNlLWNhcmRzLWhsaXN0JyxcclxuICB0ZW1wbGF0ZVVybDogJy4vY291cnNlLWNhcmRzLWhsaXN0LmNvbXBvbmVudC5odG1sJyxcclxuICBzdHlsZVVybHM6IFsnLi9jb3Vyc2UtY2FyZHMtaGxpc3QuY29tcG9uZW50LnNjc3MnXVxyXG59KVxyXG5leHBvcnQgY2xhc3MgQ291cnNlQ2FyZHNIbGlzdENvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCB7XHJcblxyXG4gICAgLyogVGl0bGUgZm9yIHRoZSBncmlkICovXHJcbiAgIEBJbnB1dCgpIHRpdGxlOiBzdHJpbmcgPSBjb3Vyc2VTZWN0aW9uLm5hbWU7XHJcbiAgIEBJbnB1dCgpIGNvbnRlbnRMaXN0OiBhbnk7XHJcbiAgIC8qIE1heCBjYXJkIGNvdW50IHRvIGJlIHNob3duICovXHJcbiAgIEBJbnB1dCgpIG1heENhcmRDb3VudCA9IDEwO1xyXG4gICBASW5wdXQoKSB2aWV3TW9yZUJ1dHRvblRleHQgPSAnVmlldyBNb3JlJztcclxuICAgQElucHV0KCkgaXNMb2FkaW5nOmJvb2xlYW47XHJcbiAgIEBJbnB1dCgpIHR5cGU6Q291cnNlQ2FyZEdyaWRUeXBlcztcclxuICAgQElucHV0KCkgbXVsdGlSb3c6Ym9vbGVhbjtcclxuICAgQElucHV0KCkgaGlkZVByb2dyZXNzOmJvb2xlYW47XHJcblxyXG4gICAvKiBTaG93IE1lbnUgb24gZWFjaCBjYXJkICovXHJcbiAgICBASW5wdXQoKSBpc01lbnUgPSBmYWxzZTtcclxuICAgIEBJbnB1dCgpIHZpZXdNb3JlQnV0dG9uUG9zaXRpb246IEJ1dHRvblBvc2l0aW9uID0gQnV0dG9uUG9zaXRpb24uVE9QXHJcblxyXG4gICBAT3V0cHV0KCkgdmlld01vcmVDbGljazogRXZlbnRFbWl0dGVyPElWaWV3TW9yZUNsaWNrPiA9IG5ldyBFdmVudEVtaXR0ZXI8SVZpZXdNb3JlQ2xpY2s+KCk7XHJcbiAgIEBPdXRwdXQoKSBjYXJkQ2xpY2s6IEV2ZW50RW1pdHRlcjxJQ2FyZENsaWNrPiA9IG5ldyBFdmVudEVtaXR0ZXI8SUNhcmRDbGljaz4oKTtcclxuICAgQE91dHB1dCgpIG1lbnVDbGljazogRXZlbnRFbWl0dGVyPElDYXJkQ2xpY2s+ID0gbmV3IEV2ZW50RW1pdHRlcigpO1xyXG5cclxuICAgIGdldCBCdXR0b25Qb3NpdGlvbigpIHsgcmV0dXJuIEJ1dHRvblBvc2l0aW9uOyB9XHJcblxyXG4gIGNvbnN0cnVjdG9yKCkge1xyXG4gIH1cclxuXHJcbiAgbmdPbkluaXQoKSB7XHJcbiAgICBpZih0aGlzLnR5cGUhPW51bGwpIHtcclxuICAgICAgICBpZih0aGlzLnR5cGUgPT0gQ291cnNlQ2FyZEdyaWRUeXBlcy5NWV9DT1VSU0VfQ0FSRF9HUklEIHx8IFxyXG4gICAgICAgICAgICB0aGlzLnR5cGUgPT0gQ291cnNlQ2FyZEdyaWRUeXBlcy5NWV9DT1VSU0VfUkVDRU5UTFlfVklFV0VEX0NBUkRfR1JJRCkge1xyXG4gICAgICAgICAgICBpZighKHRoaXMuY29udGVudExpc3QhPW51bGwpKSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmNvbnRlbnRMaXN0ID0gbXlDb3Vyc2VzLmNvdXJzZXM7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgXHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgaWYoISh0aGlzLmNvbnRlbnRMaXN0IT1udWxsKSkge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5jb250ZW50TGlzdCA9IGNvdXJzZVNlY3Rpb24uY29udGVudHM7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICAgIHRoaXMudHlwZSA9IENvdXJzZUNhcmRHcmlkVHlwZXMuQ09VUlNFX0NBUkRfR1JJRDtcclxuICAgICAgICBpZighKHRoaXMuY29udGVudExpc3QhPW51bGwpKSB7XHJcbiAgICAgICAgICAgIHRoaXMuY29udGVudExpc3QgPSBjb3Vyc2VTZWN0aW9uLmNvbnRlbnRzO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICB9XHJcbiAgbmdPbkNoYW5nZXMoY2hhbmdlcykge1xyXG4gfVxyXG5cclxuICAgZ2V0IENvdXJzZUNhcmRHcmlkVHlwZXMoKSB7IHJldHVybiBDb3Vyc2VDYXJkR3JpZFR5cGVzOyB9XHJcbiAgIGdldCBDb3Vyc2VDYXJkVHlwZXMoKSB7IHJldHVybiBDb3Vyc2VDYXJkVHlwZXM7IH1cclxuXHJcbiAgIC8qKlxyXG4gICAgKiBUcmlnZ2VycyBldmVudCBvbiBgVmlldyBNb3JlYCBDbGlja1xyXG4gICAgKiBAcGFyYW0gZXZlbnQgSFRNTCBjbGljayBldmVudFxyXG4gICAgKi9cclxuICAgb25WaWV3TW9yZUNsaWNrKGV2ZW50OiBNb3VzZUV2ZW50KSB7XHJcbiAgICAgICB0aGlzLnZpZXdNb3JlQ2xpY2suZW1pdCh7IGV2ZW50LCBkYXRhOiB0aGlzLmNvbnRlbnRMaXN0IH0pO1xyXG4gICB9XHJcblxyXG4gICAvKipcclxuICAgICogVHJpZ2dlcnMgZXZlbnQgb24gY2FyZCBjbGlja1xyXG4gICAgKiBAcGFyYW0gZXZlbnQgSFRNTCBDbGljayBldmVudFxyXG4gICAgKiBAcGFyYW0gZGF0YSBDb250ZW50IGRhdGEgZm9yIHNlbGVjdGVkIGNhcmRcclxuICAgICovXHJcbiAgIG9uQ2FyZENsaWNrKGV2ZW50OiBNb3VzZUV2ZW50LCBkYXRhOiBJQ291cnNlKSB7XHJcbiAgICAgICB0aGlzLmNhcmRDbGljay5lbWl0KHsgZXZlbnQsIGRhdGEgfSk7XHJcbiAgIH1cclxuXHJcbiAgIHJhbmdlKG1heENhcmRDb3VudGVyKSB7XHJcbiAgICAgICByZXR1cm4gIG5ldyBBcnJheShtYXhDYXJkQ291bnRlcik7XHJcbiAgIH1cclxuXHJcbiAgIG9uQ2FyZE1lbnVDbGljayhldmVudCkge1xyXG4gICAgICAgdGhpcy5tZW51Q2xpY2suZW1pdChldmVudCk7XHJcbiAgIH1cclxuXHJcbn1cclxuIl19