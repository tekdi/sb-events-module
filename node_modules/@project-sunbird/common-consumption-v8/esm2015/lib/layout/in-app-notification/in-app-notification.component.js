/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, EventEmitter, Input, Output } from '@angular/core';
import { notificationViewConfig } from './in-app-notification-data';
export class InAppNotificationComponent {
    constructor() {
        this.notificationList = [];
        this.inAppNotificationConfig = notificationViewConfig;
        this.notificationClick = new EventEmitter();
        this.deleteNotificationClick = new EventEmitter();
        this.clearAllClick = new EventEmitter();
        this.showMore = new EventEmitter();
        this.showLess = new EventEmitter();
    }
    /**
     * @return {?}
     */
    ngOnInit() {
        this.displayItemCount = this.inAppNotificationConfig.minNotificationViewCount;
        console.log(this.notificationList);
    }
    /**
     * @param {?} event
     * @return {?}
     */
    notificationClickHandler(event) {
        console.log(this.notificationList);
        this.notificationClick.emit(event);
    }
    /**
     * @param {?} event
     * @return {?}
     */
    deleteNotificationHandler(event) {
        this.deleteNotificationClick.emit(event);
    }
    /**
     * @param {?} event
     * @return {?}
     */
    clearAllNotifications(event) {
        /** @type {?} */
        const eventData = {
            event,
            data: this.notificationList
        };
        this.clearAllClick.emit(eventData);
    }
    /**
     * @return {?}
     */
    onShowMore() {
        this.showMore.emit(true);
        if (this.notificationList.length) {
            this.displayItemCount = this.notificationList.length;
        }
    }
    /**
     * @return {?}
     */
    onShowLess() {
        this.showLess.emit(true);
        this.displayItemCount = this.inAppNotificationConfig.minNotificationViewCount;
    }
}
InAppNotificationComponent.decorators = [
    { type: Component, args: [{
                selector: 'sb-in-app-notification',
                template: "<div class=\"sb-notification-container\">\r\n  <div class=\"sb-notification-header\">\r\n    <div class=\"title\" *ngIf=\"inAppNotificationConfig?.title\">{{inAppNotificationConfig?.title}}</div>\r\n    <div class=\"sub-title\" *ngIf=\"inAppNotificationConfig?.subTitle\">{{inAppNotificationConfig?.subTitle}}</div>\r\n  </div>\r\n  <div class=\"clear-text\" *ngIf=\"inAppNotificationConfig.clearText\">\r\n    <a (click)=\"clearAllNotifications($event)\">{{inAppNotificationConfig.clearText}}</a>\r\n  </div>\r\n  <div class=\"sb-notification-list-items\">\r\n    <div *ngFor=\"let notification of notificationList | slice:0:displayItemCount; let i=index\" >\r\n      <sb-notification-card [notification]=\"notification\" (notificationClick)=\"notificationClickHandler($event)\"\r\n      (deleteNotificationClick)=\"deleteNotificationHandler($event)\"></sb-notification-card>\r\n    </div>\r\n  </div>\r\n  <ng-container *ngIf=\"inAppNotificationConfig?.minNotificationViewCount < this.notificationList?.length\">\r\n    <div class=\"text-center more-text mt-16\" *ngIf=\"displayItemCount < this.notificationList?.length\">\r\n      <a (click)=\"onShowMore()\">{{inAppNotificationConfig?.moreText}}</a>\r\n    </div>\r\n    <div class=\"text-center more-text mt-16\" *ngIf=\"displayItemCount === this.notificationList?.length\">\r\n      <a (click)=\"onShowLess()\">{{inAppNotificationConfig?.lessText}}</a>\r\n    </div>\r\n  </ng-container>\r\n</div>",
                styles: [":host .sb-notification-container .sb-notification-header{color:var(--gray)}:host .sb-notification-container .sb-notification-header .title{font-size:1rem;font-weight:700;margin-bottom:.25rem}:host .sb-notification-container .sb-notification-header .sub-title{font-size:.75rem;margin-bottom:1rem}:host .sb-notification-container .sb-notification-list-items{max-height:calc(100vh - 275px);overflow-y:auto}:host .sb-notification-container .clear-text a{color:var(--danger-color);font-size:.875rem;position:absolute;right:1.5rem;top:1.5rem;text-decoration:none}html[dir=rtl] :host .sb-notification-container .clear-text a{right:auto;left:1.5rem}:host .sb-notification-container .more-text a{font-size:.75rem;font-weight:700;cursor:pointer;color:var(--primary-400)}"]
            }] }
];
/** @nocollapse */
InAppNotificationComponent.ctorParameters = () => [];
InAppNotificationComponent.propDecorators = {
    notificationList: [{ type: Input }],
    inAppNotificationConfig: [{ type: Input }],
    notificationClick: [{ type: Output }],
    deleteNotificationClick: [{ type: Output }],
    clearAllClick: [{ type: Output }],
    showMore: [{ type: Output }],
    showLess: [{ type: Output }]
};
if (false) {
    /** @type {?} */
    InAppNotificationComponent.prototype.notificationList;
    /** @type {?} */
    InAppNotificationComponent.prototype.inAppNotificationConfig;
    /** @type {?} */
    InAppNotificationComponent.prototype.notificationClick;
    /** @type {?} */
    InAppNotificationComponent.prototype.deleteNotificationClick;
    /** @type {?} */
    InAppNotificationComponent.prototype.clearAllClick;
    /** @type {?} */
    InAppNotificationComponent.prototype.showMore;
    /** @type {?} */
    InAppNotificationComponent.prototype.showLess;
    /** @type {?} */
    InAppNotificationComponent.prototype.displayItemCount;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW4tYXBwLW5vdGlmaWNhdGlvbi5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AcHJvamVjdC1zdW5iaXJkL2NvbW1vbi1jb25zdW1wdGlvbi12OC8iLCJzb3VyY2VzIjpbImxpYi9sYXlvdXQvaW4tYXBwLW5vdGlmaWNhdGlvbi9pbi1hcHAtbm90aWZpY2F0aW9uLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxZQUFZLEVBQUUsS0FBSyxFQUFVLE1BQU0sRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUUvRSxPQUFPLEVBQUUsc0JBQXNCLEVBQUUsTUFBTSw0QkFBNEIsQ0FBQztBQU9wRSxNQUFNLE9BQU8sMEJBQTBCO0lBV3JDO1FBVFMscUJBQWdCLEdBQUcsRUFBRSxDQUFDO1FBQ3RCLDRCQUF1QixHQUEyQixzQkFBc0IsQ0FBQztRQUN4RSxzQkFBaUIsR0FBc0IsSUFBSSxZQUFZLEVBQUUsQ0FBQztRQUMxRCw0QkFBdUIsR0FBc0IsSUFBSSxZQUFZLEVBQUUsQ0FBQztRQUNoRSxrQkFBYSxHQUFzQixJQUFJLFlBQVksRUFBRSxDQUFDO1FBQ3RELGFBQVEsR0FBc0IsSUFBSSxZQUFZLEVBQUUsQ0FBQztRQUNqRCxhQUFRLEdBQXNCLElBQUksWUFBWSxFQUFFLENBQUM7SUFHM0MsQ0FBQzs7OztJQUVqQixRQUFRO1FBQ04sSUFBSSxDQUFDLGdCQUFnQixHQUFHLElBQUksQ0FBQyx1QkFBdUIsQ0FBQyx3QkFBd0IsQ0FBQztRQUM5RSxPQUFPLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxDQUFDO0lBQ3JDLENBQUM7Ozs7O0lBRUQsd0JBQXdCLENBQUMsS0FBSztRQUM1QixPQUFPLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxDQUFDO1FBQ25DLElBQUksQ0FBQyxpQkFBaUIsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDckMsQ0FBQzs7Ozs7SUFFRCx5QkFBeUIsQ0FBQyxLQUFLO1FBQzdCLElBQUksQ0FBQyx1QkFBdUIsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDM0MsQ0FBQzs7Ozs7SUFFRCxxQkFBcUIsQ0FBQyxLQUFLOztjQUNuQixTQUFTLEdBQUc7WUFDaEIsS0FBSztZQUNMLElBQUksRUFBRSxJQUFJLENBQUMsZ0JBQWdCO1NBQzVCO1FBQ0QsSUFBSSxDQUFDLGFBQWEsQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLENBQUM7SUFDckMsQ0FBQzs7OztJQUVELFVBQVU7UUFDUixJQUFJLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUN6QixJQUFJLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxNQUFNLEVBQUU7WUFDaEMsSUFBSSxDQUFDLGdCQUFnQixHQUFHLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxNQUFNLENBQUM7U0FDdEQ7SUFDSCxDQUFDOzs7O0lBRUQsVUFBVTtRQUNSLElBQUksQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQ3pCLElBQUksQ0FBQyxnQkFBZ0IsR0FBRyxJQUFJLENBQUMsdUJBQXVCLENBQUMsd0JBQXdCLENBQUM7SUFDaEYsQ0FBQzs7O1lBbERGLFNBQVMsU0FBQztnQkFDVCxRQUFRLEVBQUUsd0JBQXdCO2dCQUNsQyx5N0NBQW1EOzthQUVwRDs7Ozs7K0JBR0UsS0FBSztzQ0FDTCxLQUFLO2dDQUNMLE1BQU07c0NBQ04sTUFBTTs0QkFDTixNQUFNO3VCQUNOLE1BQU07dUJBQ04sTUFBTTs7OztJQU5QLHNEQUErQjs7SUFDL0IsNkRBQWtGOztJQUNsRix1REFBb0U7O0lBQ3BFLDZEQUEwRTs7SUFDMUUsbURBQWdFOztJQUNoRSw4Q0FBMkQ7O0lBQzNELDhDQUEyRDs7SUFDM0Qsc0RBQXlCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBFdmVudEVtaXR0ZXIsIElucHV0LCBPbkluaXQsIE91dHB1dCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBOb3RpZmljYXRpb25WaWV3Q29uZmlnIH0gZnJvbSAnLi4vLi4vY2FyZC9tb2RlbHMnO1xyXG5pbXBvcnQgeyBub3RpZmljYXRpb25WaWV3Q29uZmlnIH0gZnJvbSAnLi9pbi1hcHAtbm90aWZpY2F0aW9uLWRhdGEnO1xyXG5cclxuQENvbXBvbmVudCh7XHJcbiAgc2VsZWN0b3I6ICdzYi1pbi1hcHAtbm90aWZpY2F0aW9uJyxcclxuICB0ZW1wbGF0ZVVybDogJy4vaW4tYXBwLW5vdGlmaWNhdGlvbi5jb21wb25lbnQuaHRtbCcsXHJcbiAgc3R5bGVVcmxzOiBbJy4vaW4tYXBwLW5vdGlmaWNhdGlvbi5jb21wb25lbnQuc2NzcyddXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBJbkFwcE5vdGlmaWNhdGlvbkNvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCB7XHJcblxyXG4gIEBJbnB1dCgpIG5vdGlmaWNhdGlvbkxpc3QgPSBbXTtcclxuICBASW5wdXQoKSBpbkFwcE5vdGlmaWNhdGlvbkNvbmZpZzogTm90aWZpY2F0aW9uVmlld0NvbmZpZyA9IG5vdGlmaWNhdGlvblZpZXdDb25maWc7XHJcbiAgQE91dHB1dCgpIG5vdGlmaWNhdGlvbkNsaWNrOiBFdmVudEVtaXR0ZXI8YW55PiA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcclxuICBAT3V0cHV0KCkgZGVsZXRlTm90aWZpY2F0aW9uQ2xpY2s6IEV2ZW50RW1pdHRlcjxhbnk+ID0gbmV3IEV2ZW50RW1pdHRlcigpO1xyXG4gIEBPdXRwdXQoKSBjbGVhckFsbENsaWNrOiBFdmVudEVtaXR0ZXI8YW55PiA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcclxuICBAT3V0cHV0KCkgc2hvd01vcmU6IEV2ZW50RW1pdHRlcjxhbnk+ID0gbmV3IEV2ZW50RW1pdHRlcigpO1xyXG4gIEBPdXRwdXQoKSBzaG93TGVzczogRXZlbnRFbWl0dGVyPGFueT4gPSBuZXcgRXZlbnRFbWl0dGVyKCk7XHJcbiAgZGlzcGxheUl0ZW1Db3VudDogbnVtYmVyO1xyXG5cclxuICBjb25zdHJ1Y3RvcigpIHsgfVxyXG5cclxuICBuZ09uSW5pdCgpIHtcclxuICAgIHRoaXMuZGlzcGxheUl0ZW1Db3VudCA9IHRoaXMuaW5BcHBOb3RpZmljYXRpb25Db25maWcubWluTm90aWZpY2F0aW9uVmlld0NvdW50O1xyXG4gICAgY29uc29sZS5sb2codGhpcy5ub3RpZmljYXRpb25MaXN0KTtcclxuICB9XHJcblxyXG4gIG5vdGlmaWNhdGlvbkNsaWNrSGFuZGxlcihldmVudCkge1xyXG4gICAgY29uc29sZS5sb2codGhpcy5ub3RpZmljYXRpb25MaXN0KTtcclxuICAgIHRoaXMubm90aWZpY2F0aW9uQ2xpY2suZW1pdChldmVudCk7XHJcbiAgfVxyXG5cclxuICBkZWxldGVOb3RpZmljYXRpb25IYW5kbGVyKGV2ZW50KSB7XHJcbiAgICB0aGlzLmRlbGV0ZU5vdGlmaWNhdGlvbkNsaWNrLmVtaXQoZXZlbnQpO1xyXG4gIH1cclxuXHJcbiAgY2xlYXJBbGxOb3RpZmljYXRpb25zKGV2ZW50KSB7XHJcbiAgICBjb25zdCBldmVudERhdGEgPSB7XHJcbiAgICAgIGV2ZW50LFxyXG4gICAgICBkYXRhOiB0aGlzLm5vdGlmaWNhdGlvbkxpc3RcclxuICAgIH07XHJcbiAgICB0aGlzLmNsZWFyQWxsQ2xpY2suZW1pdChldmVudERhdGEpO1xyXG4gIH1cclxuXHJcbiAgb25TaG93TW9yZSgpIHtcclxuICAgIHRoaXMuc2hvd01vcmUuZW1pdCh0cnVlKTtcclxuICAgIGlmICh0aGlzLm5vdGlmaWNhdGlvbkxpc3QubGVuZ3RoKSB7XHJcbiAgICAgIHRoaXMuZGlzcGxheUl0ZW1Db3VudCA9IHRoaXMubm90aWZpY2F0aW9uTGlzdC5sZW5ndGg7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBvblNob3dMZXNzKCkge1xyXG4gICAgdGhpcy5zaG93TGVzcy5lbWl0KHRydWUpO1xyXG4gICAgdGhpcy5kaXNwbGF5SXRlbUNvdW50ID0gdGhpcy5pbkFwcE5vdGlmaWNhdGlvbkNvbmZpZy5taW5Ob3RpZmljYXRpb25WaWV3Q291bnQ7XHJcbiAgfVxyXG5cclxufVxyXG4iXX0=