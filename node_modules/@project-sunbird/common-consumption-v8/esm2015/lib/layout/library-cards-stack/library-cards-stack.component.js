/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input, Output, EventEmitter } from '@angular/core';
import { defaultLibraryCardsGrid } from '../library-cards.data';
import { LibraryCardTypes } from '../../card/models';
export class LibraryCardsStackComponent {
    constructor() {
        this.contentList = defaultLibraryCardsGrid.contentList;
        this.isOffline = false;
        this.viewMoreButtonText = defaultLibraryCardsGrid.viewMoreButtonText;
        this.maxCardCount = defaultLibraryCardsGrid.maxCardCount;
        this.cardType = 'textbook';
        this.viewMoreClick = new EventEmitter();
        this.cardClick = new EventEmitter();
        this.menuClick = new EventEmitter();
    }
    /**
     * @return {?}
     */
    get LibraryCardTypes() { return LibraryCardTypes; }
    /**
     * @param {?} event
     * @return {?}
     */
    showAllList(event) {
        this.viewMoreClick.emit(event);
    }
    /**
     * @param {?} event
     * @param {?} index
     * @return {?}
     */
    emitCardClick(event, index) {
        this.cardClick.emit({ 'data': event.data, 'index': index });
    }
    /**
     * @param {?} event
     * @return {?}
     */
    emitMenuClick(event) {
        this.menuClick.emit(event);
    }
}
LibraryCardsStackComponent.decorators = [
    { type: Component, args: [{
                selector: 'sb-library-cards-stack',
                template: "<div class=\"card-list-container\">\r\n\r\n    <div class=\"header\" *ngIf=\"!isLoading && title\">\r\n        <div class=\"title\">\r\n            <i class=\"icon-svg icon-svg--sm\">\r\n                <svg class=\"icon\">\r\n                    <use xlink:href=\"assets/common-consumption/images/sprite.svg#book\"></use>\r\n                </svg>\r\n            </i>\r\n            {{title}}\r\n        </div>\r\n    </div>\r\n\r\n    <!--Loading Indicator for header-->\r\n    <div class=\"header\" *ngIf=\"isLoading\">\r\n            <div class=\"loading-animation sb--card--highlighter\" style=\"width:100px;height:20px;\">\r\n                    <i class=\"icon-svg icon-svg--sm\"></i>\r\n            </div>\r\n    </div>\r\n\r\n    <div class=\"body\">\r\n        <ng-container *ngIf=\"cardType==='textbook' || layoutConfig\">\r\n            <sb-library-card\r\n                *ngFor=\"let content of contentList | slice:0:(maxCardCount ? maxCardCount : contentList?.length); let i= index\" [isOffline]=\"!content?.isAvailableLocally && isOffline\"\r\n                [content]=\"content\" [type]=\"LibraryCardTypes.MOBILE_TEXTBOOK\" [isLoading]=\"isLoading\" (cardClick)=\"emitCardClick($event, i)\" [cardImg]=\"content?.cardImg\"\r\n                (menuClick)=\"emitMenuClick($event)\" [isMenu]=\"isMenu\" [layoutConfig]=\"layoutConfig\">\r\n            </sb-library-card>\r\n            <button *ngIf=\"maxCardCount && contentList?.length >maxCardCount\" class=\"sbbtn flat stack-btn full-width\"\r\n                (click)=\"showAllList($event)\">{{viewMoreButtonText}}</button>\r\n        </ng-container>\r\n        <ng-container *ngIf=\"cardType==='course' && !layoutConfig\">\r\n            <sb-course-card *ngFor=\"let content of contentList | slice:0:(maxCardCount ? maxCardCount : contentList?.length); let i= index\"\r\n                [section]=\"null\" [course]=\"content\" [cardImg]=\"content?.cardImg\" (cardClick)=\"emitCardClick($event, i)\" [isMenu]=\"isMenu\"\r\n                (menuClick)=\"emitMenuClick($event)\">\r\n            </sb-course-card>\r\n            <button *ngIf=\"maxCardCount && contentList?.length >maxCardCount\" class=\"sbbtn flat stack-btn full-width\"\r\n                (click)=\"showAllList($event)\">{{viewMoreButtonText}}</button>\r\n        </ng-container>\r\n    </div>\r\n\r\n</div>",
                styles: [".loading-animation{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-fill-mode:forwards;animation-fill-mode:forwards;-webkit-animation-iteration-count:infinite;animation-iteration-count:infinite;-webkit-animation-name:placeload;animation-name:placeload;-webkit-animation-timing-function:linear;animation-timing-function:linear;background:var(--lazyload-bg);background:var(--grey-nuance-lighter);background:linear-gradient(to right,var(--grey-nuance-lighter) 8%,var(--grey-nuance-darker) 18%,var(--grey-nuance-lighter) 33%);background-size:75rem 6.5rem;position:relative}@-webkit-keyframes placeload{0%{background-position:-29.25rem 0}100%{background-position:29.25rem 0}}@keyframes placeload{0%{background-position:-29.25rem 0}100%{background-position:29.25rem 0}}.sb--card--highlighter{height:.75rem;width:100%;margin-top:.3125rem}:host .header{display:flex;flex-direction:row;padding:.5rem 0;margin-bottom:.5rem}:host .header .title{font-size:1.125rem;line-height:1.625rem;font-weight:700;color:var(--primary-color);text-overflow:ellipsis;text-transform:capitalize;overflow:hidden;flex:1;display:flex;align-items:center}:host .header .title i{vertical-align:middle;height:1.0625rem;width:.875rem;top:0}[dir=ltr] :host .header .title i{margin-right:.5rem}[dir=rtl] :host .header .title i{margin-left:.5rem}:host .body{box-shadow:0 .125rem .4375rem 0 rgba(var(--rc-rgba-black),.16)}:host .stack-btn{background-color:var(--primary-100);padding:1rem;color:var(--primary-color);font-weight:700;border-style:none;text-transform:uppercase;vertical-align:middle;line-height:1;width:100%}@media (max-width:768px){:host .sb--card{margin-top:.0625rem}:host .sb--card:last-child{box-shadow:none}}"]
            }] }
];
LibraryCardsStackComponent.propDecorators = {
    contentList: [{ type: Input }],
    title: [{ type: Input }],
    isOffline: [{ type: Input }],
    viewMoreButtonText: [{ type: Input }],
    maxCardCount: [{ type: Input }],
    isLoading: [{ type: Input }],
    isMenu: [{ type: Input }],
    layoutConfig: [{ type: Input }],
    cardType: [{ type: Input }],
    viewMoreClick: [{ type: Output }],
    cardClick: [{ type: Output }],
    menuClick: [{ type: Output }]
};
if (false) {
    /** @type {?} */
    LibraryCardsStackComponent.prototype.contentList;
    /** @type {?} */
    LibraryCardsStackComponent.prototype.title;
    /** @type {?} */
    LibraryCardsStackComponent.prototype.isOffline;
    /** @type {?} */
    LibraryCardsStackComponent.prototype.viewMoreButtonText;
    /** @type {?} */
    LibraryCardsStackComponent.prototype.maxCardCount;
    /** @type {?} */
    LibraryCardsStackComponent.prototype.isLoading;
    /** @type {?} */
    LibraryCardsStackComponent.prototype.isMenu;
    /** @type {?} */
    LibraryCardsStackComponent.prototype.layoutConfig;
    /** @type {?} */
    LibraryCardsStackComponent.prototype.cardType;
    /** @type {?} */
    LibraryCardsStackComponent.prototype.viewMoreClick;
    /** @type {?} */
    LibraryCardsStackComponent.prototype.cardClick;
    /** @type {?} */
    LibraryCardsStackComponent.prototype.menuClick;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGlicmFyeS1jYXJkcy1zdGFjay5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AcHJvamVjdC1zdW5iaXJkL2NvbW1vbi1jb25zdW1wdGlvbi12OC8iLCJzb3VyY2VzIjpbImxpYi9sYXlvdXQvbGlicmFyeS1jYXJkcy1zdGFjay9saWJyYXJ5LWNhcmRzLXN0YWNrLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBVSxLQUFLLEVBQUUsTUFBTSxFQUFFLFlBQVksRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUMvRSxPQUFPLEVBQUUsdUJBQXVCLEVBQUUsTUFBTSx1QkFBdUIsQ0FBQztBQUNoRSxPQUFPLEVBQUUsZ0JBQWdCLEVBQWMsTUFBTSxtQkFBbUIsQ0FBQztBQVFqRSxNQUFNLE9BQU8sMEJBQTBCO0lBTnZDO1FBT2EsZ0JBQVcsR0FBRyx1QkFBdUIsQ0FBQyxXQUFXLENBQUM7UUFFbEQsY0FBUyxHQUFHLEtBQUssQ0FBQztRQUNsQix1QkFBa0IsR0FBVyx1QkFBdUIsQ0FBQyxrQkFBa0IsQ0FBQztRQUN4RSxpQkFBWSxHQUFXLHVCQUF1QixDQUFDLFlBQVksQ0FBQztRQUk1RCxhQUFRLEdBQUcsVUFBVSxDQUFDO1FBRXJCLGtCQUFhLEdBQTZCLElBQUksWUFBWSxFQUFFLENBQUM7UUFDN0QsY0FBUyxHQUFzQixJQUFJLFlBQVksRUFBRSxDQUFDO1FBQ2xELGNBQVMsR0FBc0IsSUFBSSxZQUFZLEVBQUUsQ0FBQztJQWdCaEUsQ0FBQzs7OztJQWRHLElBQUksZ0JBQWdCLEtBQUssT0FBTyxnQkFBZ0IsQ0FBQyxDQUFDLENBQUM7Ozs7O0lBRW5ELFdBQVcsQ0FBQyxLQUFLO1FBQ2IsSUFBSSxDQUFDLGFBQWEsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDbkMsQ0FBQzs7Ozs7O0lBRUQsYUFBYSxDQUFDLEtBQUssRUFBRSxLQUFLO1FBQ3RCLElBQUksQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLEVBQUUsTUFBTSxFQUFFLEtBQUssQ0FBQyxJQUFJLEVBQUUsT0FBTyxFQUFFLEtBQUssRUFBRSxDQUFDLENBQUM7SUFDaEUsQ0FBQzs7Ozs7SUFFRCxhQUFhLENBQUMsS0FBaUI7UUFDM0IsSUFBSSxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDL0IsQ0FBQzs7O1lBakNKLFNBQVMsU0FBQztnQkFDUCxRQUFRLEVBQUUsd0JBQXdCO2dCQUNsQyxpekVBQW1EOzthQUV0RDs7OzBCQUdJLEtBQUs7b0JBQ0wsS0FBSzt3QkFDTCxLQUFLO2lDQUNMLEtBQUs7MkJBQ0wsS0FBSzt3QkFDTCxLQUFLO3FCQUNMLEtBQUs7MkJBQ0wsS0FBSzt1QkFDTCxLQUFLOzRCQUVMLE1BQU07d0JBQ04sTUFBTTt3QkFDTixNQUFNOzs7O0lBWlAsaURBQTJEOztJQUMzRCwyQ0FBdUI7O0lBQ3ZCLCtDQUEyQjs7SUFDM0Isd0RBQWlGOztJQUNqRixrREFBcUU7O0lBQ3JFLCtDQUE0Qjs7SUFDNUIsNENBQWdCOztJQUNoQixrREFBMkI7O0lBQzNCLDhDQUErQjs7SUFFL0IsbURBQXVFOztJQUN2RSwrQ0FBNEQ7O0lBQzVELCtDQUE0RCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgT25Jbml0LCBJbnB1dCwgT3V0cHV0LCBFdmVudEVtaXR0ZXIgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgZGVmYXVsdExpYnJhcnlDYXJkc0dyaWQgfSBmcm9tICcuLi9saWJyYXJ5LWNhcmRzLmRhdGEnO1xyXG5pbXBvcnQgeyBMaWJyYXJ5Q2FyZFR5cGVzLCBJQ2FyZENsaWNrIH0gZnJvbSAnLi4vLi4vY2FyZC9tb2RlbHMnO1xyXG5cclxuQENvbXBvbmVudCh7XHJcbiAgICBzZWxlY3RvcjogJ3NiLWxpYnJhcnktY2FyZHMtc3RhY2snLFxyXG4gICAgdGVtcGxhdGVVcmw6ICcuL2xpYnJhcnktY2FyZHMtc3RhY2suY29tcG9uZW50Lmh0bWwnLFxyXG4gICAgc3R5bGVVcmxzOiBbJy4vbGlicmFyeS1jYXJkcy1zdGFjay5jb21wb25lbnQuc2NzcyddXHJcbn0pXHJcblxyXG5leHBvcnQgY2xhc3MgTGlicmFyeUNhcmRzU3RhY2tDb21wb25lbnQge1xyXG4gICAgQElucHV0KCkgY29udGVudExpc3QgPSBkZWZhdWx0TGlicmFyeUNhcmRzR3JpZC5jb250ZW50TGlzdDtcclxuICAgIEBJbnB1dCgpIHRpdGxlOiBzdHJpbmc7XHJcbiAgICBASW5wdXQoKSBpc09mZmxpbmUgPSBmYWxzZTtcclxuICAgIEBJbnB1dCgpIHZpZXdNb3JlQnV0dG9uVGV4dDogc3RyaW5nID0gZGVmYXVsdExpYnJhcnlDYXJkc0dyaWQudmlld01vcmVCdXR0b25UZXh0O1xyXG4gICAgQElucHV0KCkgbWF4Q2FyZENvdW50OiBudW1iZXIgPSBkZWZhdWx0TGlicmFyeUNhcmRzR3JpZC5tYXhDYXJkQ291bnQ7XHJcbiAgICBASW5wdXQoKSBpc0xvYWRpbmc6IGJvb2xlYW47XHJcbiAgICBASW5wdXQoKSBpc01lbnU7XHJcbiAgICBASW5wdXQoKSBsYXlvdXRDb25maWc6IGFueTtcclxuICAgIEBJbnB1dCgpIGNhcmRUeXBlID0gJ3RleHRib29rJztcclxuXHJcbiAgICBAT3V0cHV0KCkgdmlld01vcmVDbGljazogRXZlbnRFbWl0dGVyPE1vdXNlRXZlbnQ+ID0gbmV3IEV2ZW50RW1pdHRlcigpO1xyXG4gICAgQE91dHB1dCgpIGNhcmRDbGljazogRXZlbnRFbWl0dGVyPGFueT4gPSBuZXcgRXZlbnRFbWl0dGVyKCk7XHJcbiAgICBAT3V0cHV0KCkgbWVudUNsaWNrOiBFdmVudEVtaXR0ZXI8YW55PiA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcclxuXHJcbiAgICBnZXQgTGlicmFyeUNhcmRUeXBlcygpIHsgcmV0dXJuIExpYnJhcnlDYXJkVHlwZXM7IH1cclxuXHJcbiAgICBzaG93QWxsTGlzdChldmVudCkge1xyXG4gICAgICAgIHRoaXMudmlld01vcmVDbGljay5lbWl0KGV2ZW50KTtcclxuICAgIH1cclxuXHJcbiAgICBlbWl0Q2FyZENsaWNrKGV2ZW50LCBpbmRleCkge1xyXG4gICAgICAgIHRoaXMuY2FyZENsaWNrLmVtaXQoeyAnZGF0YSc6IGV2ZW50LmRhdGEsICdpbmRleCc6IGluZGV4IH0pO1xyXG4gICAgfVxyXG5cclxuICAgIGVtaXRNZW51Q2xpY2soZXZlbnQ6IElDYXJkQ2xpY2spIHtcclxuICAgICAgICB0aGlzLm1lbnVDbGljay5lbWl0KGV2ZW50KTtcclxuICAgIH1cclxuXHJcbn1cclxuIl19