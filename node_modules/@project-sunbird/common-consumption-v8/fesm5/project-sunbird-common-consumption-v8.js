import { Subject } from 'rxjs';
import { trigger, state, style, transition, animate } from '@angular/animations';
import { __assign, __awaiter, __generator, __values, __read, __spread } from 'tslib';
import { FormsModule } from '@angular/forms';
import { DomSanitizer } from '@angular/platform-browser';
import { CommonModule } from '@angular/common';
import { Injectable, NgModule, Component, Input, Output, EventEmitter, Host, HostBinding, Pipe, HostListener, TemplateRef, ViewChild, ContentChildren, ViewChildren, ɵɵdefineInjectable } from '@angular/core';

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var CommonConsumptionService = /** @class */ (function () {
    function CommonConsumptionService() {
    }
    CommonConsumptionService.decorators = [
        { type: Injectable, args: [{
                    providedIn: 'root'
                },] }
    ];
    /** @nocollapse */
    CommonConsumptionService.ctorParameters = function () { return []; };
    /** @nocollapse */ CommonConsumptionService.ngInjectableDef = ɵɵdefineInjectable({ factory: function CommonConsumptionService_Factory() { return new CommonConsumptionService(); }, token: CommonConsumptionService, providedIn: "root" });
    return CommonConsumptionService;
}());

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/** @enum {string} */
var LibraryCardTypes = {
    RECENTLY_VIEWED: 'recently_viewed',
    MOBILE_TEXTBOOK: 'mobile_textbook',
    DESKTOP_TEXTBOOK: 'desktop_textbook',
    QRCODE_RESULT: 'qrcode_result',
    PORTAL_QRCODE_FLATRESULT: 'portal_qrcode_flatresult',
};
/** @enum {string} */
var CourseCardGridTypes = {
    MY_COURSE_CARD_GRID: "my_course_card_grid",
    COURSE_CARD_GRID: "course_card_grid",
    MY_COURSE_RECENTLY_VIEWED_CARD_GRID: "my_course_recently_viewed_card_grid",
    CURICULUM_COURSE_CARD_GRID: "curiculum_course_card_grid",
};
/** @enum {string} */
var CardGridTypes = {
    INFINITE_CARD_GRID: "infinite_grid",
};
/** @enum {string} */
var CourseCardTypes = {
    RECENTLY_VIEWED: 'recently_viewed',
    MY_COURSE_CARD: 'my_course_card',
};
/** @enum {string} */
var LibraryCardGridTypes = {
    INFINITE_CARD_GRID: 'infinite_card_grid',
    INFINITE_CARD_GRID_WITH_HOVER: 'infinite_card_grid_with_hover',
};
/** @enum {string} */
var LibraryCardStackTypes = {
    INFINITE_CARD_STACK: 'infinite_card_stack',
};
/** @enum {string} */
var TocCardType = {
    TEXTBOOK: 'textbook',
    COURSE: 'course',
    TRACKABLE: 'trackable',
    NON_TRACKABLE: 'non_trackable',
};
/** @enum {string} */
var FlattenedType = {
    EXPAND: 'expand',
    COLLAPSE: 'collapse',
};
/** @enum {string} */
var PlatformType = {
    PORTAL: 'portal',
    MOBILE: 'mobile',
};
/** @enum {string} */
var NotificationStatus = {
    READ: 'read',
    UNREAD: 'unread',
};
/** @enum {string} */
var ExpandMode = {
    SINGLE: 'single',
    MULTIPLE: 'multiple',
};
/** @enum {string} */
var ExpandBehavior = {
    NONE: 'none',
    EXPAND_FIRST: 'expand-first',
};
/** @enum {string} */
var ButtonPosition = {
    TOP: "top",
    RIGHT: "right",
    BOTTOM: "bottom",
};

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/** @type {?} */
var staticContent = {
    "identifier": "do_21307528604532736012398",
    "orgDetails": {
        "orgName": "Odisha",
        "email": "qa_ekstep@qualitrix.com"
    },
    "subject": [
        "Physics"
    ],
    "channel": "0124784842112040965",
    "organisation": [
        "Odisha"
    ],
    "mimeType": "application/vnd.ekstep.content-collection",
    "medium": [
        "English"
    ],
    "pkgVersion": 1,
    "objectType": "Content",
    "appIcon": "https://ntpstagingall.blob.core.windows.net/ntp-content-staging/content/do_2127645021030563841271/artifact/download_1557833776003.thumb.jpg",
    "gradeLevel": "Class 6, Class 7",
    "name": "vk-3.0Course3007",
    "contentType": "Course",
    "board": "CBSE",
    "resourceType": "Course"
};

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var LibraryCardComponent = /** @class */ (function () {
    function LibraryCardComponent() {
        this.content = staticContent;
        this.isMobile = false;
        this.isOffline = false;
        this.cardImg = '';
        this.type = LibraryCardTypes.DESKTOP_TEXTBOOK;
        this.moreInfoLabel = 'Medium';
        this.section = '';
        this.btnlabel = '';
        this.btnicon = '';
        this.isMenu = false;
        this.isSelected = false;
        this.cardClick = new EventEmitter();
        this.menuClick = new EventEmitter();
    }
    Object.defineProperty(LibraryCardComponent.prototype, "LibraryCardTypes", {
        get: /**
         * @return {?}
         */
        function () { return LibraryCardTypes; },
        enumerable: true,
        configurable: true
    });
    /**
     * @return {?}
     */
    LibraryCardComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
    };
    /**
     * @return {?}
     */
    LibraryCardComponent.prototype.ngAfterViewInit = /**
     * @return {?}
     */
    function () {
    };
    /**
     * @param {?} event
     * @return {?}
     */
    LibraryCardComponent.prototype.onClick = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        this.cardClick.emit({ event: event, data: this.content });
    };
    /**
     * @param {?} event
     * @return {?}
     */
    LibraryCardComponent.prototype.onMenuClick = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        this.menuClick.emit({ event: event, data: this.content });
    };
    /**
     * @return {?}
     */
    LibraryCardComponent.prototype.test = /**
     * @return {?}
     */
    function () {
    };
    LibraryCardComponent.decorators = [
        { type: Component, args: [{
                    selector: 'sb-library-card',
                    template: "<!-- card component -->\r\n<span *ngIf=\"!layoutConfig\">\r\n<div class=\"sb--card\"\r\n  [ngClass]=\"{'sb--card--recently-viewed': type === LibraryCardTypes.RECENTLY_VIEWED, 'offline': isOffline, 'selected': isSelected}\"\r\n  (click)=\"onClick($event)\" *ngIf=\"!isLoading\">\r\n  <div class=\"sb--card__main-area\">\r\n    <!-- card img -->\r\n    <div class=\"sb--card__img\">\r\n      <div class=\"img-container\">\r\n        <img [src]=\"cardImg\" alt=\"\">\r\n      </div>\r\n    </div>\r\n    <!-- card mobile view details -->\r\n    <div class=\"sb--card__info\">\r\n        <div class=\"sb--card__meta1\">\r\n          <h4 class=\"sb--card__title sb__ellipsis sb__ellipsis--two text-left flex-basis-1\" title=\"{{content?.name}}\"><bdi>{{content?.name}}</bdi></h4>\r\n          <a *ngIf=\"isMenu\" class=\"menu\" (click)=\"onMenuClick($event);$event.stopPropagation()\"></a>\r\n        </div>\r\n      \r\n      <div class=\"sb--card__meta1 text-left\" *ngIf=\"content?.subject?.length || content?.gradeLevel?.length\">\r\n        <span class=\"data_1 ellipsis\" title=\"{{content?.subject}}\">{{content?.subject}}</span>\r\n        <span *ngIf=\"content?.subject?.length && content?.gradeLevel?.length\" class=\"dot-divider\"></span>\r\n        <span class=\"data_2 ellipsis\" title=\"{{content?.gradeLevel}}\">{{content?.gradeLevel}}</span>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- content for only desktop -->\r\n  <div *ngIf=\"type === LibraryCardTypes.DESKTOP_TEXTBOOK || type === LibraryCardTypes.PORTAL_QRCODE_FLATRESULT\">\r\n    <div class=\"sb--card__moreinfo\">\r\n      <!-- other meta info Medium, Organization etc -->\r\n      <div class=\"sb--card__meta2 text-left\">\r\n        <div class=\"sb--card__meta2_data\" *ngIf=\"content?.medium\"><span class=\"\">{{moreInfoLabel}}:\r\n            {{content?.medium}}</span></div>\r\n        <div class=\"sb--card__org sb__ellipsis\" *ngIf=\"content?.organisation\"><bdi>{{content?.organisation}}</bdi></div>\r\n      </div>\r\n      <!-- other meta info Badge and card category Book, learn, practice -->\r\n      <div class=\"sb--card__tags\">\r\n        <span class=\"sb--card__badge\" *ngIf=\"content?.badgeAssertions\"><img\r\n            [src]=\"content?.badgeAssertions[0]?.badgeClassImage\" alt=\"\" title=\"\" /></span>\r\n        <span class=\"sb--card__type\" *ngIf=\"content?.resourceType\">{{content?.resourceType}}</span>\r\n      </div>\r\n    </div>\r\n    <div *ngIf=\"type === LibraryCardTypes.PORTAL_QRCODE_FLATRESULT\">\r\n        <div>\r\n          <button class=\"sb-btn sb-btn-primary sb-btn-normal w-100 border-top-r-left-right\">\r\n            <i class=\"icon-svg icon-svg--xxs icon-videos mr-4\">\r\n              <svg class=\"icon icon-svg--white\">\r\n                <use xlink:href=\"assets/common-consumption/images/sprite.svg#play\"></use>\r\n              </svg>\r\n            </i> {{btnlabel}} </button>\r\n        </div>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Qr code card -->\r\n  <div *ngIf=\"type === LibraryCardTypes.QRCODE_RESULT\">\r\n    <!-- Section area if not available it will be hidden -->\r\n    <div class=\"sb--card__moreinfo\" *ngIf=\"section !== null\">\r\n      <div class=\"sb--card__meta2 text-left\">\r\n        <div class=\"sb--card__meta2_data sb__ellipsis sb__ellipsis--two\" *ngIf=\"section\">\r\n          <span class=\"label\">{{moreInfoLabel}}: </span>\r\n          <span class=\"value\">{{section}}</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <!-- <ng-content select=\".card-hover\">\r\n    \r\n  </ng-content> -->\r\n  <ng-container\r\n    *ngTemplateOutlet=\"gridTemplate; context: {$implicit: content?.hoverData, hoverData: content?.hoverData, content:content}\"\r\n    class=\"card-hover\">\r\n\r\n  </ng-container>\r\n</div>\r\n\r\n  <div class=\"sb--card\" *ngIf=\"isLoading\">\r\n      <div class=\"sb--card__main-area\">\r\n          <!-- card img -->\r\n          <div class=\"sb--card__img\">\r\n            <div class=\"img-container loading-animation\">\r\n              \r\n            </div>\r\n          </div>\r\n          <!-- card mobile view details -->\r\n          <div class=\"sb--card__info\">\r\n            <h4 class=\"sb--card__title loading-animation sb--card--highlighter\"></h4>\r\n            <div class=\"sb--card__meta1 text-left\">\r\n              <span class=\"data_1 ellipsis loading-animation sb--card--highlighter\"></span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"sb--card__moreinfo\" style=\"display:block;\" *ngIf=\"type === LibraryCardTypes.DESKTOP_TEXTBOOK || type === LibraryCardTypes.QRCODE_RESULT || type === LibraryCardTypes.PORTAL_QRCODE_FLATRESULT\">\r\n              <div class=\"sb--card__meta2 text-left\" style=\"float:left;width:60%\">\r\n                <div class=\"label loading-animation sb--card--highlighter\" style=\"width:80%;\"></div>\r\n                <div class=\"value loading-animation sb--card--highlighter\" style=\"width:60%;\"></div>\r\n              </div>\r\n              <div class=\"sb--card__tags\" style=\"float:right;width:30%;margin-top: 15px;\">\r\n                <div class=\"label loading-animation sb--card--highlighter\" style=\"width:80%;\"></div>\r\n              </div>\r\n              <div style=\"clear:both;\"></div>\r\n        </div>\r\n        <div *ngIf=\"type === LibraryCardTypes.PORTAL_QRCODE_FLATRESULT\">\r\n          <div>\r\n            <div class=\"label loading-animation sb--card--highlighter\" style=\"width:100%;\"></div>\r\n          </div>\r\n      </div>\r\n\r\n  </div>\r\n</span>\r\n<span *ngIf=\"layoutConfig\">\r\n    <sb-library-card-v2 [indexToDisplay]=\"indexToDisplay\" [isLoading]=\"isLoading\" [content]=\"content\" [isMobile]=\"isMobile\"\r\n    [isOffline]=\"isOffline\" [cardImg]=\"cardImg\" [type]=\"type\" [moreInfoLabel]=\"moreInfoLabel\"\r\n    [section]=\"section\" [btnlabel]=\"btnlabel\" [btnicon]=\"btnicon\"\r\n    [layoutConfig]=\"layoutConfig\" [isMenu]=\"isMenu\" (cardClick)=\"onClick($event)\" \r\n    (menuClick)=\"onMenuClick($event);$event.stopPropagation()\" [hover-template]=\"gridTemplate\"\r\n    ></sb-library-card-v2>\r\n</span>",
                    styles: [".loading-animation{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-fill-mode:forwards;animation-fill-mode:forwards;-webkit-animation-iteration-count:infinite;animation-iteration-count:infinite;-webkit-animation-name:placeload;animation-name:placeload;-webkit-animation-timing-function:linear;animation-timing-function:linear;background:var(--lazyload-bg);background:var(--grey-nuance-lighter);background:linear-gradient(to right,var(--grey-nuance-lighter) 8%,var(--grey-nuance-darker) 18%,var(--grey-nuance-lighter) 33%);background-size:75rem 6.5rem;position:relative}@-webkit-keyframes placeload{0%{background-position:-29.25rem 0}100%{background-position:29.25rem 0}}@keyframes placeload{0%{background-position:-29.25rem 0}100%{background-position:29.25rem 0}}.sb--card--highlighter{height:.75rem;width:100%;margin-top:.3125rem}:host .sb--card{width:100%;background-color:var(--white);display:flex;flex-direction:column;cursor:pointer;position:relative;margin-top:0;border:0;contain:content;border-radius:.125rem}:host .sb--card:hover{transform:translate(0,0);box-shadow:0 .125rem .4375rem 0 rgba(var(--rc-rgba-black),.16)}@media (max-width:767px){:host .sb--card{box-shadow:0 .125rem .4375rem rgba(var(--rc-rgba-black),.16)}}:host .sb--card__main-area{display:flex;flex-direction:row;align-items:center;height:5.5rem}:host .sb--card__img{height:4.5rem;width:4.5rem;overflow:hidden;flex:0 0 4.5rem;margin:.5rem}:host .sb--card__img .img-container{display:flex;align-items:center;background-color:var(--gray-100);height:4.5rem;width:4.5rem;justify-content:center}:host .sb--card__img .img-container img{max-width:100%}:host .sb--card__info{flex:1;overflow:hidden}[dir=ltr] :host .sb--card__info{padding-right:.5rem}[dir=rtl] :host .sb--card__info{padding-left:.5rem}:host .sb--card__title{color:var(--primary-color);font-size:.875rem;margin:0;line-height:1.25rem}:host .sb--card__meta1{color:var(--gray-800);font-size:.75rem;display:flex;flex-direction:row;align-items:center;flex:1;line-height:1.25rem;margin-top:.25rem}:host .sb--card .data_1{max-width:50%}:host .sb--card .data_2{flex:1}:host .sb--card .dot-divider{width:.25rem;height:.25rem;min-width:.25rem;max-width:.25rem;min-height:.25rem;max-height:.25rem;border-radius:100%;background-color:var(--gray-200);display:inline-block;margin:0 .5rem}:host .sb--card__moreinfo{border-radius:0 0 .125rem .125rem;background-color:var(--rc-FAFAFA);display:flex;flex-direction:row;align-items:stretch;justify-content:space-between;min-height:3.5rem;border-top:0 solid #cacbce}:host .sb--card__meta2{color:var(--gray-800);font-size:.75rem;line-height:.875rem;display:flex;flex-direction:column;flex-wrap:wrap;justify-content:space-around;padding:.5rem}:host .sb--card__meta2_data .label{font-weight:400}:host .sb--card__meta2_data .value{font-weight:700}:host .sb--card__org{color:var(--gray-200)}:host .sb--card__tags{display:flex;flex-direction:row;align-items:center;justify-content:flex-end;flex:1}:host .sb--card__badge{display:flex}:host .sb--card__badge img{width:1.25rem;height:1.25rem}:host .sb--card__type{background:var(--gray-200);position:relative;height:1.25rem;color:var(--white);font-size:.625rem;display:flex;align-items:center}[dir=ltr] :host .sb--card__type{padding-left:.25rem;padding-right:.5rem;margin-left:1rem}[dir=rtl] :host .sb--card__type{padding-left:.5rem;padding-right:.25rem;margin-right:1rem}:host .sb--card__type:before{content:\"\";width:0;height:0;border-width:.625rem .3125rem;border-style:solid;border-color:var(--gray-200) var(--gray-200) var(--gray-200) transparent;position:absolute;left:-10px}html[dir=rtl] :host .sb--card__type:before{right:-.625rem;left:inherit;border-color:var(--gray-200) transparent var(--gray-200) var(--gray-200)}:host .sb--card--recently-viewed .sb--card__img{height:5.5rem;width:5.5rem;flex:0 0 5.5rem;margin:0}:host .sb--card--recently-viewed .sb--card__img .img-container{display:flex;align-items:center;background-color:var(--gray-100);height:5.5rem;width:5.5rem}:host .sb--card--recently-viewed .sb--card__info{padding:.5rem;flex:1}:host .sb--card.selected{border:1px solid #024f9d;border-radius:4px;background-color:rgba(2,79,157,.2)}:host .sb--card.offline .sb--card__img .img-container{display:flex;align-items:center;background-color:var(--tertiary-color);opacity:.5}:host .sb--card.offline .sb--card__img .img-container img{margin:auto;font-size:1.5rem;color:var(--white)}:host .sb--card.offline .sb--card__info,:host .sb--card.offline .sb--card__moreinfo{opacity:.5}:host .sb--card__progressbar{height:.25rem;margin:0;border-radius:0;box-shadow:inset 0 -.0625rem .0625rem rgba(var(--rc-rgba-white),.3);width:100%;background:var(--gray-100)}:host .sb--card__progressbar>span{display:block;height:100%;background-color:var(--secondary-200);background-image:-webkit-gradient(center bottom,var(--secondary-400),var(--secondary-200));box-shadow:inset 0 .125rem .5625rem var(--gray-100),inset 0 -.125rem .375rem rgba(var(--rc-rgba-black),.4);position:relative;overflow:hidden}:host .animate>span:after{content:\"\";position:absolute;top:0;left:0;bottom:0;right:0;background-image:-webkit-gradient(linear,0 0,100% 100%,color-stop(.25,rgba(var(--rc-rgba-white),.2)),color-stop(.25,transparent),color-stop(.5,transparent),color-stop(.5,rgba(var(--rc-rgba-white),.2)),color-stop(.75,rgba(var(--rc-rgba-white),.2)),color-stop(.75,transparent),to(transparent));z-index:1;background-size:3.125rem 3.125rem;overflow:hidden;-webkit-animation:2s linear infinite move;border-radius:1.25rem .5rem .5rem 1.25rem}@-webkit-keyframes move{0%{background-position:0 0}100%{background-position:3.125rem 3.125rem}}:host .completed>span{background-color:var(--secondary-color);background-image:-webkit-linear-gradient(var(--secondary-100),var(--secondary-400))}:host .inprogress>span{background-color:var(--tertiary-color);background-image:-webkit-linear-gradient(var(--tertiary-100),var(--tertiary-400))}:host .notcompleted>span{background-color:var(--red-100);background-image:-webkit-linear-gradient(var(--red-100),var(--red-400))}:host .nostripes>span,:host .nostripes>span:after{-webkit-animation:none;-moz-animation:none;background-image:none}:host .border-top-r-left-right{border-top-left-radius:0;border-top-right-radius:0}::ng-deep .card-hover{display:none;transition:.2s ease-in}::ng-deep .sb--card:hover .card-hover{display:block;z-index:1001}::ng-deep .sb--card:hover .card-hover .child-content{color:var(--white);position:absolute;left:0;right:0;top:0;bottom:0;opacity:.95;border-radius:.125rem;background-color:var(--primary-color);z-index:1;display:flex;align-items:center;transition:.2s ease-in;flex-direction:column;justify-content:space-evenly}::ng-deep .sb--card:hover .card-hover .action-container{display:flex;width:100%;justify-content:center;align-self:center;justify-self:center;flex:1;align-items:center}::ng-deep .sb--card:hover .card-hover .action-item{padding:0 1rem;flex:1;text-align:center}::ng-deep .sb--card:hover .card-hover .action-item .sb-btn.sb-btn-primary[disabled]{background-color:transparent;opacity:.5;border:0;color:var(--white)}::ng-deep .sb--card:hover .card-hover .action-item:not(:last-child){border-right:.0625rem solid rgba(var(--rc-rgba-white),.5)}::ng-deep .sb--card:hover .card-hover .hover-meta-info{font-size:.625rem;opacity:.8;color:var(--white);line-height:.75rem;flex:0 0 25%}.menu::after{content:'\\2807';font-size:1.5rem;color:var(--gray-200);text-align:center;align-items:center;display:flex;justify-content:center;border-radius:50%;padding-left:.375rem;cursor:pointer;width:2rem;height:2rem}.menu:hover::after{background:var(--gray-0)}"]
                }] }
    ];
    LibraryCardComponent.propDecorators = {
        content: [{ type: Input }],
        isMobile: [{ type: Input }],
        isOffline: [{ type: Input }],
        cardImg: [{ type: Input }],
        type: [{ type: Input }],
        moreInfoLabel: [{ type: Input }],
        section: [{ type: Input }],
        isLoading: [{ type: Input }],
        gridTemplate: [{ type: Input, args: ['hover-template',] }],
        btnlabel: [{ type: Input }],
        btnicon: [{ type: Input }],
        isMenu: [{ type: Input }],
        layoutConfig: [{ type: Input }],
        indexToDisplay: [{ type: Input }],
        isSelected: [{ type: Input }],
        cardClick: [{ type: Output }],
        menuClick: [{ type: Output }]
    };
    return LibraryCardComponent;
}());

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/** @type {?} */
var courseData = {
    "organisation": [
        "Pre-prod Custodian Organization"
    ],
    "language": [
        "English"
    ],
    "appIcon": "",
    "mimeType": "application/vnd.ekstep.content-collection",
    "objectType": "Content",
    "contentType": "Course",
    "identifier": "do_31297042406633472017",
    "name": "Dashboard Loadtest",
    "topic": [
        "Social Science"
    ],
    "resourceType": "Course"
};

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var CourseCardComponent = /** @class */ (function () {
    function CourseCardComponent() {
        this.course = courseData;
        this.isMobile = false;
        this.isOffline = false;
        this.cardImg = courseData.appIcon;
        this.section = '';
        this.isMenu = false;
        this.cardClick = new EventEmitter();
        this.menuClick = new EventEmitter();
    }
    /**
     * @return {?}
     */
    CourseCardComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
    };
    /**
     * @return {?}
     */
    CourseCardComponent.prototype.ngAfterViewInit = /**
     * @return {?}
     */
    function () {
    };
    /**
     * @param {?} event
     * @return {?}
     */
    CourseCardComponent.prototype.onClick = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        this.cardClick.emit({ event: event, data: this.course });
    };
    /**
     * @param {?} event
     * @return {?}
     */
    CourseCardComponent.prototype.onMenuClick = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        this.menuClick.emit({ event: event, data: this.course });
    };
    CourseCardComponent.decorators = [
        { type: Component, args: [{
                    selector: 'sb-course-card',
                    template: "<!-- card component -->\r\n<div class=\"sb--card sb--card--course\" (click)=\"onClick($event)\" *ngIf=\"!isLoading\">\r\n  <div class=\"sb--card__main-area\">\r\n    <!-- card img -->\r\n    <div class=\"sb--card__img\">\r\n      <div class=\"img-container\">\r\n        <img [src]=\"cardImg\" alt=\"\">\r\n      </div>\r\n    </div>\r\n    <!-- card mobile view details -->\r\n    <div class=\"sb--card__info\">\r\n        <div class=\"sb--card__meta1\">\r\n            <h4 class=\"sb--card__title sb__ellipsis sb__ellipsis--two text-left flex-basis-1\" title=\"{{course?.name}}\">{{course?.name}}</h4>\r\n            <div *ngIf=\"isMenu\" class=\"menu\" (click)=\"onMenuClick($event);$event.stopPropagation()\"></div>\r\n        </div>\r\n      <div class=\"sb--card__meta1 text-left\">\r\n        <span class=\"data_1 sb__ellipsis sb__ellipsis--two\" title=\"{{course?.orgDetails?.orgName}}\">{{course?.orgDetails?.orgName || course?.organisation?.join(', ')}}</span>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  \r\n  <div>\r\n    <div class=\"sb--card__meta_c_data\" *ngIf=\"section!=null\" [innerHTML]=\"section\">\r\n    </div>\r\n  </div>\r\n\r\n</div>\r\n\r\n  <div class=\"sb--card\" *ngIf=\"isLoading\">\r\n      <div class=\"sb--card__main-area\">\r\n          <!-- card img -->\r\n          <div class=\"sb--card__img\">\r\n            <div class=\"img-container loading-animation\">\r\n              \r\n            </div>\r\n          </div>\r\n          <!-- card mobile view details -->\r\n          <div class=\"sb--card__info\">\r\n            <h4 class=\"sb--card__title loading-animation sb--card--highlighter\"></h4>\r\n            <div class=\"sb--card__meta1 text-left\">\r\n              <span class=\"data_1 ellipsis loading-animation sb--card--highlighter\"></span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"sb--card__meta_c_data\" style=\"display:none;\">\r\n            <div class=\"label loading-animation sb--card--highlighter\" style=\"width:80%;\"></div>\r\n        </div>\r\n  </div>",
                    styles: [".sb--card{border-radius:.125rem}.sb--card--course .sb--card__meta1{color:var(--rc-979797);font-size:.75rem;line-height:1rem}.sb--card--course .sb--card__meta_c_data{min-height:2rem;padding:.5rem;background-color:var(--rc-FAFAFA);font-size:.8rem}.sb--card--course .data_1{max-width:100%!important}", ".loading-animation{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-fill-mode:forwards;animation-fill-mode:forwards;-webkit-animation-iteration-count:infinite;animation-iteration-count:infinite;-webkit-animation-name:placeload;animation-name:placeload;-webkit-animation-timing-function:linear;animation-timing-function:linear;background:var(--lazyload-bg);background:var(--grey-nuance-lighter);background:linear-gradient(to right,var(--grey-nuance-lighter) 8%,var(--grey-nuance-darker) 18%,var(--grey-nuance-lighter) 33%);background-size:75rem 6.5rem;position:relative}@-webkit-keyframes placeload{0%{background-position:-29.25rem 0}100%{background-position:29.25rem 0}}@keyframes placeload{0%{background-position:-29.25rem 0}100%{background-position:29.25rem 0}}.sb--card--highlighter{height:.75rem;width:100%;margin-top:.3125rem}:host .sb--card{width:100%;background-color:var(--white);display:flex;flex-direction:column;cursor:pointer;position:relative;margin-top:0;border:0;contain:content;border-radius:.125rem}:host .sb--card:hover{transform:translate(0,0);box-shadow:0 .125rem .4375rem 0 rgba(var(--rc-rgba-black),.16)}@media (max-width:767px){:host .sb--card{box-shadow:0 .125rem .4375rem rgba(var(--rc-rgba-black),.16)}}:host .sb--card__main-area{display:flex;flex-direction:row;align-items:center;height:5.5rem}:host .sb--card__img{height:4.5rem;width:4.5rem;overflow:hidden;flex:0 0 4.5rem;margin:.5rem}:host .sb--card__img .img-container{display:flex;align-items:center;background-color:var(--gray-100);height:4.5rem;width:4.5rem;justify-content:center}:host .sb--card__img .img-container img{max-width:100%}:host .sb--card__info{flex:1;overflow:hidden}[dir=ltr] :host .sb--card__info{padding-right:.5rem}[dir=rtl] :host .sb--card__info{padding-left:.5rem}:host .sb--card__title{color:var(--primary-color);font-size:.875rem;margin:0;line-height:1.25rem}:host .sb--card__meta1{color:var(--gray-800);font-size:.75rem;display:flex;flex-direction:row;align-items:center;flex:1;line-height:1.25rem;margin-top:.25rem}:host .sb--card .data_1{max-width:50%}:host .sb--card .data_2{flex:1}:host .sb--card .dot-divider{width:.25rem;height:.25rem;min-width:.25rem;max-width:.25rem;min-height:.25rem;max-height:.25rem;border-radius:100%;background-color:var(--gray-200);display:inline-block;margin:0 .5rem}:host .sb--card__moreinfo{border-radius:0 0 .125rem .125rem;background-color:var(--rc-FAFAFA);display:flex;flex-direction:row;align-items:stretch;justify-content:space-between;min-height:3.5rem;border-top:0 solid #cacbce}:host .sb--card__meta2{color:var(--gray-800);font-size:.75rem;line-height:.875rem;display:flex;flex-direction:column;flex-wrap:wrap;justify-content:space-around;padding:.5rem}:host .sb--card__meta2_data .label{font-weight:400}:host .sb--card__meta2_data .value{font-weight:700}:host .sb--card__org{color:var(--gray-200)}:host .sb--card__tags{display:flex;flex-direction:row;align-items:center;justify-content:flex-end;flex:1}:host .sb--card__badge{display:flex}:host .sb--card__badge img{width:1.25rem;height:1.25rem}:host .sb--card__type{background:var(--gray-200);position:relative;height:1.25rem;color:var(--white);font-size:.625rem;display:flex;align-items:center}[dir=ltr] :host .sb--card__type{padding-left:.25rem;padding-right:.5rem;margin-left:1rem}[dir=rtl] :host .sb--card__type{padding-left:.5rem;padding-right:.25rem;margin-right:1rem}:host .sb--card__type:before{content:\"\";width:0;height:0;border-width:.625rem .3125rem;border-style:solid;border-color:var(--gray-200) var(--gray-200) var(--gray-200) transparent;position:absolute;left:-10px}html[dir=rtl] :host .sb--card__type:before{right:-.625rem;left:inherit;border-color:var(--gray-200) transparent var(--gray-200) var(--gray-200)}:host .sb--card--recently-viewed .sb--card__img{height:5.5rem;width:5.5rem;flex:0 0 5.5rem;margin:0}:host .sb--card--recently-viewed .sb--card__img .img-container{display:flex;align-items:center;background-color:var(--gray-100);height:5.5rem;width:5.5rem}:host .sb--card--recently-viewed .sb--card__info{padding:.5rem;flex:1}:host .sb--card.selected{border:1px solid #024f9d;border-radius:4px;background-color:rgba(2,79,157,.2)}:host .sb--card.offline .sb--card__img .img-container{display:flex;align-items:center;background-color:var(--tertiary-color);opacity:.5}:host .sb--card.offline .sb--card__img .img-container img{margin:auto;font-size:1.5rem;color:var(--white)}:host .sb--card.offline .sb--card__info,:host .sb--card.offline .sb--card__moreinfo{opacity:.5}:host .sb--card__progressbar{height:.25rem;margin:0;border-radius:0;box-shadow:inset 0 -.0625rem .0625rem rgba(var(--rc-rgba-white),.3);width:100%;background:var(--gray-100)}:host .sb--card__progressbar>span{display:block;height:100%;background-color:var(--secondary-200);background-image:-webkit-gradient(center bottom,var(--secondary-400),var(--secondary-200));box-shadow:inset 0 .125rem .5625rem var(--gray-100),inset 0 -.125rem .375rem rgba(var(--rc-rgba-black),.4);position:relative;overflow:hidden}:host .animate>span:after{content:\"\";position:absolute;top:0;left:0;bottom:0;right:0;background-image:-webkit-gradient(linear,0 0,100% 100%,color-stop(.25,rgba(var(--rc-rgba-white),.2)),color-stop(.25,transparent),color-stop(.5,transparent),color-stop(.5,rgba(var(--rc-rgba-white),.2)),color-stop(.75,rgba(var(--rc-rgba-white),.2)),color-stop(.75,transparent),to(transparent));z-index:1;background-size:3.125rem 3.125rem;overflow:hidden;-webkit-animation:2s linear infinite move;border-radius:1.25rem .5rem .5rem 1.25rem}@-webkit-keyframes move{0%{background-position:0 0}100%{background-position:3.125rem 3.125rem}}:host .completed>span{background-color:var(--secondary-color);background-image:-webkit-linear-gradient(var(--secondary-100),var(--secondary-400))}:host .inprogress>span{background-color:var(--tertiary-color);background-image:-webkit-linear-gradient(var(--tertiary-100),var(--tertiary-400))}:host .notcompleted>span{background-color:var(--red-100);background-image:-webkit-linear-gradient(var(--red-100),var(--red-400))}:host .nostripes>span,:host .nostripes>span:after{-webkit-animation:none;-moz-animation:none;background-image:none}:host .border-top-r-left-right{border-top-left-radius:0;border-top-right-radius:0}::ng-deep .card-hover{display:none;transition:.2s ease-in}::ng-deep .sb--card:hover .card-hover{display:block;z-index:1001}::ng-deep .sb--card:hover .card-hover .child-content{color:var(--white);position:absolute;left:0;right:0;top:0;bottom:0;opacity:.95;border-radius:.125rem;background-color:var(--primary-color);z-index:1;display:flex;align-items:center;transition:.2s ease-in;flex-direction:column;justify-content:space-evenly}::ng-deep .sb--card:hover .card-hover .action-container{display:flex;width:100%;justify-content:center;align-self:center;justify-self:center;flex:1;align-items:center}::ng-deep .sb--card:hover .card-hover .action-item{padding:0 1rem;flex:1;text-align:center}::ng-deep .sb--card:hover .card-hover .action-item .sb-btn.sb-btn-primary[disabled]{background-color:transparent;opacity:.5;border:0;color:var(--white)}::ng-deep .sb--card:hover .card-hover .action-item:not(:last-child){border-right:.0625rem solid rgba(var(--rc-rgba-white),.5)}::ng-deep .sb--card:hover .card-hover .hover-meta-info{font-size:.625rem;opacity:.8;color:var(--white);line-height:.75rem;flex:0 0 25%}.menu::after{content:'\\2807';font-size:1.5rem;color:var(--gray-200);text-align:center;align-items:center;display:flex;justify-content:center;border-radius:50%;padding-left:.375rem;cursor:pointer;width:2rem;height:2rem}.menu:hover::after{background:var(--gray-0)}"]
                }] }
    ];
    /** @nocollapse */
    CourseCardComponent.ctorParameters = function () { return []; };
    CourseCardComponent.propDecorators = {
        course: [{ type: Input }],
        isMobile: [{ type: Input }],
        isOffline: [{ type: Input }],
        cardImg: [{ type: Input }],
        section: [{ type: Input }],
        isLoading: [{ type: Input }],
        isMenu: [{ type: Input }],
        cardClick: [{ type: Output }],
        menuClick: [{ type: Output }]
    };
    return CourseCardComponent;
}());

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var CardHoverComponent = /** @class */ (function () {
    function CardHoverComponent() {
        this.hoverActionClick = new EventEmitter();
        this.text = 'click';
    }
    /**
     * @return {?}
     */
    CardHoverComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
    };
    /**
     * @return {?}
     */
    CardHoverComponent.prototype.ngAfterViewInit = /**
     * @return {?}
     */
    function () {
    };
    /**
     * @param {?} item
     * @param {?} content
     * @param {?} event
     * @return {?}
     */
    CardHoverComponent.prototype.actionClick = /**
     * @param {?} item
     * @param {?} content
     * @param {?} event
     * @return {?}
     */
    function (item, content, event) {
        this.hoverActionClick.emit({ event: event, hover: item, content: content });
        event.stopPropagation();
    };
    CardHoverComponent.decorators = [
        { type: Component, args: [{
                    selector: 'sb-card-hover',
                    template: "\r\n<!-- <div class=\"card-hover\"> -->\r\n    <div class=\"action-container\">\r\n        <ng-container *ngFor=\"let item of hoverData?.actions\">\r\n            <div class=\"action-item\" *ngIf=\"item.type === 'save'\">\r\n                <button class=\"sb-btn-grow\" (click)=\"actionClick(item, content, $event);\" [disabled]=\"item.disabled\">\r\n                    <i class=\"icon-svg icon-svg--md\">\r\n                        <svg class=\"icon\">\r\n                            <use xlink:href=\"assets/common-consumption/images/sprite.svg#pendrive\"></use>\r\n                        </svg>\r\n                    </i>\r\n                  <span class=\"sb__ellipsis\">{{item.label}}</span>\r\n                </button>\r\n            </div>\r\n            <div class=\"action-item\" *ngIf=\"item.type === 'download'\">\r\n                <button class=\"sb-btn-grow\" (click)=\"actionClick(item, content, $event);\" [disabled]=\"item.disabled\">\r\n                    <i class=\"icon-svg icon-svg--md\">\r\n                        <svg class=\"icon\">\r\n                            <use xlink:href=\"assets/common-consumption/images/sprite.svg#outline-cloud_download\"></use>\r\n                        </svg>\r\n                    </i>\r\n                    <span class=\"sb__ellipsis\">{{item.label}}</span>\r\n                  </button>\r\n            </div>\r\n            <div class=\"action-item\" *ngIf=\"item.type === 'open'\">\r\n                <button class=\"sb-btn-grow\" (click)=\"actionClick(item, content, $event);\" [disabled]=\"item.disabled\">\r\n                    <i class=\"icon-svg icon-svg--md\">\r\n                        <svg class=\"icon\">\r\n                            <use xlink:href=\"assets/common-consumption/images/sprite.svg#book-open\"></use>\r\n                        </svg>\r\n                    </i>\r\n                    <span class=\"sb__ellipsis\">{{item.label}}</span>\r\n                  </button>\r\n            </div>\r\n            <div class=\"action-item\" *ngIf=\"item.type === 'view'\">\r\n                <button class=\"sb-btn-grow\" (click)=\"actionClick(item, content, $event);\" [disabled]=\"item.disabled\">\r\n                    <i class=\"icon-svg icon-svg--sm\">\r\n                        <svg class=\"icon\">\r\n                            <use xlink:href=\"assets/common-consumption/images/sprite.svg#eye\"></use>\r\n                        </svg>\r\n                    </i>\r\n                    <span class=\"sb__ellipsis\">{{item.label}}</span>\r\n                  </button>\r\n            </div>\r\n            <div class=\"action-item\" *ngIf=\"item.type === 'addToGroup'\">\r\n                <button class=\"sb-btn-grow\" (click)=\"actionClick(item, content, $event);\" [disabled]=\"item.disabled\">\r\n                    <i class=\"icon-svg icon-svg--sm\">\r\n                        <svg class=\"icon\">\r\n                            <use xlink:href=\"assets/common-consumption/images/sprite.svg#add-icon\"></use>\r\n                        </svg>\r\n                    </i>\r\n                    <span class=\"sb__ellipsis\">{{item.label}}</span>\r\n                  </button>\r\n            </div>\r\n            <div  class=\"d-flex flex-ai-center flex-jc-center fnormal sb-color-white\" *ngIf=\"item.type === 'text'\">\r\n                {{item?.label}}\r\n                </div>\r\n        </ng-container>\r\n        \r\n        <!-- <div class=\"action-item\">\r\n            <button class=\"sb-btn sb-btn-link sb-btn-link- sb-btn-normal sb-btn-square sb-color-white w-auto sb-btn-grow\" (click)=\"test('button3'); $event.stopPropagation()\">\r\n                <i class=\"icon-svg icon-svg--sm\">\r\n                    <svg class=\"icon\">\r\n                        <use xlink:href=\"assets/common-consumption/images/sprite.svg#book\"></use>\r\n                    </svg>\r\n                </i>\r\n                <span>{{text}}</span>\r\n              </button>\r\n        </div> -->\r\n    </div>\r\n    <div class=\"hover-meta-info\" *ngIf=\"hoverData?.note\">\r\n        {{hoverData?.note}}\r\n    </div>\r\n<!-- </div> -->",
                    styles: [".sb-btn-grow{background:0 0;border:0 solid transparent;font-size:.75rem;color:var(--white);cursor:pointer;outline:0!important;transition:.2s ease-in-out}.sb-btn-grow:disabled{opacity:.4;cursor:default}.sb-btn-grow:hover:not([disabled]){background:0 0;transform:scale(1.15)}"]
                }] }
    ];
    /** @nocollapse */
    CardHoverComponent.ctorParameters = function () { return []; };
    CardHoverComponent.propDecorators = {
        hoverData: [{ type: Input }],
        content: [{ type: Input }],
        hoverActionClick: [{ type: Output }]
    };
    return CardHoverComponent;
}());

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var MimeTypeMasterData = /** @class */ (function () {
    function MimeTypeMasterData() {
    }
    MimeTypeMasterData.COLLECTION = 'application/vnd.ekstep.content-collection';
    MimeTypeMasterData.VIDEO = ['video/avi', 'video/mpeg', 'video/quicktime', 'video/3gpp', 'video/mpeg', 'video/mp4',
        'video/ogg', 'video/webm'];
    MimeTypeMasterData.AUDIO = ['audio/mp3', 'audio/mp4', 'audio/mpeg', 'audio/ogg', 'audio/webm', 'audio/x-wav', 'audio/wav'];
    MimeTypeMasterData.INTERACTIVE = ['application/vnd.ekstep.ecml-archive', 'application/vnd.ekstep.html-archive',
        'application/vnd.android.package-archive', 'application/vnd.ekstep.content-archive',
        'application/vnd.ekstep.plugin-archive', 'application/vnd.ekstep.h5p-archive'];
    MimeTypeMasterData.DOCS = ['application/pdf', 'application/epub', 'application/msword'];
    MimeTypeMasterData.ALL = ['video/mp4', 'video/x-youtube', 'video/webm', 'application/pdf', 'application/epub',
        'application/pdf', 'application/epub', 'application/vnd.ekstep.ecml-archive', 'application/vnd.ekstep.h5p-archive',
        'application/vnd.ekstep.html-archive'
    ];
    return MimeTypeMasterData;
}());
/*
  Contents are filtered based on given mimetype
*/
var MimeTypePipe = /** @class */ (function () {
    function MimeTypePipe() {
    }
    /**
     * @param {?=} item
     * @param {?=} mimeTypes
     * @param {?=} isTextbookTocPage
     * @return {?}
     */
    MimeTypePipe.prototype.transform = /**
     * @param {?=} item
     * @param {?=} mimeTypes
     * @param {?=} isTextbookTocPage
     * @return {?}
     */
    function (item, mimeTypes, isTextbookTocPage) {
        if (mimeTypes === void 0) { mimeTypes = ['all']; }
        if (isTextbookTocPage === void 0) { isTextbookTocPage = false; }
        if (mimeTypes.indexOf('all') > -1 && item != null) {
            if (item.mimeType !== MimeTypeMasterData.COLLECTION && !item.children) {
                return true;
            }
            else {
                if (item.mimeType === MimeTypeMasterData.COLLECTION && item.children && !item.children.length) {
                    return false;
                }
                if (item.children && item.children.length) {
                    return this.getFilteredItems(item.children, MimeTypeMasterData.ALL);
                }
                else {
                    return true;
                }
            }
        }
        if (item != null && item.mimeType !== MimeTypeMasterData.COLLECTION && (!item.children || !item.children.length)) {
            return this.getFilteredItems([item], mimeTypes);
        }
        if (item != null) {
            return this.getFilteredItems(item.children, mimeTypes);
        }
        else {
            return null;
        }
    };
    /**
     * @param {?} contents
     * @param {?} mimeTypes
     * @return {?}
     */
    MimeTypePipe.prototype.getFilteredItems = /**
     * @param {?} contents
     * @param {?} mimeTypes
     * @return {?}
     */
    function (contents, mimeTypes) {
        if (contents) {
            return this.flattenDeep(contents)
                .some((/**
             * @param {?} c
             * @return {?}
             */
            function (c) { return !!mimeTypes.find((/**
             * @param {?} m
             * @return {?}
             */
            function (m) { return m === c.mimeType; })); }));
        }
    };
    /**
     * @private
     * @param {?} contents
     * @return {?}
     */
    MimeTypePipe.prototype.flattenDeep = /**
     * @private
     * @param {?} contents
     * @return {?}
     */
    function (contents) {
        var _this = this;
        if (contents) {
            return contents.reduce((/**
             * @param {?} acc
             * @param {?} val
             * @return {?}
             */
            function (acc, val) {
                if (val.children) {
                    acc.push(val);
                    return acc.concat(_this.flattenDeep(val.children));
                }
                else {
                    return acc.concat(val);
                }
            }), []);
        }
    };
    MimeTypePipe.decorators = [
        { type: Pipe, args: [{
                    name: 'hasMimeType',
                },] }
    ];
    return MimeTypePipe;
}());

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/** @type {?} */
var COMMON_CONSUMPTION_CONSTANTS = {
    'TOC_CARD_FALLBACK_IMG': 'assets/common-consumption/images/book.png'
};

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var TocCardComponent = /** @class */ (function () {
    function TocCardComponent() {
        this.type = TocCardType.TEXTBOOK;
        this.contentStatus = [];
        this.trackableDefaultImage = '';
        this.platform = PlatformType.MOBILE;
        this.tocCardClick = new EventEmitter();
        this.playButtonClick = new EventEmitter();
        this.scoreLabel = '';
        this.disabled = '';
        this.fallbackImg = COMMON_CONSUMPTION_CONSTANTS.TOC_CARD_FALLBACK_IMG;
        this.isContentStarted = false;
        this.isCourseCompleted = false;
        this.isLastAttempt = false;
        this.isDisabled = false;
    }
    Object.defineProperty(TocCardComponent.prototype, "TocCardType", {
        get: /**
         * @return {?}
         */
        function () { return TocCardType; },
        enumerable: true,
        configurable: true
    });
    /**
     * @return {?}
     */
    TocCardComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        var _this = this;
        if (this.type === TocCardType.COURSE) {
            this.createIconMap();
        }
        this.getBestScore();
        setTimeout((/**
         * @return {?}
         */
        function () {
            if (_this.activeContent && _this.activeContent.sbUniqueIdentifier === _this.content.sbUniqueIdentifier) {
                _this.tocCardClick.emit({ event: {}, data: __assign({}, _this.content) });
            }
        }));
        if (!this.playBtnConfig) {
            this.playBtnConfig = {
                label: 'Play',
                show: false
            };
        }
        if (!this.platform) {
            this.platform = PlatformType.MOBILE;
        }
    };
    /**
     * @param {?} changes
     * @return {?}
     */
    TocCardComponent.prototype.ngOnChanges = /**
     * @param {?} changes
     * @return {?}
     */
    function (changes) {
        if (changes && changes.contentStatus) {
            if (this.type === TocCardType.COURSE) {
                this.createIconMap();
            }
            this.getBestScore();
        }
    };
    /**
     * @param {?} event
     * @return {?}
     */
    TocCardComponent.prototype.onTocCardClick = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                if (this.isLastAttempt) {
                    event.isLastAttempt = true;
                    this.tocCardClick.emit({ event: event, data: __assign({}, this.content) });
                }
                else if (this.isDisabled) {
                    event.isDisabled = true;
                    this.tocCardClick.emit({ event: event, data: __assign({}, this.content) });
                }
                else if (this.activeContent && this.activeContent.sbUniqueIdentifier !== this.content.sbUniqueIdentifier) {
                    this.tocCardClick.emit({ event: event, data: __assign({}, this.content) });
                }
                else if (this.type = TocCardType.COURSE) {
                    this.tocCardClick.emit({ event: event, data: __assign({}, this.content) });
                }
                return [2 /*return*/];
            });
        });
    };
    /**
     * @return {?}
     */
    TocCardComponent.prototype.createIconMap = /**
     * @return {?}
     */
    function () {
        var _this = this;
        /** @type {?} */
        var mimeTypesData = MimeTypeMasterData;
        this.isCourseCompleted = this.contentStatus.find((/**
         * @param {?} item
         * @return {?}
         */
        function (item) {
            if (item.contentId === _this.content.identifier && item.status === 2) {
                return true;
            }
        }));
        this.isContentStarted = !!(this.contentStatus.find((/**
         * @param {?} item
         * @return {?}
         */
        function (item) {
            if (item.contentId === _this.content.identifier && item.status === 1) {
                return true;
            }
        })));
        if (this.isCourseCompleted) {
            this.content.appIcon = 'assets/common-consumption/images/sprite.svg#circle-with-check-symbol';
        }
        else {
            this.iconPathMap = [
                [mimeTypesData.COLLECTION, 'assets/common-consumption/images/sprite.svg#doc'],
                [mimeTypesData.VIDEO, 'assets/common-consumption/images/sprite.svg#play'],
                [mimeTypesData.AUDIO, 'assets/common-consumption/images/sprite.svg#play'],
                [mimeTypesData.INTERACTIVE, 'assets/common-consumption/images/sprite.svg#touch'],
                [mimeTypesData.DOCS, 'assets/common-consumption/images/sprite.svg#doc'],
            ];
            this.content.appIcon = this.getIconPath(this.content.mimeType);
        }
    };
    /**
     * @return {?}
     */
    TocCardComponent.prototype.getBestScore = /**
     * @return {?}
     */
    function () {
        var _this = this;
        this.contentStatus.forEach((/**
         * @param {?} item
         * @return {?}
         */
        function (item) {
            if (item.contentId === _this.content.identifier && item.bestScore && _this.scoreLabel && _this.maxAttempts) {
                _this.bestScoreLabel = _this.scoreLabel + ' ' + (Math.round(item.bestScore.totalScore * 100) / 100).toString() + '/' + item.bestScore.totalMaxScore.toString();
                if (_this.maxAttempts - item.score.length === 1) {
                    _this.isLastAttempt = true;
                    _this.isDisabled = false;
                }
                if (item.score.length >= _this.maxAttempts) {
                    _this.isDisabled = true;
                    _this.isLastAttempt = false;
                }
            }
        }));
    };
    /**
     * @param {?} contentMimeType
     * @return {?}
     */
    TocCardComponent.prototype.getIconPath = /**
     * @param {?} contentMimeType
     * @return {?}
     */
    function (contentMimeType) {
        var e_1, _a;
        try {
            for (var _b = __values(this.iconPathMap), _c = _b.next(); !_c.done; _c = _b.next()) {
                var _d = __read(_c.value, 2), key = _d[0], value = _d[1];
                if (key.indexOf(contentMimeType) >= 0) {
                    return value;
                }
            }
        }
        catch (e_1_1) { e_1 = { error: e_1_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_1) throw e_1.error; }
        }
        return '';
    };
    /**
     * @param {?} event
     * @return {?}
     */
    TocCardComponent.prototype.onPlayButtonClick = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        this.playButtonClick.emit({ event: event, data: __assign({}, this.content) });
    };
    /**
     * @param {?} content
     * @return {?}
     */
    TocCardComponent.prototype.swapCard = /**
     * @param {?} content
     * @return {?}
     */
    function (content) {
        if (this.platform === PlatformType.MOBILE) {
            return false;
        }
        if (this.isTrackable(content)) {
            return false;
        }
        return true;
    };
    /**
     * @param {?} content
     * @return {?}
     */
    TocCardComponent.prototype.isTrackable = /**
     * @param {?} content
     * @return {?}
     */
    function (content) {
        if ((content.contentData && content.contentData.trackable && content.contentData.trackable.enabled === 'Yes') ||
            (content.trackable && content.trackable.enabled === 'Yes')) {
            return true;
        }
        return false;
    };
    /**
     * @param {?} content
     * @return {?}
     */
    TocCardComponent.prototype.getContentImage = /**
     * @param {?} content
     * @return {?}
     */
    function (content) {
        if (this.isTrackable(content) && this.trackableDefaultImage) {
            return this.trackableDefaultImage;
        }
        return content.appIcon || (content.contentData && content.contentData.appIcon);
    };
    TocCardComponent.decorators = [
        { type: Component, args: [{
                    selector: 'sb-toc-card',
                    template: "<!-- For card type textbook -->\r\n<div *ngIf=\"type === TocCardType.TEXTBOOK\">\r\n  <div class=\"sbchapter__item\" (click)=\"onTocCardClick($event)\"\r\n    [ngClass]=\"{'sbchapter__item--active': activeContent?.sbUniqueIdentifier === content?.sbUniqueIdentifier}\">\r\n    <h4 class=\"sbchapter__item__title sbchapter__item__title text-left sb__ellipsis sb__ellipsis--two mr-8\" title=\"{{content?.name}}\">\r\n      {{content?.name}}\r\n    </h4>\r\n    <div class=\"sbchapter__img\"><img [src]=\"content?.appIcon || fallbackImg\" (error)=\"img.src = fallbackImg\" alt=\"\"\r\n        #img />\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<!-- For card type TRACKABLE -->\r\n<div *ngIf=\"type === TocCardType.TRACKABLE\">\r\n  <div class=\"sbchapter__item\" [ngClass]=\"{'sb-card-swap': swapCard(content)}\" (click)=\"onTocCardClick($event)\"\r\n    [ngClass]=\"{'sbchapter__item--active': activeContent?.sbUniqueIdentifier === content?.sbUniqueIdentifier}\">\r\n    <div class=\"relative\">\r\n      <img src=\"assets/common-consumption/images/completed.svg\" *ngIf=\"content?.isAvailableLocally\" class=\"sb_success_check\" alt=\"\">\r\n      <div class=\"sbchapter__img\">\r\n        <img [src]=\"getContentImage(content) || fallbackImg\" alt=\"\" #img />\r\n      </div>\r\n    </div>\r\n    <div class=\"arrange-card-items certificate-course-contentt pl-8\">\r\n      <h4 class=\"sbchapter__item__title text-left sb__ellipsis sb__ellipsis--two mr-8 ml-8\" title=\"{{content?.name}}\">\r\n        {{content?.name}}\r\n      </h4>\r\n      <h4 *ngIf=\"bestScoreLabel\" class=\"sbchapter__item__score pr-8 ml-auto\" title=\"{{bestScoreLabel}}\">\r\n        {{bestScoreLabel}}\r\n      </h4>\r\n    </div>\r\n    <button class=\"sbchapter__play__btn\" *ngIf=\"!isTrackable(content) && playBtnConfig.show\"\r\n      (click)=\"$event.stopImmediatePropagation(); $event.preventDefault(); onPlayButtonClick($event)\">\r\n      <svg class=\"icon icon-svg--primary\">\r\n        <use xlink:href=\"assets/common-consumption/images/sprite.svg#play\"></use>\r\n      </svg>\r\n      {{playBtnConfig.label}}\r\n    </button>\r\n  </div>\r\n</div>\r\n\r\n<!-- For card type course -->\r\n<div *ngIf=\"type === TocCardType.COURSE\">\r\n  <div class=\"sbchapter__item\"  (click)=\"onTocCardClick($event)\"\r\n  [ngClass]=\"[(activeContent?.sbUniqueIdentifier === content?.sbUniqueIdentifier) ? 'sbchapter__item--active': '', isDisabled ? disabled: '']\">\r\n  <div class=\"sbchapter__img background-transparent\" [ngClass]=\"{'sbchapter__img--inprogress':isContentStarted}\">\r\n    {{createIconMap()}}\r\n    <i class=\"icon-svg icon-svg--sm\" *ngIf=\"content?.appIcon\">\r\n      <svg class=\"icon icon-svg--primary\">\r\n        <use [attr.xlink:href]=\"content?.appIcon\"></use>\r\n      </svg>\r\n    </i>\r\n    <img [src]=\"fallbackImg\" *ngIf=\"!content?.appIcon\" alt=\"\" #img />\r\n  </div>\r\n  <div class=\"certificate-course-content pl-8\">\r\n    <div class=\"sbchapter__item__title text-left sb__ellipsis sb__ellipsis--two mr-8 pt-4\" title=\"{{content?.name}}\">\r\n      {{content?.name}}\r\n    </div>\r\n      <div *ngIf=\"bestScoreLabel\" class=\"sbchapter__item__score pr-8 ml-auto\" title=\"{{bestScoreLabel}}\">\r\n        {{bestScoreLabel}}\r\n      </div>\r\n  </div>\r\n  </div>\r\n</div>\r\n\r\n<!-- For card type NON TRACKABLE -->\r\n<div *ngIf=\"type === TocCardType.NON_TRACKABLE\">\r\n  <div class=\"sbchapter__item\"  (click)=\"onTocCardClick($event)\"\r\n    [ngClass]=\"[(activeContent?.sbUniqueIdentifier === content?.sbUniqueIdentifier) ? 'sbchapter__item--active': '', isDisabled ? disabled: '']\">\r\n    <div class=\"sbchapter__img background-transparent\" [ngClass]=\"{'sbchapter__img--inprogress':isContentStarted}\">\r\n      {{createIconMap()}}\r\n      <i class=\"icon-svg icon-svg--sm\" *ngIf=\"content?.appIcon\">\r\n        <svg class=\"icon icon-svg--primary\">\r\n          <use [attr.xlink:href]=\"content?.appIcon\"></use>\r\n        </svg>\r\n      </i>\r\n      <img [src]=\"fallbackImg\" *ngIf=\"!content?.appIcon\" alt=\"\" #img />\r\n    </div>\r\n    <div class=\"certificate-course-content pl-8\">\r\n      <div class=\"sbchapter__item__title text-left sb__ellipsis sb__ellipsis--two mr-8 pt-4\" title=\"{{content?.name}}\">\r\n        {{content?.name}}\r\n      </div>\r\n      <div *ngIf=\"bestScoreLabel\" class=\"sbchapter__item__score pr-8 ml-auto\" title=\"{{bestScoreLabel}}\">\r\n        {{bestScoreLabel}}\r\n      </div> \r\n    </div>\r\n    <button class=\"sbchapter__play__btn\" *ngIf=\"!(content?.contentData?.trackable?.enabled === 'Yes') && playBtnConfig.show\" \r\n      (click)=\"$event.stopImmediatePropagation(); $event.preventDefault(); onPlayButtonClick($event)\">\r\n      <svg class=\"icon icon-svg--primary\">\r\n        <use xlink:href=\"assets/common-consumption/images/sprite.svg#play\"></use>\r\n      </svg>\r\n      {{playBtnConfig.label}}\r\n    </button>\r\n  </div>\r\n</div>",
                    styles: [".sbchapter__item{background:var(--white);border:.0625rem solid var(--primary-300);box-shadow:0 .1875rem .25rem 0 rgba(var(--rc-rgba-primary),.1);display:flex;align-items:center;margin-bottom:.5rem;padding:.5rem;cursor:pointer;min-height:3.5rem;transition:.2s ease-in}.sbchapter__item .sbchapter__img{width:1.5rem;height:1.5rem;flex:0 0 1.5rem;display:flex;align-items:center;background:var(--rc-dddddd)}.sbchapter__item .sbchapter__img img{width:100%;max-height:100%;-o-object-fit:cover;object-fit:cover}.sbchapter__item .sbchapter__img .icon-svg svg.icon.icon-svg--primary{fill:#9cb9ff}.sbchapter__item .sbchapter__img--inprogress .icon-svg svg.icon.icon-svg--primary{fill:var(--primary-color)}.sbchapter__item--active,.sbchapter__item--active:hover,.sbchapter__item:hover{background:var(--primary-100)}.sbchapter__item--active .sbchapter__item__title{font-weight:700}.sbchapter__item__title{font-size:.75rem;line-height:1.25rem;color:var(--primary-400);margin:0 2rem 0 0;padding:0;font-weight:400}.sbchapter__item__score{text-transform:uppercase;color:#3f19c3;font-size:.6875rem;text-align:right;white-space:nowrap}.certificate-course-content{display:flex;align-items:center;width:100%}@media (max-width:767px){.sbchapter__item__title{margin-right:0;margin-bottom:.5rem}.sbchapter__item__score{text-align:left}.certificate-course-content{display:block}}.pl-8{padding-left:.5rem}.background-transparent{background:0 0!important}.sbchapter__play__btn{border:.0625rem solid var(--primary-color);border-radius:1rem;color:var(--primary-color);background-color:var(--white);padding:.25rem}.sbchapter__play__btn svg{height:1rem;width:1rem;vertical-align:middle}.sb-card-swap{flex-direction:row-reverse}.sb-card-swap .arrange-card-items{display:contents}.sb_success_check{position:absolute;top:-.3rem;right:-.3rem}.pr-8{padding-right:.5rem}.ml-auto{margin-left:auto}"]
                }] }
    ];
    TocCardComponent.propDecorators = {
        content: [{ type: Input }],
        activeContent: [{ type: Input }],
        type: [{ type: Input }],
        contentStatus: [{ type: Input }],
        refresh: [{ type: Input }],
        playBtnConfig: [{ type: Input }],
        trackableDefaultImage: [{ type: Input }],
        platform: [{ type: Input }],
        tocCardClick: [{ type: Output }],
        playButtonClick: [{ type: Output }],
        scoreLabel: [{ type: Input }],
        maxAttempts: [{ type: Input }],
        disabled: [{ type: Input }]
    };
    return TocCardComponent;
}());

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/** @type {?} */
var myCourse = {
    "dateTime": "2019-07-20 07:16:00.302Z",
    "lastReadContentStatus": 2,
    "enrolledDate": "2019-07-12 06:13:18:811+0000",
    "addedBy": null,
    "delta": null,
    "contentId": "do_21278859656586035211271",
    "batch": {
        "identifier": "01278861095539507215",
        "endDate": "2019-11-08",
        "createdBy": "ab467e6e-1f32-453c-b1d8-c6b5fa6c7b9e",
        "name": "This is Open Batch",
        "enrollmentType": "open",
        "startDate": "2019-06-21",
        "status": 2
    },
    "active": true,
    "description": "This is a sample course which contains all content types",
    "courseLogoUrl": "https://ntpstagingall.blob.core.windows.net/ntp-content-staging/content/do_21278859656586035211271/artifact/1200x1023_1560751586952.thumb.jpg",
    "batchId": "01278861095539507215",
    "userId": "d156e1be-9d11-45e3-b6a2-6aa8b88a79bb",
    "content": {
        "identifier": "do_21278859656586035211271",
        "orgDetails": {
            "orgName": "Odisha",
            "email": "qa_ekstep@qualitrix.com"
        },
        "channel": "0124784842112040965",
        "name": "vk-allcontentcourse",
        "topic": [
            "Teaching and Classroom Management"
        ],
        "contentType": "Course",
        "objectType": "Content"
    },
    "contentStatus": "{\"do_21278859467422924811267\":2,\"do_212686701951557632146\":2,\"do_212731858982608896136\":1,\"do_21266818477830144012700\":2,\"do_2127319848127283201364\":2}",
    "completionPercentage": 50,
    "courseName": "vk-allcontentcourse",
    "completedOn": null,
    "leafNodesCount": 8,
    "grade": null,
    "progress": 4,
    "lastReadContentId": "do_21266818477830144012700",
    "courseId": "do_21278859656586035211271",
    "status": 1
};

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var MyCourseCardComponent = /** @class */ (function () {
    function MyCourseCardComponent() {
        this.course = myCourse;
        this.isMobile = false;
        this.isOffline = false;
        this.cardImg = myCourse.courseLogoUrl;
        this.section = '';
        this.hideProgress = false;
        this.cardClick = new EventEmitter();
    }
    Object.defineProperty(MyCourseCardComponent.prototype, "CourseCardTypes", {
        get: /**
         * @return {?}
         */
        function () { return CourseCardTypes; },
        enumerable: true,
        configurable: true
    });
    /**
     * @return {?}
     */
    MyCourseCardComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
    };
    /**
     * @return {?}
     */
    MyCourseCardComponent.prototype.ngAfterViewInit = /**
     * @return {?}
     */
    function () {
    };
    /**
     * @param {?} event
     * @return {?}
     */
    MyCourseCardComponent.prototype.onClick = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        this.cardClick.emit({ event: event, data: this.course });
    };
    /**
     * @return {?}
     */
    MyCourseCardComponent.prototype.fetchProgress = /**
     * @return {?}
     */
    function () {
        /** @type {?} */
        var bgColor = "#024f9d";
        /** @type {?} */
        var endDate = (this.course.batch != null && this.course.batch.endDate != null) ? new Date(this.course.batch.endDate) : null;
        if (this.course.completionPercentage == "100") {
            bgColor = "#07bc81"; // green
        }
        else if (endDate != null && endDate < new Date()) {
            bgColor = "#ff4558"; // red
        }
        /** @type {?} */
        var widthStyle = this.course.completionPercentage + "%";
        return {
            width: widthStyle,
            'background-color': bgColor
        };
    };
    MyCourseCardComponent.decorators = [
        { type: Component, args: [{
                    selector: 'sb-my-course-card',
                    template: "<!-- card component -->\r\n<div class=\"sb--card sb--card--course\" [ngClass]=\"{'sb--card--recently-viewed': type === CourseCardTypes.RECENTLY_VIEWED, 'offline': isOffline}\"\r\n  (click)=\"onClick($event)\" *ngIf=\"!isLoading\">\r\n  <div class=\"sb--card__main-area\">\r\n    <!-- card img -->\r\n    <div class=\"sb--card__img\">\r\n      <div class=\"img-container\">\r\n        <img [src]=\"cardImg\" alt=\"\">\r\n      </div>\r\n    </div>\r\n    <!-- card mobile view details -->\r\n    <div class=\"sb--container-box\">\r\n      <div class=\"sb--card__info\">\r\n        <div class=\"sb--holder\">\r\n          <h4 class=\"sb--card__title sb__ellipsis  sb__ellipsis--three text-left\" title=\"{{course?.courseName}}\">{{course?.courseName}}</h4>\r\n          <div class=\"sb--card__meta1 text-left\">\r\n            <span class=\"data_1 ellipsis\" title=\"{{course?.content?.orgDetails?.orgName}}\">{{course?.content?.orgDetails?.orgName}}</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"sb--card__progressbar\" *ngIf=\"type === CourseCardTypes.RECENTLY_VIEWED && !hideProgress\">\r\n        <span [ngStyle]=\"fetchProgress()\"></span>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- content for only desktop -->\r\n  <div *ngIf=\"type != CourseCardTypes.RECENTLY_VIEWED\">\r\n    <div class=\"sb--card__meta_c_data\" *ngIf=\"section!=null\" [innerHTML]=\"section\">\r\n    </div>\r\n  </div>\r\n  <div class=\"sb--card__progressbar\" *ngIf=\"type != CourseCardTypes.RECENTLY_VIEWED && !hideProgress\">\r\n      <span [ngStyle]=\"fetchProgress()\"></span>\r\n    </div>\r\n\r\n</div>\r\n<div *ngIf=\"type == CourseCardTypes.RECENTLY_VIEWED\">\r\n  <div class=\"sb--card__meta_c_data_external\" *ngIf=\"section!=null\" [innerHTML]=\"section\">\r\n  </div>\r\n</div>\r\n\r\n  <div class=\"sb--card sb--card--course\" [ngClass]=\"{'sb--card--recently-viewed': type === CourseCardTypes.RECENTLY_VIEWED, 'offline': isOffline}\" *ngIf=\"isLoading\">\r\n      <div class=\"sb--card__main-area\">\r\n          <!-- card img -->\r\n          <div class=\"sb--card__img\">\r\n            <div class=\"img-container loading-animation\">\r\n              \r\n            </div>\r\n          </div>\r\n          <!-- card mobile view details -->\r\n          <div class=\"sb--card__info\">\r\n            <h4 class=\"sb--card__title loading-animation sb--card--highlighter\"></h4>\r\n            <div class=\"sb--card__meta1 text-left\">\r\n              <span class=\"data_1 ellipsis loading-animation sb--card--highlighter\"></span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"sb--card__meta_c_data\" style=\"display:none;\">\r\n            <div class=\"label loading-animation sb--card--highlighter\" style=\"width:80%;\"></div>\r\n        </div>\r\n  </div>\r\n",
                    styles: [":host .sb--card--course .sb--container-box{min-width:0;flex:1;padding-right:.5rem;height:100%;display:flex;justify-content:center;flex-direction:column}html[dir=rtl] :host .sb--card--course .sb--container-box{padding-right:inherit;padding-left:.5rem}:host .sb--card--course .sb--container-box .sb--card__info{padding:0;display:flex;align-items:center}:host .sb--card--course .sb--container-box .sb--holder{flex:1;min-width:0}.sb--card--course.sb--card--recently-viewed .sb--container-box{padding:.5rem!important}.sb--card--course.sb--card--recently-viewed .sb--card__meta_c_data{min-height:1rem!important}.sb--card__meta_c_data_external{min-height:1rem;padding:.1rem;font-size:.8rem}", ".sb--card{border-radius:.125rem}.sb--card--course .sb--card__meta1{color:var(--rc-979797);font-size:.75rem;line-height:1rem}.sb--card--course .sb--card__meta_c_data{min-height:2rem;padding:.5rem;background-color:var(--rc-FAFAFA);font-size:.8rem}.sb--card--course .data_1{max-width:100%!important}", ".loading-animation{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-fill-mode:forwards;animation-fill-mode:forwards;-webkit-animation-iteration-count:infinite;animation-iteration-count:infinite;-webkit-animation-name:placeload;animation-name:placeload;-webkit-animation-timing-function:linear;animation-timing-function:linear;background:var(--lazyload-bg);background:var(--grey-nuance-lighter);background:linear-gradient(to right,var(--grey-nuance-lighter) 8%,var(--grey-nuance-darker) 18%,var(--grey-nuance-lighter) 33%);background-size:75rem 6.5rem;position:relative}@-webkit-keyframes placeload{0%{background-position:-29.25rem 0}100%{background-position:29.25rem 0}}@keyframes placeload{0%{background-position:-29.25rem 0}100%{background-position:29.25rem 0}}.sb--card--highlighter{height:.75rem;width:100%;margin-top:.3125rem}:host .sb--card{width:100%;background-color:var(--white);display:flex;flex-direction:column;cursor:pointer;position:relative;margin-top:0;border:0;contain:content;border-radius:.125rem}:host .sb--card:hover{transform:translate(0,0);box-shadow:0 .125rem .4375rem 0 rgba(var(--rc-rgba-black),.16)}@media (max-width:767px){:host .sb--card{box-shadow:0 .125rem .4375rem rgba(var(--rc-rgba-black),.16)}}:host .sb--card__main-area{display:flex;flex-direction:row;align-items:center;height:5.5rem}:host .sb--card__img{height:4.5rem;width:4.5rem;overflow:hidden;flex:0 0 4.5rem;margin:.5rem}:host .sb--card__img .img-container{display:flex;align-items:center;background-color:var(--gray-100);height:4.5rem;width:4.5rem;justify-content:center}:host .sb--card__img .img-container img{max-width:100%}:host .sb--card__info{flex:1;overflow:hidden}[dir=ltr] :host .sb--card__info{padding-right:.5rem}[dir=rtl] :host .sb--card__info{padding-left:.5rem}:host .sb--card__title{color:var(--primary-color);font-size:.875rem;margin:0;line-height:1.25rem}:host .sb--card__meta1{color:var(--gray-800);font-size:.75rem;display:flex;flex-direction:row;align-items:center;flex:1;line-height:1.25rem;margin-top:.25rem}:host .sb--card .data_1{max-width:50%}:host .sb--card .data_2{flex:1}:host .sb--card .dot-divider{width:.25rem;height:.25rem;min-width:.25rem;max-width:.25rem;min-height:.25rem;max-height:.25rem;border-radius:100%;background-color:var(--gray-200);display:inline-block;margin:0 .5rem}:host .sb--card__moreinfo{border-radius:0 0 .125rem .125rem;background-color:var(--rc-FAFAFA);display:flex;flex-direction:row;align-items:stretch;justify-content:space-between;min-height:3.5rem;border-top:0 solid #cacbce}:host .sb--card__meta2{color:var(--gray-800);font-size:.75rem;line-height:.875rem;display:flex;flex-direction:column;flex-wrap:wrap;justify-content:space-around;padding:.5rem}:host .sb--card__meta2_data .label{font-weight:400}:host .sb--card__meta2_data .value{font-weight:700}:host .sb--card__org{color:var(--gray-200)}:host .sb--card__tags{display:flex;flex-direction:row;align-items:center;justify-content:flex-end;flex:1}:host .sb--card__badge{display:flex}:host .sb--card__badge img{width:1.25rem;height:1.25rem}:host .sb--card__type{background:var(--gray-200);position:relative;height:1.25rem;color:var(--white);font-size:.625rem;display:flex;align-items:center}[dir=ltr] :host .sb--card__type{padding-left:.25rem;padding-right:.5rem;margin-left:1rem}[dir=rtl] :host .sb--card__type{padding-left:.5rem;padding-right:.25rem;margin-right:1rem}:host .sb--card__type:before{content:\"\";width:0;height:0;border-width:.625rem .3125rem;border-style:solid;border-color:var(--gray-200) var(--gray-200) var(--gray-200) transparent;position:absolute;left:-10px}html[dir=rtl] :host .sb--card__type:before{right:-.625rem;left:inherit;border-color:var(--gray-200) transparent var(--gray-200) var(--gray-200)}:host .sb--card--recently-viewed .sb--card__img{height:5.5rem;width:5.5rem;flex:0 0 5.5rem;margin:0}:host .sb--card--recently-viewed .sb--card__img .img-container{display:flex;align-items:center;background-color:var(--gray-100);height:5.5rem;width:5.5rem}:host .sb--card--recently-viewed .sb--card__info{padding:.5rem;flex:1}:host .sb--card.selected{border:1px solid #024f9d;border-radius:4px;background-color:rgba(2,79,157,.2)}:host .sb--card.offline .sb--card__img .img-container{display:flex;align-items:center;background-color:var(--tertiary-color);opacity:.5}:host .sb--card.offline .sb--card__img .img-container img{margin:auto;font-size:1.5rem;color:var(--white)}:host .sb--card.offline .sb--card__info,:host .sb--card.offline .sb--card__moreinfo{opacity:.5}:host .sb--card__progressbar{height:.25rem;margin:0;border-radius:0;box-shadow:inset 0 -.0625rem .0625rem rgba(var(--rc-rgba-white),.3);width:100%;background:var(--gray-100)}:host .sb--card__progressbar>span{display:block;height:100%;background-color:var(--secondary-200);background-image:-webkit-gradient(center bottom,var(--secondary-400),var(--secondary-200));box-shadow:inset 0 .125rem .5625rem var(--gray-100),inset 0 -.125rem .375rem rgba(var(--rc-rgba-black),.4);position:relative;overflow:hidden}:host .animate>span:after{content:\"\";position:absolute;top:0;left:0;bottom:0;right:0;background-image:-webkit-gradient(linear,0 0,100% 100%,color-stop(.25,rgba(var(--rc-rgba-white),.2)),color-stop(.25,transparent),color-stop(.5,transparent),color-stop(.5,rgba(var(--rc-rgba-white),.2)),color-stop(.75,rgba(var(--rc-rgba-white),.2)),color-stop(.75,transparent),to(transparent));z-index:1;background-size:3.125rem 3.125rem;overflow:hidden;-webkit-animation:2s linear infinite move;border-radius:1.25rem .5rem .5rem 1.25rem}@-webkit-keyframes move{0%{background-position:0 0}100%{background-position:3.125rem 3.125rem}}:host .completed>span{background-color:var(--secondary-color);background-image:-webkit-linear-gradient(var(--secondary-100),var(--secondary-400))}:host .inprogress>span{background-color:var(--tertiary-color);background-image:-webkit-linear-gradient(var(--tertiary-100),var(--tertiary-400))}:host .notcompleted>span{background-color:var(--red-100);background-image:-webkit-linear-gradient(var(--red-100),var(--red-400))}:host .nostripes>span,:host .nostripes>span:after{-webkit-animation:none;-moz-animation:none;background-image:none}:host .border-top-r-left-right{border-top-left-radius:0;border-top-right-radius:0}::ng-deep .card-hover{display:none;transition:.2s ease-in}::ng-deep .sb--card:hover .card-hover{display:block;z-index:1001}::ng-deep .sb--card:hover .card-hover .child-content{color:var(--white);position:absolute;left:0;right:0;top:0;bottom:0;opacity:.95;border-radius:.125rem;background-color:var(--primary-color);z-index:1;display:flex;align-items:center;transition:.2s ease-in;flex-direction:column;justify-content:space-evenly}::ng-deep .sb--card:hover .card-hover .action-container{display:flex;width:100%;justify-content:center;align-self:center;justify-self:center;flex:1;align-items:center}::ng-deep .sb--card:hover .card-hover .action-item{padding:0 1rem;flex:1;text-align:center}::ng-deep .sb--card:hover .card-hover .action-item .sb-btn.sb-btn-primary[disabled]{background-color:transparent;opacity:.5;border:0;color:var(--white)}::ng-deep .sb--card:hover .card-hover .action-item:not(:last-child){border-right:.0625rem solid rgba(var(--rc-rgba-white),.5)}::ng-deep .sb--card:hover .card-hover .hover-meta-info{font-size:.625rem;opacity:.8;color:var(--white);line-height:.75rem;flex:0 0 25%}.menu::after{content:'\\2807';font-size:1.5rem;color:var(--gray-200);text-align:center;align-items:center;display:flex;justify-content:center;border-radius:50%;padding-left:.375rem;cursor:pointer;width:2rem;height:2rem}.menu:hover::after{background:var(--gray-0)}"]
                }] }
    ];
    /** @nocollapse */
    MyCourseCardComponent.ctorParameters = function () { return []; };
    MyCourseCardComponent.propDecorators = {
        course: [{ type: Input }],
        isMobile: [{ type: Input }],
        isOffline: [{ type: Input }],
        cardImg: [{ type: Input }],
        section: [{ type: Input }],
        isLoading: [{ type: Input }],
        type: [{ type: Input }],
        hideProgress: [{ type: Input }],
        cardClick: [{ type: Output }]
    };
    return MyCourseCardComponent;
}());

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var CourseCuriculumCardComponent = /** @class */ (function () {
    function CourseCuriculumCardComponent() {
        this.isActivityTypeCard = false;
        this.cardClick = new EventEmitter();
        this.palatteList = [
            { bgColor: "#FFDFC7", fontColor: "#AD632D" },
            { bgColor: "#C2ECE6", fontColor: "#149D88" },
            { bgColor: "#FFE59B", fontColor: "#8D6A00" },
            { bgColor: "#DAD4FF", fontColor: "#635CDC" },
            { bgColor: "#80cbc4", fontColor: "#00695c" },
            { bgColor: "#e6ee9c", fontColor: "#9e9d24" },
            { bgColor: "#ffe082", fontColor: "#ff8f00" }
        ];
    }
    /**
     * @return {?}
     */
    CourseCuriculumCardComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        this.title = this.cardData != null && this.cardData.title != null ? this.cardData.title : "Mathematics";
        this.subTitle = this.cardData != null && this.cardData.count != null ? this.cardData.count : "";
        this.theme = this.cardData != null && this.cardData.theme != null ? this.cardData.theme : this.fetchBgColor();
        this.titleColor = this.cardData != null && this.cardData.titleColor != null ? this.cardData.titleColor : this.fetchColor();
        this.cardImg = this.cardData != null && this.cardData.cardImg != null ? this.cardData.cardImg : "";
        if (this.cardData != null && typeof (this.cardData) == "object") {
            this.cardData.titleColor = this.titleColor;
            this.cardData.theme = this.theme;
        }
    };
    /**
     * @return {?}
     */
    CourseCuriculumCardComponent.prototype.fetchColor = /**
     * @return {?}
     */
    function () {
        /** @type {?} */
        var palatteIndex = this.index != null ? this.index % 7 : 0;
        return this.palatteList[palatteIndex].fontColor;
    };
    /**
     * @return {?}
     */
    CourseCuriculumCardComponent.prototype.fetchBgColor = /**
     * @return {?}
     */
    function () {
        /** @type {?} */
        var palatteIndex = this.index != null ? this.index % 7 : 0;
        return this.palatteList[palatteIndex].bgColor;
    };
    /**
     * @param {?} event
     * @return {?}
     */
    CourseCuriculumCardComponent.prototype.onClick = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        this.cardClick.emit({ event: event, data: this.cardData });
    };
    /**
     * @return {?}
     */
    CourseCuriculumCardComponent.prototype.fetchStyles = /**
     * @return {?}
     */
    function () {
        return {
            background: this.theme != null ? this.theme : "#EA5B5D"
        };
    };
    /**
     * @return {?}
     */
    CourseCuriculumCardComponent.prototype.fetchTextStyles = /**
     * @return {?}
     */
    function () {
        return {
            color: this.titleColor != null ? this.titleColor : "#000"
        };
    };
    CourseCuriculumCardComponent.decorators = [
        { type: Component, args: [{
                    selector: 'sb-course-curiculum-card',
                    template: "<!-- card component -->\r\n<div class=\"sb--card sb--card--course--curiculum\" [ngStyle]=\"fetchStyles()\" (click)=\"onClick($event)\" *ngIf=\"!isLoading\">\r\n  <div class=\"sb--card__main-area\" *ngIf=\"isActivityTypeCard\">\r\n      <div class=\"sb--card__info pl-8\">\r\n        <h4 class=\"sb--card__title sb__ellipsis sb__ellipsis--three text-center font-weight-bold\" [ngStyle]=\"fetchTextStyles()\" title=\"{{title}}\">{{title}}</h4>\r\n      </div>\r\n  </div>\r\n\r\n  <div class=\"sb--card__main-area\" *ngIf=\"!isActivityTypeCard\">\r\n      <div class=\"sb--card__info pl-8\">\r\n        <h4 class=\"sb--card__title sb__ellipsis sb__ellipsis--three text-left\" [ngStyle]=\"fetchTextStyles()\" title=\"{{title}}\">{{title}}</h4>\r\n        <div class=\"sb--card__meta1 text-left\">\r\n          <span class=\"data_1 ellipsis\" title=\"{{subTitle}}\">{{subTitle}}</span>\r\n        </div>\r\n      </div>\r\n      <!-- card img -->\r\n      <div class=\"sb--card__img\">\r\n        <div class=\"img-container\">\r\n          <img [src]=\"cardImg\" alt=\"\">\r\n        </div>\r\n      </div>\r\n  </div>\r\n</div>\r\n\r\n  <div class=\"sb--card sb--card--course--curiculum\" [ngStyle]=\"fetchStyles()\" *ngIf=\"isLoading\">\r\n      <div class=\"sb--card__main-area\">\r\n          <!-- card mobile view details -->\r\n          <div class=\"sb--card__info\">\r\n            <h4 class=\"sb--card__title loading-animation sb--card--highlighter\"></h4>\r\n            <div class=\"sb--card__meta1 text-left\">\r\n              <span class=\"data_1 ellipsis loading-animation sb--card--highlighter\"></span>\r\n            </div>\r\n          </div>\r\n          <!-- card img -->\r\n          <div class=\"sb--card__img\">\r\n            <div class=\"img-container loading-animation\">\r\n              \r\n            </div>\r\n          </div>\r\n        </div>\r\n  </div>\r\n",
                    styles: [".sb--card--course--curiculum .sb--card__title{color:var(--white)}.sb--card--course--curiculum .img-container{background-color:transparent!important;height:2rem!important;width:2rem!important}.sb--card{margin-bottom:.5rem!important;border-radius:.25rem!important}.sb--card .sb--card__img{height:2rem;width:2rem;flex:0 0 2rem;margin:3rem 0 0}", ".loading-animation{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-fill-mode:forwards;animation-fill-mode:forwards;-webkit-animation-iteration-count:infinite;animation-iteration-count:infinite;-webkit-animation-name:placeload;animation-name:placeload;-webkit-animation-timing-function:linear;animation-timing-function:linear;background:var(--lazyload-bg);background:var(--grey-nuance-lighter);background:linear-gradient(to right,var(--grey-nuance-lighter) 8%,var(--grey-nuance-darker) 18%,var(--grey-nuance-lighter) 33%);background-size:75rem 6.5rem;position:relative}@-webkit-keyframes placeload{0%{background-position:-29.25rem 0}100%{background-position:29.25rem 0}}@keyframes placeload{0%{background-position:-29.25rem 0}100%{background-position:29.25rem 0}}.sb--card--highlighter{height:.75rem;width:100%;margin-top:.3125rem}:host .sb--card{width:100%;background-color:var(--white);display:flex;flex-direction:column;cursor:pointer;position:relative;margin-top:0;border:0;contain:content;border-radius:.125rem}:host .sb--card:hover{transform:translate(0,0);box-shadow:0 .125rem .4375rem 0 rgba(var(--rc-rgba-black),.16)}@media (max-width:767px){:host .sb--card{box-shadow:0 .125rem .4375rem rgba(var(--rc-rgba-black),.16)}}:host .sb--card__main-area{display:flex;flex-direction:row;align-items:center;height:5.5rem}:host .sb--card__img{height:4.5rem;width:4.5rem;overflow:hidden;flex:0 0 4.5rem;margin:.5rem}:host .sb--card__img .img-container{display:flex;align-items:center;background-color:var(--gray-100);height:4.5rem;width:4.5rem;justify-content:center}:host .sb--card__img .img-container img{max-width:100%}:host .sb--card__info{flex:1;overflow:hidden}[dir=ltr] :host .sb--card__info{padding-right:.5rem}[dir=rtl] :host .sb--card__info{padding-left:.5rem}:host .sb--card__title{color:var(--primary-color);font-size:.875rem;margin:0;line-height:1.25rem}:host .sb--card__meta1{color:var(--gray-800);font-size:.75rem;display:flex;flex-direction:row;align-items:center;flex:1;line-height:1.25rem;margin-top:.25rem}:host .sb--card .data_1{max-width:50%}:host .sb--card .data_2{flex:1}:host .sb--card .dot-divider{width:.25rem;height:.25rem;min-width:.25rem;max-width:.25rem;min-height:.25rem;max-height:.25rem;border-radius:100%;background-color:var(--gray-200);display:inline-block;margin:0 .5rem}:host .sb--card__moreinfo{border-radius:0 0 .125rem .125rem;background-color:var(--rc-FAFAFA);display:flex;flex-direction:row;align-items:stretch;justify-content:space-between;min-height:3.5rem;border-top:0 solid #cacbce}:host .sb--card__meta2{color:var(--gray-800);font-size:.75rem;line-height:.875rem;display:flex;flex-direction:column;flex-wrap:wrap;justify-content:space-around;padding:.5rem}:host .sb--card__meta2_data .label{font-weight:400}:host .sb--card__meta2_data .value{font-weight:700}:host .sb--card__org{color:var(--gray-200)}:host .sb--card__tags{display:flex;flex-direction:row;align-items:center;justify-content:flex-end;flex:1}:host .sb--card__badge{display:flex}:host .sb--card__badge img{width:1.25rem;height:1.25rem}:host .sb--card__type{background:var(--gray-200);position:relative;height:1.25rem;color:var(--white);font-size:.625rem;display:flex;align-items:center}[dir=ltr] :host .sb--card__type{padding-left:.25rem;padding-right:.5rem;margin-left:1rem}[dir=rtl] :host .sb--card__type{padding-left:.5rem;padding-right:.25rem;margin-right:1rem}:host .sb--card__type:before{content:\"\";width:0;height:0;border-width:.625rem .3125rem;border-style:solid;border-color:var(--gray-200) var(--gray-200) var(--gray-200) transparent;position:absolute;left:-10px}html[dir=rtl] :host .sb--card__type:before{right:-.625rem;left:inherit;border-color:var(--gray-200) transparent var(--gray-200) var(--gray-200)}:host .sb--card--recently-viewed .sb--card__img{height:5.5rem;width:5.5rem;flex:0 0 5.5rem;margin:0}:host .sb--card--recently-viewed .sb--card__img .img-container{display:flex;align-items:center;background-color:var(--gray-100);height:5.5rem;width:5.5rem}:host .sb--card--recently-viewed .sb--card__info{padding:.5rem;flex:1}:host .sb--card.selected{border:1px solid #024f9d;border-radius:4px;background-color:rgba(2,79,157,.2)}:host .sb--card.offline .sb--card__img .img-container{display:flex;align-items:center;background-color:var(--tertiary-color);opacity:.5}:host .sb--card.offline .sb--card__img .img-container img{margin:auto;font-size:1.5rem;color:var(--white)}:host .sb--card.offline .sb--card__info,:host .sb--card.offline .sb--card__moreinfo{opacity:.5}:host .sb--card__progressbar{height:.25rem;margin:0;border-radius:0;box-shadow:inset 0 -.0625rem .0625rem rgba(var(--rc-rgba-white),.3);width:100%;background:var(--gray-100)}:host .sb--card__progressbar>span{display:block;height:100%;background-color:var(--secondary-200);background-image:-webkit-gradient(center bottom,var(--secondary-400),var(--secondary-200));box-shadow:inset 0 .125rem .5625rem var(--gray-100),inset 0 -.125rem .375rem rgba(var(--rc-rgba-black),.4);position:relative;overflow:hidden}:host .animate>span:after{content:\"\";position:absolute;top:0;left:0;bottom:0;right:0;background-image:-webkit-gradient(linear,0 0,100% 100%,color-stop(.25,rgba(var(--rc-rgba-white),.2)),color-stop(.25,transparent),color-stop(.5,transparent),color-stop(.5,rgba(var(--rc-rgba-white),.2)),color-stop(.75,rgba(var(--rc-rgba-white),.2)),color-stop(.75,transparent),to(transparent));z-index:1;background-size:3.125rem 3.125rem;overflow:hidden;-webkit-animation:2s linear infinite move;border-radius:1.25rem .5rem .5rem 1.25rem}@-webkit-keyframes move{0%{background-position:0 0}100%{background-position:3.125rem 3.125rem}}:host .completed>span{background-color:var(--secondary-color);background-image:-webkit-linear-gradient(var(--secondary-100),var(--secondary-400))}:host .inprogress>span{background-color:var(--tertiary-color);background-image:-webkit-linear-gradient(var(--tertiary-100),var(--tertiary-400))}:host .notcompleted>span{background-color:var(--red-100);background-image:-webkit-linear-gradient(var(--red-100),var(--red-400))}:host .nostripes>span,:host .nostripes>span:after{-webkit-animation:none;-moz-animation:none;background-image:none}:host .border-top-r-left-right{border-top-left-radius:0;border-top-right-radius:0}::ng-deep .card-hover{display:none;transition:.2s ease-in}::ng-deep .sb--card:hover .card-hover{display:block;z-index:1001}::ng-deep .sb--card:hover .card-hover .child-content{color:var(--white);position:absolute;left:0;right:0;top:0;bottom:0;opacity:.95;border-radius:.125rem;background-color:var(--primary-color);z-index:1;display:flex;align-items:center;transition:.2s ease-in;flex-direction:column;justify-content:space-evenly}::ng-deep .sb--card:hover .card-hover .action-container{display:flex;width:100%;justify-content:center;align-self:center;justify-self:center;flex:1;align-items:center}::ng-deep .sb--card:hover .card-hover .action-item{padding:0 1rem;flex:1;text-align:center}::ng-deep .sb--card:hover .card-hover .action-item .sb-btn.sb-btn-primary[disabled]{background-color:transparent;opacity:.5;border:0;color:var(--white)}::ng-deep .sb--card:hover .card-hover .action-item:not(:last-child){border-right:.0625rem solid rgba(var(--rc-rgba-white),.5)}::ng-deep .sb--card:hover .card-hover .hover-meta-info{font-size:.625rem;opacity:.8;color:var(--white);line-height:.75rem;flex:0 0 25%}.menu::after{content:'\\2807';font-size:1.5rem;color:var(--gray-200);text-align:center;align-items:center;display:flex;justify-content:center;border-radius:50%;padding-left:.375rem;cursor:pointer;width:2rem;height:2rem}.menu:hover::after{background:var(--gray-0)}"]
                }] }
    ];
    /** @nocollapse */
    CourseCuriculumCardComponent.ctorParameters = function () { return []; };
    CourseCuriculumCardComponent.propDecorators = {
        cardData: [{ type: Input }],
        cardImg: [{ type: Input }],
        title: [{ type: Input }],
        subTitle: [{ type: Input }],
        isLoading: [{ type: Input }],
        theme: [{ type: Input }],
        titleColor: [{ type: Input }],
        index: [{ type: Input }],
        isActivityTypeCard: [{ type: Input }],
        cardClick: [{ type: Output }]
    };
    return CourseCuriculumCardComponent;
}());

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/** @type {?} */
var groupData = {
    "id": "do_1130152710033489921159",
    "name": "Class 5B",
    "description": "Class 5B - CBSE - English - Math",
    "objectType": "Class",
    "status": "Live",
    "versionKey": "1588778384610",
    "channel": "b00bc992ef25f1a9a8d63291e20efc8d",
    "framework": "tpd",
    "board": "CBSE",
    "subject": [
        "Math"
    ],
    "gradeLevel": [
        "Grade 5"
    ],
    "medium": [
        "English"
    ],
    "createdOn": "2020-05-06T15:16:38.655+0000",
    "lastUpdatedOn": "2020-05-06T15:19:44.610+0000",
    "createdBy": "8454cb21-3ce9-4e30-85b5-fade097880d8"
};

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var GroupCardComponent = /** @class */ (function () {
    function GroupCardComponent() {
        this.group = groupData;
        this.isSuspended = false;
        this.suspendBadgeText = 'Suspended';
        this.cardClick = new EventEmitter();
    }
    /**
     * @return {?}
     */
    GroupCardComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        this.initial = this.group.initial != null ? this.group.initial : "";
        this.cardBgColor = this.group.cardBgColor != null ? this.group.cardBgColor : "#b3ebd7";
        this.cardTitleColor = this.group.cardTitleColor != null ? this.group.cardTitleColor : "green";
    };
    /**
     * @param {?} event
     * @return {?}
     */
    GroupCardComponent.prototype.onClick = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        this.cardClick.emit({ event: event, data: this.group });
    };
    /**
     * @return {?}
     */
    GroupCardComponent.prototype.fetchStyle = /**
     * @return {?}
     */
    function () {
        return {
            "background-color": this.cardBgColor != null ? this.cardBgColor : "#b3ebd7"
        };
    };
    /**
     * @return {?}
     */
    GroupCardComponent.prototype.fetchInitialStyle = /**
     * @return {?}
     */
    function () {
        return {
            "color": this.cardTitleColor != null ? this.cardTitleColor : "green"
        };
    };
    GroupCardComponent.decorators = [
        { type: Component, args: [{
                    selector: 'sb-group-card',
                    template: "<!-- card component -->\r\n<div class=\"sb--card sb--card--course--curiculum\" (click)=\"onClick($event)\" *ngIf=\"!isLoading\">\r\n  <div class=\"sb--card__main-area\">\r\n    <!-- card img -->\r\n    <div class=\"sb--card__img\">\r\n      <div class=\"img-container img-container--label\" [ngStyle]=\"fetchStyle()\">\r\n        <label [ngStyle]=\"fetchInitialStyle()\">{{initial}}</label>\r\n        <div class=\"img-container--badge\" *ngIf=\"isSuspended\">{{suspendBadgeText}}</div>\r\n      </div>\r\n    </div>\r\n    <!-- card mobile view details -->\r\n    <div class=\"sb--card__info\">\r\n      <div class=\"d-flex flex-dr flex-jc-space-between\">\r\n        <h4 class=\"sb--card__title sb__ellipsis sb__ellipsis--three text-left\" title=\"{{group?.name}}\">{{group?.name}}</h4>\r\n        <div *ngIf=\"isAdmin\" class=\"sb-label-badge\">Admin</div>\r\n      </div>\r\n      <div *ngIf=\"isMobile\">\r\n        <div class=\"sb--card__meta2 text-left p-0 pt-4\">\r\n          <div class=\"sb--card__meta2_data sb__ellipsis sb__ellipsis--two\" title=\"{{group?.description}}\">{{group?.description}}</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"sb--card__moreinfo\" *ngIf=\"!isMobile\">\r\n    <div class=\"sb--card__meta2 text-left\">\r\n      <div class=\"sb--card__meta2_data sb__ellipsis sb__ellipsis--two\" title=\"{{group?.description}}\">{{group?.description}}</div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"sb--card sb--card--course--curiculum\" *ngIf=\"isLoading\">\r\n  <div class=\"sb--card__main-area\">\r\n    <!-- card img -->\r\n    <div class=\"sb--card__img\">\r\n      <div class=\"img-container img-container--label\">\r\n        <label class=\"loading-animation\"></label>\r\n      </div>\r\n    </div>\r\n    <!-- card mobile view details -->\r\n    <div class=\"sb--card__info\">\r\n      <div class=\"d-flex flex-dr flex-jc-space-between\">\r\n        <h4 class=\"sb--card__title loading-animation sb--card--highlighter\"></h4>\r\n        <div *ngIf=\"isAdmin\" class=\"sb-label-badge loading-animation sb--card--highlighter\"></div>\r\n      </div>\r\n      <div *ngIf=\"isMobile\">\r\n        <div class=\"sb--card__meta2 text-left p-0 pt-4\">\r\n          <div class=\"sb--card__meta2_data loading-animation sb--card--highlighter\"></div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"sb--card__moreinfo\" *ngIf=\"!isMobile\">\r\n    <div class=\"sb--card__meta2 text-left\">\r\n      <div class=\"sb--card__meta2_data loading-animation sb--card--highlighter\"></div>\r\n    </div>\r\n  </div>\r\n</div>",
                    styles: [".loading-animation{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-fill-mode:forwards;animation-fill-mode:forwards;-webkit-animation-iteration-count:infinite;animation-iteration-count:infinite;-webkit-animation-name:placeload;animation-name:placeload;-webkit-animation-timing-function:linear;animation-timing-function:linear;background:var(--lazyload-bg);background:var(--grey-nuance-lighter);background:linear-gradient(to right,var(--grey-nuance-lighter) 8%,var(--grey-nuance-darker) 18%,var(--grey-nuance-lighter) 33%);background-size:75rem 6.5rem;position:relative}@-webkit-keyframes placeload{0%{background-position:-29.25rem 0}100%{background-position:29.25rem 0}}@keyframes placeload{0%{background-position:-29.25rem 0}100%{background-position:29.25rem 0}}.sb--card--highlighter{height:.75rem;width:100%;margin-top:.3125rem}.sb--card__img .img-container--label{display:flex;justify-content:center;align-items:center;text-transform:capitalize;background-color:#b3ebd7;color:#284c3f;position:relative}.sb--card__img .img-container--label label{margin-bottom:0;padding-bottom:0;font-size:1.3125rem;font-weight:700}.sb--card__img .img-container--label .img-container--badge{position:absolute;bottom:0;width:100%;background-color:var(--black);color:var(--white);font-size:.75rem;text-align:center;margin-bottom:.5rem;line-height:normal;opacity:.6}.sb-label-badge{font-size:.625rem;border:1px solid var(--secondary-color);-ms-grid-row-align:center;align-self:center;padding:.25rem .5rem;border-radius:.125rem;color:var(--secondary-color);text-align:center}[dir=ltr] .sb-label-badge,[dir=rtl] .sb-label-badge{margin-left:.5rem;margin-right:.5rem}", ".loading-animation{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-fill-mode:forwards;animation-fill-mode:forwards;-webkit-animation-iteration-count:infinite;animation-iteration-count:infinite;-webkit-animation-name:placeload;animation-name:placeload;-webkit-animation-timing-function:linear;animation-timing-function:linear;background:var(--lazyload-bg);background:var(--grey-nuance-lighter);background:linear-gradient(to right,var(--grey-nuance-lighter) 8%,var(--grey-nuance-darker) 18%,var(--grey-nuance-lighter) 33%);background-size:75rem 6.5rem;position:relative}@-webkit-keyframes placeload{0%{background-position:-29.25rem 0}100%{background-position:29.25rem 0}}@keyframes placeload{0%{background-position:-29.25rem 0}100%{background-position:29.25rem 0}}.sb--card--highlighter{height:.75rem;width:100%;margin-top:.3125rem}:host .sb--card{width:100%;background-color:var(--white);display:flex;flex-direction:column;cursor:pointer;position:relative;margin-top:0;border:0;contain:content;border-radius:.125rem}:host .sb--card:hover{transform:translate(0,0);box-shadow:0 .125rem .4375rem 0 rgba(var(--rc-rgba-black),.16)}@media (max-width:767px){:host .sb--card{box-shadow:0 .125rem .4375rem rgba(var(--rc-rgba-black),.16)}}:host .sb--card__main-area{display:flex;flex-direction:row;align-items:center;height:5.5rem}:host .sb--card__img{height:4.5rem;width:4.5rem;overflow:hidden;flex:0 0 4.5rem;margin:.5rem}:host .sb--card__img .img-container{display:flex;align-items:center;background-color:var(--gray-100);height:4.5rem;width:4.5rem;justify-content:center}:host .sb--card__img .img-container img{max-width:100%}:host .sb--card__info{flex:1;overflow:hidden}[dir=ltr] :host .sb--card__info{padding-right:.5rem}[dir=rtl] :host .sb--card__info{padding-left:.5rem}:host .sb--card__title{color:var(--primary-color);font-size:.875rem;margin:0;line-height:1.25rem}:host .sb--card__meta1{color:var(--gray-800);font-size:.75rem;display:flex;flex-direction:row;align-items:center;flex:1;line-height:1.25rem;margin-top:.25rem}:host .sb--card .data_1{max-width:50%}:host .sb--card .data_2{flex:1}:host .sb--card .dot-divider{width:.25rem;height:.25rem;min-width:.25rem;max-width:.25rem;min-height:.25rem;max-height:.25rem;border-radius:100%;background-color:var(--gray-200);display:inline-block;margin:0 .5rem}:host .sb--card__moreinfo{border-radius:0 0 .125rem .125rem;background-color:var(--rc-FAFAFA);display:flex;flex-direction:row;align-items:stretch;justify-content:space-between;min-height:3.5rem;border-top:0 solid #cacbce}:host .sb--card__meta2{color:var(--gray-800);font-size:.75rem;line-height:.875rem;display:flex;flex-direction:column;flex-wrap:wrap;justify-content:space-around;padding:.5rem}:host .sb--card__meta2_data .label{font-weight:400}:host .sb--card__meta2_data .value{font-weight:700}:host .sb--card__org{color:var(--gray-200)}:host .sb--card__tags{display:flex;flex-direction:row;align-items:center;justify-content:flex-end;flex:1}:host .sb--card__badge{display:flex}:host .sb--card__badge img{width:1.25rem;height:1.25rem}:host .sb--card__type{background:var(--gray-200);position:relative;height:1.25rem;color:var(--white);font-size:.625rem;display:flex;align-items:center}[dir=ltr] :host .sb--card__type{padding-left:.25rem;padding-right:.5rem;margin-left:1rem}[dir=rtl] :host .sb--card__type{padding-left:.5rem;padding-right:.25rem;margin-right:1rem}:host .sb--card__type:before{content:\"\";width:0;height:0;border-width:.625rem .3125rem;border-style:solid;border-color:var(--gray-200) var(--gray-200) var(--gray-200) transparent;position:absolute;left:-10px}html[dir=rtl] :host .sb--card__type:before{right:-.625rem;left:inherit;border-color:var(--gray-200) transparent var(--gray-200) var(--gray-200)}:host .sb--card--recently-viewed .sb--card__img{height:5.5rem;width:5.5rem;flex:0 0 5.5rem;margin:0}:host .sb--card--recently-viewed .sb--card__img .img-container{display:flex;align-items:center;background-color:var(--gray-100);height:5.5rem;width:5.5rem}:host .sb--card--recently-viewed .sb--card__info{padding:.5rem;flex:1}:host .sb--card.selected{border:1px solid #024f9d;border-radius:4px;background-color:rgba(2,79,157,.2)}:host .sb--card.offline .sb--card__img .img-container{display:flex;align-items:center;background-color:var(--tertiary-color);opacity:.5}:host .sb--card.offline .sb--card__img .img-container img{margin:auto;font-size:1.5rem;color:var(--white)}:host .sb--card.offline .sb--card__info,:host .sb--card.offline .sb--card__moreinfo{opacity:.5}:host .sb--card__progressbar{height:.25rem;margin:0;border-radius:0;box-shadow:inset 0 -.0625rem .0625rem rgba(var(--rc-rgba-white),.3);width:100%;background:var(--gray-100)}:host .sb--card__progressbar>span{display:block;height:100%;background-color:var(--secondary-200);background-image:-webkit-gradient(center bottom,var(--secondary-400),var(--secondary-200));box-shadow:inset 0 .125rem .5625rem var(--gray-100),inset 0 -.125rem .375rem rgba(var(--rc-rgba-black),.4);position:relative;overflow:hidden}:host .animate>span:after{content:\"\";position:absolute;top:0;left:0;bottom:0;right:0;background-image:-webkit-gradient(linear,0 0,100% 100%,color-stop(.25,rgba(var(--rc-rgba-white),.2)),color-stop(.25,transparent),color-stop(.5,transparent),color-stop(.5,rgba(var(--rc-rgba-white),.2)),color-stop(.75,rgba(var(--rc-rgba-white),.2)),color-stop(.75,transparent),to(transparent));z-index:1;background-size:3.125rem 3.125rem;overflow:hidden;-webkit-animation:2s linear infinite move;border-radius:1.25rem .5rem .5rem 1.25rem}@-webkit-keyframes move{0%{background-position:0 0}100%{background-position:3.125rem 3.125rem}}:host .completed>span{background-color:var(--secondary-color);background-image:-webkit-linear-gradient(var(--secondary-100),var(--secondary-400))}:host .inprogress>span{background-color:var(--tertiary-color);background-image:-webkit-linear-gradient(var(--tertiary-100),var(--tertiary-400))}:host .notcompleted>span{background-color:var(--red-100);background-image:-webkit-linear-gradient(var(--red-100),var(--red-400))}:host .nostripes>span,:host .nostripes>span:after{-webkit-animation:none;-moz-animation:none;background-image:none}:host .border-top-r-left-right{border-top-left-radius:0;border-top-right-radius:0}::ng-deep .card-hover{display:none;transition:.2s ease-in}::ng-deep .sb--card:hover .card-hover{display:block;z-index:1001}::ng-deep .sb--card:hover .card-hover .child-content{color:var(--white);position:absolute;left:0;right:0;top:0;bottom:0;opacity:.95;border-radius:.125rem;background-color:var(--primary-color);z-index:1;display:flex;align-items:center;transition:.2s ease-in;flex-direction:column;justify-content:space-evenly}::ng-deep .sb--card:hover .card-hover .action-container{display:flex;width:100%;justify-content:center;align-self:center;justify-self:center;flex:1;align-items:center}::ng-deep .sb--card:hover .card-hover .action-item{padding:0 1rem;flex:1;text-align:center}::ng-deep .sb--card:hover .card-hover .action-item .sb-btn.sb-btn-primary[disabled]{background-color:transparent;opacity:.5;border:0;color:var(--white)}::ng-deep .sb--card:hover .card-hover .action-item:not(:last-child){border-right:.0625rem solid rgba(var(--rc-rgba-white),.5)}::ng-deep .sb--card:hover .card-hover .hover-meta-info{font-size:.625rem;opacity:.8;color:var(--white);line-height:.75rem;flex:0 0 25%}.menu::after{content:'\\2807';font-size:1.5rem;color:var(--gray-200);text-align:center;align-items:center;display:flex;justify-content:center;border-radius:50%;padding-left:.375rem;cursor:pointer;width:2rem;height:2rem}.menu:hover::after{background:var(--gray-0)}"]
                }] }
    ];
    /** @nocollapse */
    GroupCardComponent.ctorParameters = function () { return []; };
    GroupCardComponent.propDecorators = {
        group: [{ type: Input }],
        cardBgColor: [{ type: Input }],
        cardTitleColor: [{ type: Input }],
        title: [{ type: Input }],
        description: [{ type: Input }],
        isLoading: [{ type: Input }],
        theme: [{ type: Input }],
        isMobile: [{ type: Input }],
        isAdmin: [{ type: Input }],
        initial: [{ type: Input }],
        isSuspended: [{ type: Input }],
        suspendBadgeText: [{ type: Input }],
        cardClick: [{ type: Output }]
    };
    return GroupCardComponent;
}());

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var MemberCardComponent = /** @class */ (function () {
    function MemberCardComponent() {
        this.paletteList = ["#FE0030", "#7B1FA2", "#0097A7", "#7B1FA2", "#F57C00", "#1976D2", "#CDDC39", "#FE0030", "#F57C00", "#388E3C"];
        this.title = "Dummy";
        this.isAdmin = false;
        this.isMenu = false;
        this.indexOfMember = 0;
        this.initial = "D";
        this.cardImg = "";
        this.identifier = "1";
        this.selected = false;
        this.config = { size: 'medium', isBold: false, isSelectable: true, view: "vertical", progressSize: "sm" };
        this.menuClick = new EventEmitter();
        this.cardClick = new EventEmitter();
    }
    /**
     * @return {?}
     */
    MemberCardComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        if (this.config.view == "vertical") {
            this.config.isSelectable = false;
        }
        if (this.initial != null) ;
        else {
            this.initial = "D";
        }
        if (this.title != null) ;
        else {
            this.title = "Dummy";
        }
    };
    /**
     * @return {?}
     */
    MemberCardComponent.prototype.fetchStyle = /**
     * @return {?}
     */
    function () {
        if (this.indexOfMember > 10) {
            this.indexOfMember = this.indexOfMember % 10;
        }
        return {
            'border-color': this.paletteList[this.indexOfMember],
            'color': this.paletteList[this.indexOfMember]
        };
    };
    /**
     * @param {?} event
     * @return {?}
     */
    MemberCardComponent.prototype.onClick = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        this.selected = !this.selected;
        this.cardClick.emit({ event: event, data: { title: this.title, identifier: this.identifier } });
    };
    /**
     * @param {?} event
     * @return {?}
     */
    MemberCardComponent.prototype.onMenuClick = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        this.menuClick.emit({ event: event, data: { identifier: this.identifier } });
    };
    MemberCardComponent.decorators = [
        { type: Component, args: [{
                    selector: 'sb-member-card',
                    template: "<div class=\"sb-members-list-item sb-members-list-item--{{config.size}} sb-members-list-item--{{config.view}}\"\r\n[ngClass]=\"{'sb-members-list-item--bold': config.isBold, 'selectElement': config.isSelectable && selected}\" \r\n*ngIf=\"!isLoading\" (click)=\"onClick($event)\">\r\n    <div class=\"sb-member text-left\">\r\n        <div class=\"sb-member__img\" [ngStyle]=\"fetchStyle()\"><span>{{initial}}</span></div>\r\n        <label class=\"sb-member__name sb__ellipsis sb__ellipsis--two ml-8\" title=\"{{title}}\"><span>{{title}}&lrm;</span></label>   \r\n    </div>\r\n    <div class=\"d-flex flex-ai-center pr-8\" *ngIf=\"config.view == 'horizontal'\">\r\n      <div *ngIf=\"isAdmin || isMenu\" class=\"d-flex flex-ai-center\">\r\n        <div [style.visibility]=\"isAdmin ? 'visible' : 'hidden'\" class=\"status\" (click)=\"onClick($event);$event.stopPropagation();\">Admin</div>\r\n        <div [style.visibility]=\"isMenu ? 'visible' : 'hidden'\" class=\"menu ml-8\" (click)=\"onMenuClick($event);$event.stopPropagation();\"></div>\r\n      </div>\r\n    <div *ngIf=\"!isMenu && cardImg!=null\" (click)=\"onMenuClick($event);$event.stopPropagation();\"><img [src]=\"cardImg\" alt=\"\"></div>\r\n    <div *ngIf=\"config.isSelectable && selected\" class=\"selected ml-8\"><img class=\"icon_select\" alt=\"\" src=\"assets/common-consumption/images/selected.svg\" /></div>\r\n    <div *ngIf=\"progressDisplay && progressDisplay !== '100'\" class=\"ml-8 progress-circle progress-circle--{{config?.progressSize}}\" [attr.data-percentage]=\"progressDisplay\">\r\n        <svg class=\"progress-circle__svg\" viewport=\"0 0 2000 2000\">\r\n          <circle class=\"progress-circle__stroke\" r=\"50%\" cx=\"50%\" cy=\"50%\"></circle>\r\n          <circle class=\"progress-circle__stroke\" r=\"50%\" cx=\"50%\" cy=\"50%\"></circle>\r\n        </svg>\r\n        <span>{{progressDisplay}}%</span>\r\n      </div>\r\n    <div *ngIf=\"progressDisplay === '100'\" class=\"progress-circle progress-circle--{{config?.progressSize}} progress-circle--success\"><img class=\"icon_progress_check\" alt=\"\" src=\"assets/common-consumption/images/completed.svg\"></div>\r\n  </div>\r\n</div>\r\n\r\n<!--Loading Indicator -->\r\n<div class=\"sb-members-list-item sb-members-list-item--{{config.size}} sb-members-list-item--{{config.view}}\"\r\n[ngClass]=\"{'sb-members-list-item--bold': config.isBold, 'selectElement': config.isSelectable && selected}\" *ngIf=\"isLoading\">    \r\n    <div class=\"sb-member mr-8\">\r\n        <div class=\"sb-member__img loading-animation\"></div>\r\n        <label class=\"sb-member__name loading-animation sb--card--highlighter\"></label>   \r\n    </div>\r\n</div>\r\n\r\n",
                    styles: [".loading-animation{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-fill-mode:forwards;animation-fill-mode:forwards;-webkit-animation-iteration-count:infinite;animation-iteration-count:infinite;-webkit-animation-name:placeload;animation-name:placeload;-webkit-animation-timing-function:linear;animation-timing-function:linear;background:var(--lazyload-bg);background:var(--grey-nuance-lighter);background:linear-gradient(to right,var(--grey-nuance-lighter) 8%,var(--grey-nuance-darker) 18%,var(--grey-nuance-lighter) 33%);background-size:75rem 6.5rem;position:relative}@-webkit-keyframes placeload{0%{background-position:-29.25rem 0}100%{background-position:29.25rem 0}}@keyframes placeload{0%{background-position:-29.25rem 0}100%{background-position:29.25rem 0}}.sb--card--highlighter{height:.75rem;width:100%;margin-top:.3125rem}.sb-members-list-item{display:flex;align-items:center;border:.0625rem solid transparent;position:relative}.sb-members-list-item.selectElement,.sb-members-list-item:hover{background-color:var(--rc-E0EFFF);border:.0625rem solid var(--rc-007AFF);cursor:pointer}.sb-members-list-item .menu::after{content:'\\2807';font-size:1.5rem;color:var(--gray-200);text-align:center;align-items:center;display:flex;justify-content:center;border-radius:50%;padding-left:.25rem;padding-top:.125rem;cursor:pointer}html[dir=rtl] .sb-members-list-item .menu::after{padding-right:.25rem;padding-left:0}.sb-members-list-item .menu:hover::after{background:var(--gray-0)}.sb-members-list-item .status{border:.0625rem solid var(--secondary-200);border-radius:.125rem;font-size:.625rem;color:var(--secondary-200);background-color:var(--white);padding:.25rem .5rem}.sb-members-list-item .sb-member{display:flex;align-items:center;padding:.5rem}.sb-members-list-item .sb-member__name{font-weight:400;cursor:pointer}.sb-members-list-item .sb-member__img{display:flex;align-items:center;justify-content:center;border-radius:50%;background-color:var(--white);box-shadow:0 0 6px 0 rgba(var(--rc-rgba-black),.1);font-weight:700;text-transform:uppercase;padding-top:.125rem}.sb-members-list-item--bold .sb-member__name{font-weight:700}.sb-members-list-item--horizontal .sb-member{flex-direction:row;flex:1}.sb-members-list-item--horizontal .sb-member .sb-member__name{margin:0 0 0 .5rem;flex:1}html[dir=rtl] .sb-members-list-item--horizontal .sb-member .sb-member__name{margin:0 .5rem 0 0}.sb-members-list-item--vertical .sb-member{flex-direction:column}.sb-members-list-item--vertical .sb-member .sb-member__name{margin:.5rem 0 0;text-align:center;width:5.625rem;word-break:break-word}.sb-members-list-item--vertical .sb-member .sb-member__name.ml-8{margin-left:0!important}.sb-members-list-item--small .sb-member__img{width:2rem;height:2rem;font-size:1.25rem}.sb-members-list-item--small .sb-member__name{font-size:.875rem}.sb-members-list-item--small .selected img{width:1.25rem}.sb-members-list-item--small .menu::after{font-size:1rem;width:2rem;height:2rem}.sb-members-list-item--medium .sb-member__img{width:3rem;height:3rem;font-size:2.125rem}.sb-members-list-item--medium .sb-member__name{font-size:1rem}.sb-members-list-item--medium .selected img{width:1.5rem}.sb-members-list-item--medium .menu::after{font-size:1.5rem;width:2.5rem;height:2.5rem}.sb-members-list-item--large .sb-member__img{width:3.5rem;height:3.5rem;font-size:2.375rem}.sb-members-list-item--large .sb-member__name{font-size:1.125rem}.sb-members-list-item--large .selected img{width:2rem}.sb-members-list-item--large .menu::after{font-size:2rem;width:3rem;height:3rem}.progress-circle{height:2.25rem;width:2.25rem;position:relative}.progress-circle span{position:absolute;font-size:.625rem;font-weight:700;margin:0 auto;top:50%;left:50%;transform:translate(-50%,-50%)}.progress-circle__svg{border-radius:50%;height:100%;transform:scaleX(-1) rotate(-90deg);width:100%}.progress-circle__stroke{fill:none;stroke-width:.25rem}.progress-circle__stroke:nth-child(1){stroke:var(--secondary-200)}.progress-circle__stroke:nth-child(2){stroke:var(--gray-100);stroke-dasharray:314.1592%}.progress-circle--xs span{display:none}.progress-circle--xs{height:1.5rem;width:1.5rem}.progress-circle--xs .progress-circle__stroke{stroke-width:.25rem}.progress-circle--sm{height:2rem;width:2rem}.progress-circle--sm .progress-circle__stroke{stroke-width:.5rem}.progress-circle--md{height:3rem;width:3rem}.progress-circle--md .progress-circle__stroke{stroke-width:.75rem}.progress-circle--md span{font-size:.625rem}.progress-circle--lg{height:4rem;width:4rem}.progress-circle--lg .progress-circle__stroke{stroke-width:1rem}.progress-circle--lg span{font-size:.875rem}.progress-circle--xl{height:4.5rem;width:4.5rem}.progress-circle--xl .progress-circle__stroke{stroke-width:1.25rem}.progress-circle--xl span{font-size:1.125rem}.progress-circle--xxl{height:5.5rem;width:5.5rem}.progress-circle--xxl .progress-circle__stroke{stroke-width:1.5rem}.progress-circle--xxl span{font-size:1.25rem}.progress-circle[data-percentage=\"0\"] .progress-circle__stroke:nth-child(2){stroke-dashoffset:calc(314.1592% * (0 / 100))}.progress-circle[data-percentage=\"1\"] .progress-circle__stroke:nth-child(2){stroke-dashoffset:calc(314.1592% * (1 / 100))}.progress-circle[data-percentage=\"2\"] .progress-circle__stroke:nth-child(2){stroke-dashoffset:calc(314.1592% * (2 / 100))}.progress-circle[data-percentage=\"3\"] .progress-circle__stroke:nth-child(2){stroke-dashoffset:calc(314.1592% * (3 / 100))}.progress-circle[data-percentage=\"4\"] .progress-circle__stroke:nth-child(2){stroke-dashoffset:calc(314.1592% * (4 / 100))}.progress-circle[data-percentage=\"5\"] .progress-circle__stroke:nth-child(2){stroke-dashoffset:calc(314.1592% * (5 / 100))}.progress-circle[data-percentage=\"6\"] .progress-circle__stroke:nth-child(2){stroke-dashoffset:calc(314.1592% * (6 / 100))}.progress-circle[data-percentage=\"7\"] .progress-circle__stroke:nth-child(2){stroke-dashoffset:calc(314.1592% * (7 / 100))}.progress-circle[data-percentage=\"8\"] .progress-circle__stroke:nth-child(2){stroke-dashoffset:calc(314.1592% * (8 / 100))}.progress-circle[data-percentage=\"9\"] .progress-circle__stroke:nth-child(2){stroke-dashoffset:calc(314.1592% * (9 / 100))}.progress-circle[data-percentage=\"10\"] .progress-circle__stroke:nth-child(2){stroke-dashoffset:calc(314.1592% * (10 / 100))}.progress-circle[data-percentage=\"11\"] .progress-circle__stroke:nth-child(2){stroke-dashoffset:calc(314.1592% * (11 / 100))}.progress-circle[data-percentage=\"12\"] .progress-circle__stroke:nth-child(2){stroke-dashoffset:calc(314.1592% * (12 / 100))}.progress-circle[data-percentage=\"13\"] .progress-circle__stroke:nth-child(2){stroke-dashoffset:calc(314.1592% * (13 / 100))}.progress-circle[data-percentage=\"14\"] .progress-circle__stroke:nth-child(2){stroke-dashoffset:calc(314.1592% * (14 / 100))}.progress-circle[data-percentage=\"15\"] .progress-circle__stroke:nth-child(2){stroke-dashoffset:calc(314.1592% * (15 / 100))}.progress-circle[data-percentage=\"16\"] .progress-circle__stroke:nth-child(2){stroke-dashoffset:calc(314.1592% * (16 / 100))}.progress-circle[data-percentage=\"17\"] .progress-circle__stroke:nth-child(2){stroke-dashoffset:calc(314.1592% * (17 / 100))}.progress-circle[data-percentage=\"18\"] .progress-circle__stroke:nth-child(2){stroke-dashoffset:calc(314.1592% * (18 / 100))}.progress-circle[data-percentage=\"19\"] .progress-circle__stroke:nth-child(2){stroke-dashoffset:calc(314.1592% * (19 / 100))}.progress-circle[data-percentage=\"20\"] .progress-circle__stroke:nth-child(2){stroke-dashoffset:calc(314.1592% * (20 / 100))}.progress-circle[data-percentage=\"21\"] .progress-circle__stroke:nth-child(2){stroke-dashoffset:calc(314.1592% * (21 / 100))}.progress-circle[data-percentage=\"22\"] .progress-circle__stroke:nth-child(2){stroke-dashoffset:calc(314.1592% * (22 / 100))}.progress-circle[data-percentage=\"23\"] .progress-circle__stroke:nth-child(2){stroke-dashoffset:calc(314.1592% * (23 / 100))}.progress-circle[data-percentage=\"24\"] .progress-circle__stroke:nth-child(2){stroke-dashoffset:calc(314.1592% * (24 / 100))}.progress-circle[data-percentage=\"25\"] .progress-circle__stroke:nth-child(2){stroke-dashoffset:calc(314.1592% * (25 / 100))}.progress-circle[data-percentage=\"26\"] .progress-circle__stroke:nth-child(2){stroke-dashoffset:calc(314.1592% * (26 / 100))}.progress-circle[data-percentage=\"27\"] .progress-circle__stroke:nth-child(2){stroke-dashoffset:calc(314.1592% * (27 / 100))}.progress-circle[data-percentage=\"28\"] .progress-circle__stroke:nth-child(2){stroke-dashoffset:calc(314.1592% * (28 / 100))}.progress-circle[data-percentage=\"29\"] .progress-circle__stroke:nth-child(2){stroke-dashoffset:calc(314.1592% * (29 / 100))}.progress-circle[data-percentage=\"30\"] .progress-circle__stroke:nth-child(2){stroke-dashoffset:calc(314.1592% * (30 / 100))}.progress-circle[data-percentage=\"31\"] .progress-circle__stroke:nth-child(2){stroke-dashoffset:calc(314.1592% * (31 / 100))}.progress-circle[data-percentage=\"32\"] .progress-circle__stroke:nth-child(2){stroke-dashoffset:calc(314.1592% * (32 / 100))}.progress-circle[data-percentage=\"33\"] .progress-circle__stroke:nth-child(2){stroke-dashoffset:calc(314.1592% * (33 / 100))}.progress-circle[data-percentage=\"34\"] .progress-circle__stroke:nth-child(2){stroke-dashoffset:calc(314.1592% * (34 / 100))}.progress-circle[data-percentage=\"35\"] .progress-circle__stroke:nth-child(2){stroke-dashoffset:calc(314.1592% * (35 / 100))}.progress-circle[data-percentage=\"36\"] .progress-circle__stroke:nth-child(2){stroke-dashoffset:calc(314.1592% * (36 / 100))}.progress-circle[data-percentage=\"37\"] .progress-circle__stroke:nth-child(2){stroke-dashoffset:calc(314.1592% * (37 / 100))}.progress-circle[data-percentage=\"38\"] .progress-circle__stroke:nth-child(2){stroke-dashoffset:calc(314.1592% * (38 / 100))}.progress-circle[data-percentage=\"39\"] .progress-circle__stroke:nth-child(2){stroke-dashoffset:calc(314.1592% * (39 / 100))}.progress-circle[data-percentage=\"40\"] .progress-circle__stroke:nth-child(2){stroke-dashoffset:calc(314.1592% * (40 / 100))}.progress-circle[data-percentage=\"41\"] .progress-circle__stroke:nth-child(2){stroke-dashoffset:calc(314.1592% * (41 / 100))}.progress-circle[data-percentage=\"42\"] .progress-circle__stroke:nth-child(2){stroke-dashoffset:calc(314.1592% * (42 / 100))}.progress-circle[data-percentage=\"43\"] .progress-circle__stroke:nth-child(2){stroke-dashoffset:calc(314.1592% * (43 / 100))}.progress-circle[data-percentage=\"44\"] .progress-circle__stroke:nth-child(2){stroke-dashoffset:calc(314.1592% * (44 / 100))}.progress-circle[data-percentage=\"45\"] .progress-circle__stroke:nth-child(2){stroke-dashoffset:calc(314.1592% * (45 / 100))}.progress-circle[data-percentage=\"46\"] .progress-circle__stroke:nth-child(2){stroke-dashoffset:calc(314.1592% * (46 / 100))}.progress-circle[data-percentage=\"47\"] .progress-circle__stroke:nth-child(2){stroke-dashoffset:calc(314.1592% * (47 / 100))}.progress-circle[data-percentage=\"48\"] .progress-circle__stroke:nth-child(2){stroke-dashoffset:calc(314.1592% * (48 / 100))}.progress-circle[data-percentage=\"49\"] .progress-circle__stroke:nth-child(2){stroke-dashoffset:calc(314.1592% * (49 / 100))}.progress-circle[data-percentage=\"50\"] .progress-circle__stroke:nth-child(2){stroke-dashoffset:calc(314.1592% * (50 / 100))}.progress-circle[data-percentage=\"51\"] .progress-circle__stroke:nth-child(2){stroke-dashoffset:calc(314.1592% * (51 / 100))}.progress-circle[data-percentage=\"52\"] .progress-circle__stroke:nth-child(2){stroke-dashoffset:calc(314.1592% * (52 / 100))}.progress-circle[data-percentage=\"53\"] .progress-circle__stroke:nth-child(2){stroke-dashoffset:calc(314.1592% * (53 / 100))}.progress-circle[data-percentage=\"54\"] .progress-circle__stroke:nth-child(2){stroke-dashoffset:calc(314.1592% * (54 / 100))}.progress-circle[data-percentage=\"55\"] .progress-circle__stroke:nth-child(2){stroke-dashoffset:calc(314.1592% * (55 / 100))}.progress-circle[data-percentage=\"56\"] .progress-circle__stroke:nth-child(2){stroke-dashoffset:calc(314.1592% * (56 / 100))}.progress-circle[data-percentage=\"57\"] .progress-circle__stroke:nth-child(2){stroke-dashoffset:calc(314.1592% * (57 / 100))}.progress-circle[data-percentage=\"58\"] .progress-circle__stroke:nth-child(2){stroke-dashoffset:calc(314.1592% * (58 / 100))}.progress-circle[data-percentage=\"59\"] .progress-circle__stroke:nth-child(2){stroke-dashoffset:calc(314.1592% * (59 / 100))}.progress-circle[data-percentage=\"60\"] .progress-circle__stroke:nth-child(2){stroke-dashoffset:calc(314.1592% * (60 / 100))}.progress-circle[data-percentage=\"61\"] .progress-circle__stroke:nth-child(2){stroke-dashoffset:calc(314.1592% * (61 / 100))}.progress-circle[data-percentage=\"62\"] .progress-circle__stroke:nth-child(2){stroke-dashoffset:calc(314.1592% * (62 / 100))}.progress-circle[data-percentage=\"63\"] .progress-circle__stroke:nth-child(2){stroke-dashoffset:calc(314.1592% * (63 / 100))}.progress-circle[data-percentage=\"64\"] .progress-circle__stroke:nth-child(2){stroke-dashoffset:calc(314.1592% * (64 / 100))}.progress-circle[data-percentage=\"65\"] .progress-circle__stroke:nth-child(2){stroke-dashoffset:calc(314.1592% * (65 / 100))}.progress-circle[data-percentage=\"66\"] .progress-circle__stroke:nth-child(2){stroke-dashoffset:calc(314.1592% * (66 / 100))}.progress-circle[data-percentage=\"67\"] .progress-circle__stroke:nth-child(2){stroke-dashoffset:calc(314.1592% * (67 / 100))}.progress-circle[data-percentage=\"68\"] .progress-circle__stroke:nth-child(2){stroke-dashoffset:calc(314.1592% * (68 / 100))}.progress-circle[data-percentage=\"69\"] .progress-circle__stroke:nth-child(2){stroke-dashoffset:calc(314.1592% * (69 / 100))}.progress-circle[data-percentage=\"70\"] .progress-circle__stroke:nth-child(2){stroke-dashoffset:calc(314.1592% * (70 / 100))}.progress-circle[data-percentage=\"71\"] .progress-circle__stroke:nth-child(2){stroke-dashoffset:calc(314.1592% * (71 / 100))}.progress-circle[data-percentage=\"72\"] .progress-circle__stroke:nth-child(2){stroke-dashoffset:calc(314.1592% * (72 / 100))}.progress-circle[data-percentage=\"73\"] .progress-circle__stroke:nth-child(2){stroke-dashoffset:calc(314.1592% * (73 / 100))}.progress-circle[data-percentage=\"74\"] .progress-circle__stroke:nth-child(2){stroke-dashoffset:calc(314.1592% * (74 / 100))}.progress-circle[data-percentage=\"75\"] .progress-circle__stroke:nth-child(2){stroke-dashoffset:calc(314.1592% * (75 / 100))}.progress-circle[data-percentage=\"76\"] .progress-circle__stroke:nth-child(2){stroke-dashoffset:calc(314.1592% * (76 / 100))}.progress-circle[data-percentage=\"77\"] .progress-circle__stroke:nth-child(2){stroke-dashoffset:calc(314.1592% * (77 / 100))}.progress-circle[data-percentage=\"78\"] .progress-circle__stroke:nth-child(2){stroke-dashoffset:calc(314.1592% * (78 / 100))}.progress-circle[data-percentage=\"79\"] .progress-circle__stroke:nth-child(2){stroke-dashoffset:calc(314.1592% * (79 / 100))}.progress-circle[data-percentage=\"80\"] .progress-circle__stroke:nth-child(2){stroke-dashoffset:calc(314.1592% * (80 / 100))}.progress-circle[data-percentage=\"81\"] .progress-circle__stroke:nth-child(2){stroke-dashoffset:calc(314.1592% * (81 / 100))}.progress-circle[data-percentage=\"82\"] .progress-circle__stroke:nth-child(2){stroke-dashoffset:calc(314.1592% * (82 / 100))}.progress-circle[data-percentage=\"83\"] .progress-circle__stroke:nth-child(2){stroke-dashoffset:calc(314.1592% * (83 / 100))}.progress-circle[data-percentage=\"84\"] .progress-circle__stroke:nth-child(2){stroke-dashoffset:calc(314.1592% * (84 / 100))}.progress-circle[data-percentage=\"85\"] .progress-circle__stroke:nth-child(2){stroke-dashoffset:calc(314.1592% * (85 / 100))}.progress-circle[data-percentage=\"86\"] .progress-circle__stroke:nth-child(2){stroke-dashoffset:calc(314.1592% * (86 / 100))}.progress-circle[data-percentage=\"87\"] .progress-circle__stroke:nth-child(2){stroke-dashoffset:calc(314.1592% * (87 / 100))}.progress-circle[data-percentage=\"88\"] .progress-circle__stroke:nth-child(2){stroke-dashoffset:calc(314.1592% * (88 / 100))}.progress-circle[data-percentage=\"89\"] .progress-circle__stroke:nth-child(2){stroke-dashoffset:calc(314.1592% * (89 / 100))}.progress-circle[data-percentage=\"90\"] .progress-circle__stroke:nth-child(2){stroke-dashoffset:calc(314.1592% * (90 / 100))}.progress-circle[data-percentage=\"91\"] .progress-circle__stroke:nth-child(2){stroke-dashoffset:calc(314.1592% * (91 / 100))}.progress-circle[data-percentage=\"92\"] .progress-circle__stroke:nth-child(2){stroke-dashoffset:calc(314.1592% * (92 / 100))}.progress-circle[data-percentage=\"93\"] .progress-circle__stroke:nth-child(2){stroke-dashoffset:calc(314.1592% * (93 / 100))}.progress-circle[data-percentage=\"94\"] .progress-circle__stroke:nth-child(2){stroke-dashoffset:calc(314.1592% * (94 / 100))}.progress-circle[data-percentage=\"95\"] .progress-circle__stroke:nth-child(2){stroke-dashoffset:calc(314.1592% * (95 / 100))}.progress-circle[data-percentage=\"96\"] .progress-circle__stroke:nth-child(2){stroke-dashoffset:calc(314.1592% * (96 / 100))}.progress-circle[data-percentage=\"97\"] .progress-circle__stroke:nth-child(2){stroke-dashoffset:calc(314.1592% * (97 / 100))}.progress-circle[data-percentage=\"98\"] .progress-circle__stroke:nth-child(2){stroke-dashoffset:calc(314.1592% * (98 / 100))}.progress-circle[data-percentage=\"99\"] .progress-circle__stroke:nth-child(2){stroke-dashoffset:calc(314.1592% * (99 / 100))}.progress-circle--success img.icon_progress_check{width:100%}"]
                }] }
    ];
    /** @nocollapse */
    MemberCardComponent.ctorParameters = function () { return []; };
    MemberCardComponent.propDecorators = {
        title: [{ type: Input }],
        isAdmin: [{ type: Input }],
        isMenu: [{ type: Input }],
        indexOfMember: [{ type: Input }],
        initial: [{ type: Input }],
        cardImg: [{ type: Input }],
        identifier: [{ type: Input }],
        selected: [{ type: Input }],
        progressDisplay: [{ type: Input }],
        progressSize: [{ type: Input }],
        isLoading: [{ type: Input }],
        config: [{ type: Input }],
        menuClick: [{ type: Output }],
        cardClick: [{ type: Output }]
    };
    return MemberCardComponent;
}());

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var LibraryCardV2Component = /** @class */ (function () {
    function LibraryCardV2Component() {
        this.isMobile = false;
        this.isOffline = false;
        this.cardImg = '';
        this.type = LibraryCardTypes.DESKTOP_TEXTBOOK;
        this.moreInfoLabel = 'Medium';
        this.section = '';
        this.btnlabel = '';
        this.btnicon = '';
        this.isMenu = false;
        this.isSelected = false;
        this.cardClick = new EventEmitter();
        this.menuClick = new EventEmitter();
    }
    Object.defineProperty(LibraryCardV2Component.prototype, "LibraryCardTypes", {
        get: /**
         * @return {?}
         */
        function () { return LibraryCardTypes; },
        enumerable: true,
        configurable: true
    });
    /**
     * @return {?}
     */
    LibraryCardV2Component.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        this.fetchSvg();
        this.splitGradeMedium();
    };
    /**
     * @return {?}
     */
    LibraryCardV2Component.prototype.ngAfterViewInit = /**
     * @return {?}
     */
    function () {
    };
    /**
     * @param {?} event
     * @return {?}
     */
    LibraryCardV2Component.prototype.onClick = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        this.cardClick.emit({ event: event, data: this.content });
    };
    /**
     * @return {?}
     */
    LibraryCardV2Component.prototype.splitGradeMedium = /**
     * @return {?}
     */
    function () {
        if (this.content && this.content.gradeLevel) {
            this.content.gradeLevel = typeof this.content.gradeLevel === "string" ? this.content.gradeLevel.split(",") : this.content.gradeLevel;
        }
    };
    /* onMenuClick(event: MouseEvent) {
         this.menuClick.emit({ event: event, data: this.content });
     }*/
    /* onMenuClick(event: MouseEvent) {
            this.menuClick.emit({ event: event, data: this.content });
        }*/
    /**
     * @return {?}
     */
    LibraryCardV2Component.prototype.getClassForImage = /* onMenuClick(event: MouseEvent) {
            this.menuClick.emit({ event: event, data: this.content });
        }*/
    /**
     * @return {?}
     */
    function () {
        if (this.layoutConfig != null && this.layoutConfig.cardImgStyle != null) {
            return "sb--card__img sb--card__image-pos-" + this.layoutConfig.cardImgStyle;
        }
        else {
            return "sb--card__img sb--card__image-pos";
        }
    };
    /**
     * @return {?}
     */
    LibraryCardV2Component.prototype.fetchSvg = /**
     * @return {?}
     */
    function () {
        /** @type {?} */
        var indexToDisplay = this.indexToDisplay != null ? (this.indexToDisplay % 9) + 1 : 2;
        this.svgToDisplay = "assets/common-consumption/images/abstract_0" + indexToDisplay + ".svg";
    };
    LibraryCardV2Component.decorators = [
        { type: Component, args: [{
                    selector: 'sb-library-card-v2',
                    template: "<!-- card component -->\r\n<div class=\"sb--card sb--card--theme2\"\r\n  [ngClass]=\"{'sb--card--recently-viewed': type === LibraryCardTypes.RECENTLY_VIEWED, 'offline': isOffline, 'selected': isSelected}\"\r\n  (click)=\"onClick($event)\" *ngIf=\"!isLoading\">\r\n  <svg width=\"79px\" class=\"sb--card-svg-tail\" height=\"36px\" viewBox=\"0 0 79 36\" version=\"1.1\"\r\n    xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\r\n    <title>536CDCAF-4A97-4892-A915-61863D84DDAF</title>\r\n    <g id=\"Textbooks\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\r\n      <g id=\"1920-X-768\" class=\"sb--card-svg-tail__rc\" transform=\"translate(-735.000000, -524.000000)\">\r\n        <g id=\"Group-25\" transform=\"translate(517.000000, 338.000000)\">\r\n          <g id=\"Fill-1\">\r\n            <path\r\n              d=\"M224.269945,224.907985 C224.269945,224.907985 217.096964,205.264724 219.487958,199.23369 C221.878951,193.203161 229.905965,205.609232 231.442925,210.261729 C231.442925,210.261729 230.930605,187 237.762123,187 C244.59339,187 245.447423,217.498667 245.447423,217.498667 C245.447423,217.498667 247.838417,203.54168 252.27894,203.54168 C256.719214,203.54168 251.424907,219.049331 253.645044,218.704823 C255.865431,218.360315 264.612662,211.290301 270.931859,218.871747 C277.250806,226.453445 274.347493,238.1705 281.17901,237.998119 C288.010277,237.825992 268.503575,211.123125 272.431528,205.95374 C276.359732,200.784607 286.265169,212.84617 287.119203,215.94775 C287.119203,215.94775 286.606883,199.23369 291.218013,199.23369 C295.829393,199.23369 296,223.18494 296,223.18494 L224.269945,224.907985 Z\">\r\n            </path>\r\n          </g>\r\n        </g>\r\n      </g>\r\n    </g>\r\n  </svg>\r\n  <div class=\"sb--card__main-area\">\r\n    <!-- card img -->\r\n    <div [ngClass]=\"getClassForImage()\">\r\n      <div class=\"img-container\">\r\n        <img [src]=\"cardImg\" alt=\"\">\r\n      </div>\r\n    </div>\r\n    <div class=\"sb--card__svg-area\">\r\n      <img [src]=\"svgToDisplay\" alt=\"\"/>\r\n    </div>\r\n    <div class=\"sb--card__type\" *ngIf=\"content?.contentType\">{{content?.contentType}}</div>\r\n  </div>\r\n\r\n  <!-- card mobile view details -->\r\n  <div class=\"sb--card__info\">\r\n    <div class=\"sb--card__meta\">\r\n      <h4 class=\"sb--card__title sb__ellipsis sb__ellipsis--two text-left flex-basis-1\" title=\"{{content?.name}}\">\r\n        <bdi>{{content?.name}}</bdi></h4>\r\n      <a *ngIf=\"isMenu\" class=\"menu\" (click)=\"$event.stopPropagation()\"></a>\r\n    </div>\r\n    <div class=\"sb--card__meta1 text-left\">\r\n      <ng-container *ngIf=\"content?.subject && content?.subject.length > 0\">\r\n        <span class=\"data_1 mr-8\" title=\"{{content?.subject[0]}}\">\r\n          {{content?.subject[0]}}\r\n        </span>\r\n        <span class=\"data_1 mr-8\" *ngIf=\"content?.subject.length > 1\" title=\"{{content?.subject}}\">\r\n            + {{content?.subject.length-1}}\r\n          </span>\r\n      </ng-container>\r\n      <ng-container *ngIf=\"content?.gradeLevel && content?.gradeLevel.length > 0\">\r\n        <span class=\"data_2\" title=\"{{content?.gradeLevel[0]}}\">{{content?.gradeLevel[0]}}</span>\r\n        <span class=\"data_2\" *ngIf=\"content?.gradeLevel.length > 1\" title=\"{{content?.gradeLevel}}\">\r\n            + {{content?.gradeLevel.length-1}}\r\n          </span>\r\n      </ng-container>\r\n    </div>\r\n  </div>\r\n  <!-- content for only desktop -->\r\n  <div *ngIf=\"type === LibraryCardTypes.DESKTOP_TEXTBOOK || type === LibraryCardTypes.PORTAL_QRCODE_FLATRESULT\">\r\n    <div class=\"sb--card__moreinfo\">\r\n      <!-- other meta info Medium, Organization etc -->\r\n      <div class=\"sb--card__meta2 text-left\">\r\n        <div class=\"sb--card__meta2_data sb__ellipsis\" title=\"{{moreInfoLabel}}:\r\n        {{content?.medium}}\" *ngIf=\"content?.medium\"><span class=\"\">{{moreInfoLabel}}:\r\n            {{content?.medium}}</span></div>\r\n        <div class=\"sb--card__org sb__ellipsis\" title=\"{{content?.organisation}}\" *ngIf=\"content?.organisation\"><bdi>{{content?.organisation}}</bdi></div>\r\n      </div>\r\n      <!-- other meta info Badge and card category Book, learn, practice -->\r\n      <div class=\"sb--card__tags\">\r\n        <span class=\"sb--card__badge\" *ngIf=\"content?.badgeAssertions\"><img\r\n            [src]=\"content?.badgeAssertions[0]?.badgeClassImage\" alt=\"\" title=\"\" /></span>\r\n        <!-- <span class=\"sb--card__type\" *ngIf=\"content?.contentType\">{{content?.contentType}}</span> -->\r\n      </div>\r\n    </div>\r\n    <div *ngIf=\"type === LibraryCardTypes.PORTAL_QRCODE_FLATRESULT\">\r\n      <div>\r\n        <button class=\"sb-btn sb-btn-primary sb-btn-normal w-100 border-top-r-left-right\">\r\n          <i class=\"icon-svg icon-svg--xxs icon-videos mr-4\">\r\n            <svg class=\"icon icon-svg--white\">\r\n              <use xlink:href=\"assets/common-consumption/images/sprite.svg#play\"></use>\r\n            </svg>\r\n          </i> {{btnlabel}} </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Qr code card -->\r\n  <div *ngIf=\"type === LibraryCardTypes.QRCODE_RESULT\">\r\n    <!-- Section area if not available it will be hidden -->\r\n    <div class=\"sb--card__moreinfo\" *ngIf=\"section !== null\">\r\n      <div class=\"sb--card__meta2 text-left\">\r\n        <div class=\"sb--card__meta2_data sb__ellipsis sb__ellipsis--two\" *ngIf=\"section\">\r\n          <span class=\"label\">{{moreInfoLabel}}: </span>\r\n          <span class=\"value\">{{section}}</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <!-- <ng-content select=\".card-hover\">\r\n    \r\n  </ng-content> -->\r\n  <ng-container\r\n    *ngTemplateOutlet=\"gridTemplate; context: {$implicit: content?.hoverData, hoverData: content?.hoverData, content:content}\"\r\n    class=\"card-hover\">\r\n  </ng-container>\r\n</div>\r\n\r\n<div class=\"sb--card sb--card--theme2\" *ngIf=\"isLoading\">\r\n  <!-- card img -->\r\n  <div class=\"sb--card__main-area\">\r\n    <div [ngClass]=\"getClassForImage()\">\r\n      <div class=\"img-container loading-animation\">\r\n        <img [src]=\"cardImg\" alt=\"\">\r\n      </div>\r\n    </div>\r\n    <div class=\"sb--card__svg-area loading-animation\">\r\n    </div>\r\n  </div>\r\n  <!-- card mobile view details -->\r\n  <div class=\"sb--card__info\">\r\n    <h4 class=\"sb--card__title loading-animation sb--card--highlighter\" style=\"width:50%;\"></h4>\r\n    <div class=\"sb--card__meta text-left\">\r\n      <span class=\"data_1 ellipsis loading-animation sb--card--highlighter\"></span>\r\n    </div>\r\n  </div>\r\n  <div class=\"sb--card__moreinfo\" style=\"display:block;\"\r\n    *ngIf=\"type === LibraryCardTypes.DESKTOP_TEXTBOOK || type === LibraryCardTypes.QRCODE_RESULT || type === LibraryCardTypes.PORTAL_QRCODE_FLATRESULT\">\r\n    <div class=\"sb--card__meta2 text-left\" style=\"float:left;width:60%\">\r\n      <div class=\"label loading-animation sb--card--highlighter\" style=\"width:80%;\"></div>\r\n      <div class=\"value loading-animation sb--card--highlighter\" style=\"width:60%;\"></div>\r\n    </div>\r\n    <div class=\"sb--card__tags\" style=\"float:right;width:30%;margin-top: 15px;\">\r\n      <div class=\"label loading-animation sb--card--highlighter\" style=\"width:80%;\"></div>\r\n    </div>\r\n    <div style=\"clear:both;\"></div>\r\n  </div>\r\n  <div *ngIf=\"type === LibraryCardTypes.PORTAL_QRCODE_FLATRESULT\">\r\n    <div>\r\n      <div class=\"label loading-animation sb--card--highlighter\" style=\"width:100%;\"></div>\r\n    </div>\r\n  </div>\r\n\r\n</div>\r\n",
                    styles: [":host .sb--card__img .img-container{position:relative;overflow:hidden;border:.25rem solid var(--white);border-radius:4.5rem}:host .sb--card__img .img-container img{max-width:100%;min-height:100%;width:auto;height:auto;position:absolute;left:50%;top:50%;transform:translate(-50%,-50%);overflow:hidden;-o-object-fit:cover;object-fit:cover}:host .sb--card__org{color:var(--balck)!important}:host .sb--card__image-pos{position:absolute;top:50%;right:1rem;z-index:1000}html[dir=rtl] :host .sb--card__image-pos{left:1rem;right:inherit}:host .sb--card.selected{border:1px solid #024f9d;border-radius:4px;background-color:rgba(2,79,157,.2)}:host .sb--card.sb--card--theme2{border-radius:1.5rem;box-shadow:var(--sbt-box-shadow-6px);overflow:hidden}:host .sb--card.sb--card--theme2 .sb--card-svg-tail{position:absolute;bottom:0;right:1.5rem}html[dir=rtl] :host .sb--card.sb--card--theme2 .sb--card-svg-tail{left:1.5rem;right:inherit}:host .sb--card.sb--card--theme2 .sb--card-svg-tail__rc{fill:transparent;stroke:var(--primary-color)}:host .sb--card.sb--card--theme2 .sb--card__svg-area{height:4.5rem;width:100%;border-radius:1rem;overflow:hidden}:host .sb--card.sb--card--theme2 .sb--card__svg-area img{width:100%;height:100%;-o-object-fit:cover;object-fit:cover}:host .sb--card.sb--card--theme2 .sb--card__main-area{margin:1rem 1rem .5rem;height:auto;position:relative}:host .sb--card.sb--card--theme2 .sb--card__main-area .sb--card__type{margin-left:-1rem;padding-left:8px;position:absolute;background:var(--black);height:1.25rem;color:var(--white);font-size:.625rem;display:flex;align-items:center}html[dir=rtl] :host .sb--card.sb--card--theme2 .sb--card__main-area .sb--card__type{margin-right:-1rem;padding-right:8px}:host .sb--card.sb--card--theme2 .sb--card__main-area .sb--card__type::before{border-color:var(--black) var(--black) var(--black) transparent;position:absolute;right:-8px;transform:rotatey(-180deg);left:inherit}html[dir=rtl] :host .sb--card.sb--card--theme2 .sb--card__main-area .sb--card__type::before{left:-8px;transform:rotatex(180deg);right:inherit}:host .sb--card.sb--card--theme2 .sb--card__moreinfo{background:var(--white)}:host .sb--card.sb--card--theme2 .sb--card__info{padding:0 1rem}:host .sb--card.sb--card--theme2 .sb--card__title{margin-right:5.5rem}html[dir=rtl] :host .sb--card.sb--card--theme2 .sb--card__title{margin-left:5.5rem;margin-right:0}:host .sb--card.sb--card--theme2 .sb--card__meta{height:2.5rem;display:flex;align-items:center}:host .sb--card.sb--card--theme2 .sb--card__meta1{height:3.5rem;flex-wrap:wrap;margin-top:.5rem}:host .sb--card.sb--card--theme2 .sb--card__meta1 .data_1,:host .sb--card.sb--card--theme2 .sb--card__meta1 .data_2{border-radius:.5rem;font-size:.75rem;padding:0 .5rem;width:auto;flex:initial;margin:0 .5rem .5rem 0;white-space:nowrap}:host .sb--card.sb--card--theme2 .sb--card__meta1 .data_1{--secondary-0:#E0F5EA;background:var(--secondary-0)}:host .sb--card.sb--card--theme2 .sb--card__meta1 .data_2{--sbt-pill-hs:212,100%;--sbt-pill-bg:hsl(var(--sbt-pill-hs), 90%);--sbt-pill-bg-active:hsl(var(--sbt-pill-hs), 50%);background:var(--sbt-pill-bg);color:var(--sbt-pill-bg-active)}:host .sb--card.sb--card--theme2 .sb--card__meta1 .data_2:last-child{margin-right:0}:host .sb--card.sb--card--theme2 .sb--card__meta2{padding:.5rem 1rem}:host .sb--card.sb--card--theme2 .sb--card__image-pos{margin:0;overflow:inherit}:host .sb--card.sb--card--theme2 .sb--card__image-pos .img-container{box-shadow:0 0 5px 0 rgba(var(--rc-rgba-black),.1)}", ".loading-animation{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-fill-mode:forwards;animation-fill-mode:forwards;-webkit-animation-iteration-count:infinite;animation-iteration-count:infinite;-webkit-animation-name:placeload;animation-name:placeload;-webkit-animation-timing-function:linear;animation-timing-function:linear;background:var(--lazyload-bg);background:var(--grey-nuance-lighter);background:linear-gradient(to right,var(--grey-nuance-lighter) 8%,var(--grey-nuance-darker) 18%,var(--grey-nuance-lighter) 33%);background-size:75rem 6.5rem;position:relative}@-webkit-keyframes placeload{0%{background-position:-29.25rem 0}100%{background-position:29.25rem 0}}@keyframes placeload{0%{background-position:-29.25rem 0}100%{background-position:29.25rem 0}}.sb--card--highlighter{height:.75rem;width:100%;margin-top:.3125rem}:host .sb--card{width:100%;background-color:var(--white);display:flex;flex-direction:column;cursor:pointer;position:relative;margin-top:0;border:0;contain:content;border-radius:.125rem}:host .sb--card:hover{transform:translate(0,0);box-shadow:0 .125rem .4375rem 0 rgba(var(--rc-rgba-black),.16)}@media (max-width:767px){:host .sb--card{box-shadow:0 .125rem .4375rem rgba(var(--rc-rgba-black),.16)}}:host .sb--card__main-area{display:flex;flex-direction:row;align-items:center;height:5.5rem}:host .sb--card__img{height:4.5rem;width:4.5rem;overflow:hidden;flex:0 0 4.5rem;margin:.5rem}:host .sb--card__img .img-container{display:flex;align-items:center;background-color:var(--gray-100);height:4.5rem;width:4.5rem;justify-content:center}:host .sb--card__img .img-container img{max-width:100%}:host .sb--card__info{flex:1;overflow:hidden}[dir=ltr] :host .sb--card__info{padding-right:.5rem}[dir=rtl] :host .sb--card__info{padding-left:.5rem}:host .sb--card__title{color:var(--primary-color);font-size:.875rem;margin:0;line-height:1.25rem}:host .sb--card__meta1{color:var(--gray-800);font-size:.75rem;display:flex;flex-direction:row;align-items:center;flex:1;line-height:1.25rem;margin-top:.25rem}:host .sb--card .data_1{max-width:50%}:host .sb--card .data_2{flex:1}:host .sb--card .dot-divider{width:.25rem;height:.25rem;min-width:.25rem;max-width:.25rem;min-height:.25rem;max-height:.25rem;border-radius:100%;background-color:var(--gray-200);display:inline-block;margin:0 .5rem}:host .sb--card__moreinfo{border-radius:0 0 .125rem .125rem;background-color:var(--rc-FAFAFA);display:flex;flex-direction:row;align-items:stretch;justify-content:space-between;min-height:3.5rem;border-top:0 solid #cacbce}:host .sb--card__meta2{color:var(--gray-800);font-size:.75rem;line-height:.875rem;display:flex;flex-direction:column;flex-wrap:wrap;justify-content:space-around;padding:.5rem}:host .sb--card__meta2_data .label{font-weight:400}:host .sb--card__meta2_data .value{font-weight:700}:host .sb--card__org{color:var(--gray-200)}:host .sb--card__tags{display:flex;flex-direction:row;align-items:center;justify-content:flex-end;flex:1}:host .sb--card__badge{display:flex}:host .sb--card__badge img{width:1.25rem;height:1.25rem}:host .sb--card__type{background:var(--gray-200);position:relative;height:1.25rem;color:var(--white);font-size:.625rem;display:flex;align-items:center}[dir=ltr] :host .sb--card__type{padding-left:.25rem;padding-right:.5rem;margin-left:1rem}[dir=rtl] :host .sb--card__type{padding-left:.5rem;padding-right:.25rem;margin-right:1rem}:host .sb--card__type:before{content:\"\";width:0;height:0;border-width:.625rem .3125rem;border-style:solid;border-color:var(--gray-200) var(--gray-200) var(--gray-200) transparent;position:absolute;left:-10px}html[dir=rtl] :host .sb--card__type:before{right:-.625rem;left:inherit;border-color:var(--gray-200) transparent var(--gray-200) var(--gray-200)}:host .sb--card--recently-viewed .sb--card__img{height:5.5rem;width:5.5rem;flex:0 0 5.5rem;margin:0}:host .sb--card--recently-viewed .sb--card__img .img-container{display:flex;align-items:center;background-color:var(--gray-100);height:5.5rem;width:5.5rem}:host .sb--card--recently-viewed .sb--card__info{padding:.5rem;flex:1}:host .sb--card.selected{border:1px solid #024f9d;border-radius:4px;background-color:rgba(2,79,157,.2)}:host .sb--card.offline .sb--card__img .img-container{display:flex;align-items:center;background-color:var(--tertiary-color);opacity:.5}:host .sb--card.offline .sb--card__img .img-container img{margin:auto;font-size:1.5rem;color:var(--white)}:host .sb--card.offline .sb--card__info,:host .sb--card.offline .sb--card__moreinfo{opacity:.5}:host .sb--card__progressbar{height:.25rem;margin:0;border-radius:0;box-shadow:inset 0 -.0625rem .0625rem rgba(var(--rc-rgba-white),.3);width:100%;background:var(--gray-100)}:host .sb--card__progressbar>span{display:block;height:100%;background-color:var(--secondary-200);background-image:-webkit-gradient(center bottom,var(--secondary-400),var(--secondary-200));box-shadow:inset 0 .125rem .5625rem var(--gray-100),inset 0 -.125rem .375rem rgba(var(--rc-rgba-black),.4);position:relative;overflow:hidden}:host .animate>span:after{content:\"\";position:absolute;top:0;left:0;bottom:0;right:0;background-image:-webkit-gradient(linear,0 0,100% 100%,color-stop(.25,rgba(var(--rc-rgba-white),.2)),color-stop(.25,transparent),color-stop(.5,transparent),color-stop(.5,rgba(var(--rc-rgba-white),.2)),color-stop(.75,rgba(var(--rc-rgba-white),.2)),color-stop(.75,transparent),to(transparent));z-index:1;background-size:3.125rem 3.125rem;overflow:hidden;-webkit-animation:2s linear infinite move;border-radius:1.25rem .5rem .5rem 1.25rem}@-webkit-keyframes move{0%{background-position:0 0}100%{background-position:3.125rem 3.125rem}}:host .completed>span{background-color:var(--secondary-color);background-image:-webkit-linear-gradient(var(--secondary-100),var(--secondary-400))}:host .inprogress>span{background-color:var(--tertiary-color);background-image:-webkit-linear-gradient(var(--tertiary-100),var(--tertiary-400))}:host .notcompleted>span{background-color:var(--red-100);background-image:-webkit-linear-gradient(var(--red-100),var(--red-400))}:host .nostripes>span,:host .nostripes>span:after{-webkit-animation:none;-moz-animation:none;background-image:none}:host .border-top-r-left-right{border-top-left-radius:0;border-top-right-radius:0}::ng-deep .card-hover{display:none;transition:.2s ease-in}::ng-deep .sb--card:hover .card-hover{display:block;z-index:1001}::ng-deep .sb--card:hover .card-hover .child-content{color:var(--white);position:absolute;left:0;right:0;top:0;bottom:0;opacity:.95;border-radius:.125rem;background-color:var(--primary-color);z-index:1;display:flex;align-items:center;transition:.2s ease-in;flex-direction:column;justify-content:space-evenly}::ng-deep .sb--card:hover .card-hover .action-container{display:flex;width:100%;justify-content:center;align-self:center;justify-self:center;flex:1;align-items:center}::ng-deep .sb--card:hover .card-hover .action-item{padding:0 1rem;flex:1;text-align:center}::ng-deep .sb--card:hover .card-hover .action-item .sb-btn.sb-btn-primary[disabled]{background-color:transparent;opacity:.5;border:0;color:var(--white)}::ng-deep .sb--card:hover .card-hover .action-item:not(:last-child){border-right:.0625rem solid rgba(var(--rc-rgba-white),.5)}::ng-deep .sb--card:hover .card-hover .hover-meta-info{font-size:.625rem;opacity:.8;color:var(--white);line-height:.75rem;flex:0 0 25%}.menu::after{content:'\\2807';font-size:1.5rem;color:var(--gray-200);text-align:center;align-items:center;display:flex;justify-content:center;border-radius:50%;padding-left:.375rem;cursor:pointer;width:2rem;height:2rem}.menu:hover::after{background:var(--gray-0)}"]
                }] }
    ];
    LibraryCardV2Component.propDecorators = {
        content: [{ type: Input }],
        isMobile: [{ type: Input }],
        isOffline: [{ type: Input }],
        cardImg: [{ type: Input }],
        type: [{ type: Input }],
        moreInfoLabel: [{ type: Input }],
        section: [{ type: Input }],
        isLoading: [{ type: Input }],
        gridTemplate: [{ type: Input, args: ['hover-template',] }],
        btnlabel: [{ type: Input }],
        btnicon: [{ type: Input }],
        isMenu: [{ type: Input }],
        layoutConfig: [{ type: Input }],
        indexToDisplay: [{ type: Input }],
        svgToDisplay: [{ type: Input }],
        isSelected: [{ type: Input }],
        cardClick: [{ type: Output }],
        menuClick: [{ type: Output }]
    };
    return LibraryCardV2Component;
}());

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/** @type {?} */
var notificationData = {
    "identifier": "c2d72c04-3010-45d7-bc13-29a3105dca26",
    "data": {
        "actionData": {
            "actionType": "contentURL",
            "contentURL": "https://staging.ntp.net.in/resources/play/content/do_212669767503060992174",
            "description": "Notfication description",
            "openPlayer": true,
            "title": "InApp Notification 4",
            "appIcon": ""
        },
        type: 1
    },
    "id": "c2d72c04-3010-45d7-bc13-29a3105dca26",
    "category": "Notification",
    "priority": 1,
    "userId": "555caa55-8dc8-4d8f-a8c5-159ade057f90",
    "createdOn": 1605589382634,
    "status": "unread",
    "isRead": false
};

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var NotificationCardComponent = /** @class */ (function () {
    function NotificationCardComponent() {
        this.notification = notificationData;
        this.notificationClick = new EventEmitter();
        this.deleteNotificationClick = new EventEmitter();
    }
    /**
     * @return {?}
     */
    NotificationCardComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        this.notification['isRead'] = (this.notification.status === NotificationStatus.READ);
    };
    /**
     * @param {?} event
     * @return {?}
     */
    NotificationCardComponent.prototype.notificationClickHandler = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        /** @type {?} */
        var eventData = {
            event: event,
            data: this.notification
        };
        this.notificationClick.emit(eventData);
    };
    /**
     * @param {?} event
     * @return {?}
     */
    NotificationCardComponent.prototype.notificationDeleteHandler = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        /** @type {?} */
        var eventData = {
            event: event,
            data: this.notification
        };
        this.deleteNotificationClick.emit(eventData);
    };
    NotificationCardComponent.decorators = [
        { type: Component, args: [{
                    selector: 'sb-notification-card',
                    template: "<div class=\"sb-notification-list p-8\" (click)=\"notificationClickHandler($event)\">\r\n  <div class=\"sb-notification-list-header d-flex flex-ai-center flex-jc-space-between\">\r\n    <div class=\"notification-info d-flex flex-ai-center mb-8\">\r\n      <div class=\"status\" *ngIf=\"!notification?.isRead\"></div>\r\n      <div class=\"date ml-8\">{{notification?.createdOn | date:'E, d MMMM h:mm'}}</div>\r\n    </div>\r\n    <div class=\"delete-icon\" (click)=\"notificationDeleteHandler($event);$event.stopPropagation()\">\r\n      <img class=\"Delete-gray\" src=\"assets/common-consumption/images/Delete-gray.svg\" alt=\"\" alt=\"delete\" width=\"14px\">\r\n      <img class=\"Delete-red\" src=\"assets/common-consumption/images/Delete-red.svg\" alt=\"\" alt=\"delete\" width=\"14px\">\r\n    </div>\r\n  </div>\r\n  <div class=\"sb-notification-data d-flex flex-ai-center\">\r\n    <div class=\"logo\" *ngIf=\"notification?.data?.actionData?.appIcon\">\r\n      <img [src]=\"notification?.data?.actionData?.appIcon\" width=\"20px\">\r\n    </div>\r\n    <div class=\"ml-12 notification-content\">\r\n      <div class=\"title\" *ngIf=\"notification?.data?.actionData?.title\" [ngClass]=\"{'active': !notification?.isRead}\">{{notification?.data?.actionData?.title}}</div>\r\n      <div class=\"sub-title py-8\" *ngIf=\"notification?.data?.actionData?.description\">{{notification?.data?.actionData?.description}}</div>\r\n    </div>\r\n  </div>\r\n</div>\r\n",
                    styles: [".sb-notification-list{border-radius:.5rem;background-color:var(--white);box-shadow:.3125rem .3125rem .125rem 0 rgba(var(--rc-rgba-black),.1);margin-bottom:.5rem;border:.03125rem solid #ddd}.sb-notification-list:hover{cursor:pointer}.sb-notification-list:hover .sb-notification-list-header .notification-info .status{background-color:var(--orange)}.sb-notification-list:hover .sb-notification-list-header .delete-icon .Delete-red{display:block}.sb-notification-list:hover .sb-notification-list-header .delete-icon .Delete-gray{display:none}.sb-notification-list .sb-notification-list-header .notification-info .status{height:.5rem;width:.5rem;background-color:var(--gray-200);border-radius:.5rem}.sb-notification-list .sb-notification-list-header .notification-info .date{color:#979797;font-size:.75rem}.sb-notification-list .sb-notification-list-header .delete-icon .Delete-red{display:none}.sb-notification-list .sb-notification-data .logo{height:2rem;width:2rem;border-radius:.5rem;background-color:var(--gray-0);display:inline-flex;align-items:center;justify-content:center}.sb-notification-list .sb-notification-data .logo img{height:1.5rem;max-width:1.25rem}.sb-notification-list .sb-notification-data .notification-content{overflow:hidden}.sb-notification-list .sb-notification-data .notification-content .title{color:var(--gray-400);font-size:.875rem;font-weight:700;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.sb-notification-list .sb-notification-data .notification-content .title.active{color:var(--primary-color)}.sb-notification-list .sb-notification-data .notification-content .sub-title{color:var(--gray-400);font-size:.75rem;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}"]
                }] }
    ];
    /** @nocollapse */
    NotificationCardComponent.ctorParameters = function () { return []; };
    NotificationCardComponent.propDecorators = {
        notification: [{ type: Input }],
        notificationClick: [{ type: Output }],
        deleteNotificationClick: [{ type: Output }]
    };
    return NotificationCardComponent;
}());

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var CardModule = /** @class */ (function () {
    function CardModule() {
    }
    CardModule.decorators = [
        { type: NgModule, args: [{
                    declarations: [LibraryCardComponent, CourseCardComponent, CardHoverComponent,
                        TocCardComponent, MyCourseCardComponent, CourseCuriculumCardComponent, GroupCardComponent,
                        MemberCardComponent, LibraryCardV2Component, NotificationCardComponent],
                    imports: [
                        CommonModule
                    ],
                    exports: [LibraryCardComponent, CourseCardComponent, CardHoverComponent, TocCardComponent,
                        MyCourseCardComponent, CourseCuriculumCardComponent, GroupCardComponent, MemberCardComponent,
                        LibraryCardV2Component, NotificationCardComponent]
                },] }
    ];
    return CardModule;
}());

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/** @type {?} */
var defaultLibraryCardsGrid = {
    "title": "Biology",
    "maxCardCount": 3,
    "viewMoreButtonText": "View all",
    "contentList": [
        {
            "appIcon": "https://ekstep-public-qa.s3-ap-south-1.amazonaws.com/content/do_2124899901836247041294/artifact/0306022-1.jpg_1524657005308.jpg",
            "subject": "Tamil",
            "gradeLevel": [
                "Class 2"
            ],
            "medium": "Telugu",
            "organisation": [
                "Sachin 2808"
            ],
            "badgeAssertions": [
                {
                    "issuerId": "issuerslug-345",
                    "assertionId": "fa2ec612-18da-4048-b146-a8846588a9a5",
                    "badgeClassImage": "https://ntpstaging.blob.core.windows.net/badgr/uploads/badges/5dfe8927e565723cfb1c2d2fe5a1ac1f.png",
                    "badgeId": "badgeslug-85",
                    "badgeClassName": "Best guide",
                    "createdTS": 1534759115237,
                    "status": "active"
                }
            ],
            "resourceType": "Learn",
            "name": "Creation 100100"
        }
    ]
};

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var LibraryCardsStackComponent = /** @class */ (function () {
    function LibraryCardsStackComponent() {
        this.contentList = defaultLibraryCardsGrid.contentList;
        this.isOffline = false;
        this.viewMoreButtonText = defaultLibraryCardsGrid.viewMoreButtonText;
        this.maxCardCount = defaultLibraryCardsGrid.maxCardCount;
        this.cardType = 'textbook';
        this.viewMoreClick = new EventEmitter();
        this.cardClick = new EventEmitter();
        this.menuClick = new EventEmitter();
    }
    Object.defineProperty(LibraryCardsStackComponent.prototype, "LibraryCardTypes", {
        get: /**
         * @return {?}
         */
        function () { return LibraryCardTypes; },
        enumerable: true,
        configurable: true
    });
    /**
     * @param {?} event
     * @return {?}
     */
    LibraryCardsStackComponent.prototype.showAllList = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        this.viewMoreClick.emit(event);
    };
    /**
     * @param {?} event
     * @param {?} index
     * @return {?}
     */
    LibraryCardsStackComponent.prototype.emitCardClick = /**
     * @param {?} event
     * @param {?} index
     * @return {?}
     */
    function (event, index) {
        this.cardClick.emit({ 'data': event.data, 'index': index });
    };
    /**
     * @param {?} event
     * @return {?}
     */
    LibraryCardsStackComponent.prototype.emitMenuClick = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        this.menuClick.emit(event);
    };
    LibraryCardsStackComponent.decorators = [
        { type: Component, args: [{
                    selector: 'sb-library-cards-stack',
                    template: "<div class=\"card-list-container\">\r\n\r\n    <div class=\"header\" *ngIf=\"!isLoading && title\">\r\n        <div class=\"title\">\r\n            <i class=\"icon-svg icon-svg--sm\">\r\n                <svg class=\"icon\">\r\n                    <use xlink:href=\"assets/common-consumption/images/sprite.svg#book\"></use>\r\n                </svg>\r\n            </i>\r\n            {{title}}\r\n        </div>\r\n    </div>\r\n\r\n    <!--Loading Indicator for header-->\r\n    <div class=\"header\" *ngIf=\"isLoading\">\r\n            <div class=\"loading-animation sb--card--highlighter\" style=\"width:100px;height:20px;\">\r\n                    <i class=\"icon-svg icon-svg--sm\"></i>\r\n            </div>\r\n    </div>\r\n\r\n    <div class=\"body\">\r\n        <ng-container *ngIf=\"cardType==='textbook' || layoutConfig\">\r\n            <sb-library-card\r\n                *ngFor=\"let content of contentList | slice:0:(maxCardCount ? maxCardCount : contentList?.length); let i= index\" [isOffline]=\"!content?.isAvailableLocally && isOffline\"\r\n                [content]=\"content\" [type]=\"LibraryCardTypes.MOBILE_TEXTBOOK\" [isLoading]=\"isLoading\" (cardClick)=\"emitCardClick($event, i)\" [cardImg]=\"content?.cardImg\"\r\n                (menuClick)=\"emitMenuClick($event)\" [isMenu]=\"isMenu\" [layoutConfig]=\"layoutConfig\">\r\n            </sb-library-card>\r\n            <button *ngIf=\"maxCardCount && contentList?.length >maxCardCount\" class=\"sbbtn flat stack-btn full-width\"\r\n                (click)=\"showAllList($event)\">{{viewMoreButtonText}}</button>\r\n        </ng-container>\r\n        <ng-container *ngIf=\"cardType==='course' && !layoutConfig\">\r\n            <sb-course-card *ngFor=\"let content of contentList | slice:0:(maxCardCount ? maxCardCount : contentList?.length); let i= index\"\r\n                [section]=\"null\" [course]=\"content\" [cardImg]=\"content?.cardImg\" (cardClick)=\"emitCardClick($event, i)\" [isMenu]=\"isMenu\"\r\n                (menuClick)=\"emitMenuClick($event)\">\r\n            </sb-course-card>\r\n            <button *ngIf=\"maxCardCount && contentList?.length >maxCardCount\" class=\"sbbtn flat stack-btn full-width\"\r\n                (click)=\"showAllList($event)\">{{viewMoreButtonText}}</button>\r\n        </ng-container>\r\n    </div>\r\n\r\n</div>",
                    styles: [".loading-animation{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-fill-mode:forwards;animation-fill-mode:forwards;-webkit-animation-iteration-count:infinite;animation-iteration-count:infinite;-webkit-animation-name:placeload;animation-name:placeload;-webkit-animation-timing-function:linear;animation-timing-function:linear;background:var(--lazyload-bg);background:var(--grey-nuance-lighter);background:linear-gradient(to right,var(--grey-nuance-lighter) 8%,var(--grey-nuance-darker) 18%,var(--grey-nuance-lighter) 33%);background-size:75rem 6.5rem;position:relative}@-webkit-keyframes placeload{0%{background-position:-29.25rem 0}100%{background-position:29.25rem 0}}@keyframes placeload{0%{background-position:-29.25rem 0}100%{background-position:29.25rem 0}}.sb--card--highlighter{height:.75rem;width:100%;margin-top:.3125rem}:host .header{display:flex;flex-direction:row;padding:.5rem 0;margin-bottom:.5rem}:host .header .title{font-size:1.125rem;line-height:1.625rem;font-weight:700;color:var(--primary-color);text-overflow:ellipsis;text-transform:capitalize;overflow:hidden;flex:1;display:flex;align-items:center}:host .header .title i{vertical-align:middle;height:1.0625rem;width:.875rem;top:0}[dir=ltr] :host .header .title i{margin-right:.5rem}[dir=rtl] :host .header .title i{margin-left:.5rem}:host .body{box-shadow:0 .125rem .4375rem 0 rgba(var(--rc-rgba-black),.16)}:host .stack-btn{background-color:var(--primary-100);padding:1rem;color:var(--primary-color);font-weight:700;border-style:none;text-transform:uppercase;vertical-align:middle;line-height:1;width:100%}@media (max-width:768px){:host .sb--card{margin-top:.0625rem}:host .sb--card:last-child{box-shadow:none}}"]
                }] }
    ];
    LibraryCardsStackComponent.propDecorators = {
        contentList: [{ type: Input }],
        title: [{ type: Input }],
        isOffline: [{ type: Input }],
        viewMoreButtonText: [{ type: Input }],
        maxCardCount: [{ type: Input }],
        isLoading: [{ type: Input }],
        isMenu: [{ type: Input }],
        layoutConfig: [{ type: Input }],
        cardType: [{ type: Input }],
        viewMoreClick: [{ type: Output }],
        cardClick: [{ type: Output }],
        menuClick: [{ type: Output }]
    };
    return LibraryCardsStackComponent;
}());

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var LibraryCardsGridComponent = /** @class */ (function () {
    function LibraryCardsGridComponent() {
        /* Title for the grid */
        this.title = defaultLibraryCardsGrid.title;
        this.contentList = defaultLibraryCardsGrid.contentList;
        this.hoverData = [];
        /* Max card count to be shown */
        this.maxCardCount = defaultLibraryCardsGrid.maxCardCount;
        this.viewMoreButtonText = defaultLibraryCardsGrid.viewMoreButtonText;
        /* Show Menu on each card */
        this.isMenu = false;
        this.viewMoreClick = new EventEmitter();
        this.cardClick = new EventEmitter();
        this.hoverActionClick = new EventEmitter();
        this.menuClick = new EventEmitter();
    }
    Object.defineProperty(LibraryCardsGridComponent.prototype, "LibraryCardTypes", {
        get: /**
         * @return {?}
         */
        function () { return LibraryCardTypes; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(LibraryCardsGridComponent.prototype, "LibraryCardGridTypes", {
        get: /**
         * @return {?}
         */
        function () { return LibraryCardGridTypes; },
        enumerable: true,
        configurable: true
    });
    /**
     * Triggers event on `View More` Click
     * @param event HTML click event
     */
    /**
     * Triggers event on `View More` Click
     * @param {?} event HTML click event
     * @return {?}
     */
    LibraryCardsGridComponent.prototype.onViewMoreClick = /**
     * Triggers event on `View More` Click
     * @param {?} event HTML click event
     * @return {?}
     */
    function (event) {
        this.viewMoreClick.emit({ event: event, data: this.contentList });
    };
    /**
     * Triggers event on card click
     * @param event HTML Click event
     * @param data Content data for selected card
     */
    /**
     * Triggers event on card click
     * @param {?} event HTML Click event
     * @param {?} data Content data for selected card
     * @return {?}
     */
    LibraryCardsGridComponent.prototype.onCardClick = /**
     * Triggers event on card click
     * @param {?} event HTML Click event
     * @param {?} data Content data for selected card
     * @return {?}
     */
    function (event, data) {
        this.cardClick.emit({ event: event, data: data });
    };
    /**
     * @param {?} event
     * @return {?}
     */
    LibraryCardsGridComponent.prototype.hoverActionClicked = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        this.hoverActionClick.emit(event);
    };
    /**
     * @param {?} maxCardCounter
     * @return {?}
     */
    LibraryCardsGridComponent.prototype.range = /**
     * @param {?} maxCardCounter
     * @return {?}
     */
    function (maxCardCounter) {
        return new Array(maxCardCounter);
    };
    /**
     * @param {?} event
     * @return {?}
     */
    LibraryCardsGridComponent.prototype.onCardMenuClick = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        this.menuClick.emit(event);
    };
    LibraryCardsGridComponent.decorators = [
        { type: Component, args: [{
                    selector: 'sb-library-cards-grid',
                    template: "<div class=\"layout-library\" *ngIf=\"!isLoading\">\r\n    <div class=\"header\">\r\n        <div class=\"title\">\r\n            <i class=\"icon-svg icon-svg--sm\">\r\n                <svg class=\"icon\">\r\n                    <use xlink:href=\"assets/common-consumption/images/sprite.svg#book\"></use>\r\n                </svg>\r\n            </i>\r\n            {{title}}\r\n            <span class=\"badge\">{{contentList?.length}}</span>\r\n        </div>\r\n        <button class=\"sb-btn sb-btn-normal sb-btn-outline-secondary sb-btn-white\"\r\n            *ngIf=\"(type !== LibraryCardGridTypes.INFINITE_CARD_GRID && type !== LibraryCardGridTypes.INFINITE_CARD_GRID_WITH_HOVER) && maxCardCount && contentList?.length >maxCardCount\"\r\n            (click)=\"onViewMoreClick($event)\">\r\n            {{viewMoreButtonText}}\r\n        </button>\r\n    </div>\r\n\r\n\r\n    <div class=\"cards-container\"\r\n        *ngIf=\"type !== LibraryCardGridTypes.INFINITE_CARD_GRID && type !== LibraryCardGridTypes.INFINITE_CARD_GRID_WITH_HOVER\">\r\n        <div class=\"item\" [ngClass]=\"maxCardCount ? 'show-' + maxCardCount: ''\"\r\n            *ngFor=\"let content of contentList | slice:0:(maxCardCount ? maxCardCount : contentList?.length)let i=index\">\r\n            <sb-library-card [indexToDisplay]=\"i\" [layoutConfig]=\"layoutConfig\" [content]=\"content\" [type]=\"LibraryCardTypes.DESKTOP_TEXTBOOK\"\r\n                (click)=\"onCardClick($event, content)\" [cardImg]=\"content?.cardImg\">\r\n            </sb-library-card>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"cards-container\" *ngIf=\"type === LibraryCardGridTypes.INFINITE_CARD_GRID\">\r\n        <div class=\"item\"  [ngClass]=\"maxCardCount ? 'show-' + maxCardCount: ''\" *ngFor=\"let content of contentList;let i=index\">\r\n            <sb-library-card [indexToDisplay]=\"i\" [layoutConfig]=\"layoutConfig\" [content]=\"content\" [type]=\"LibraryCardTypes.DESKTOP_TEXTBOOK\"\r\n                [isMenu]=\"isMenu\" (click)=\"onCardClick($event, content)\" [cardImg]=\"content?.cardImg\" (menuClick)=\"onCardMenuClick($event)\">\r\n            </sb-library-card>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"cards-container\" *ngIf=\"type === LibraryCardGridTypes.INFINITE_CARD_GRID_WITH_HOVER\">\r\n        <div class=\"item\" [ngClass]=\"maxCardCount ? 'show-' + maxCardCount: ''\"\r\n            *ngFor=\"let content of contentList; let index = index\">\r\n            <sb-library-card [indexToDisplay]=\"index\" [layoutConfig]=\"layoutConfig\" [content]=\"content\" [type]=\"LibraryCardTypes.DESKTOP_TEXTBOOK\"\r\n                (click)=\"onCardClick($event, content)\" [cardImg]=\"content?.cardImg\" [hover-template]=\"hoverTemplate\">\r\n\r\n                <ng-template #hoverTemplate let-hoverData=\"hoverData\">\r\n                    <sb-card-hover class=\"card-hover\" [hoverData]=\"hoverData\" [content]=\"content\"\r\n                        (hoverActionClick)=\"hoverActionClicked($event)\">\r\n                    </sb-card-hover>\r\n                </ng-template>\r\n            </sb-library-card>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<!--Loading Indicator for header-->\r\n<div class=\"layout-library\" *ngIf=\"isLoading\">\r\n<div class=\"header\" *ngIf=\"isLoading\">\r\n        <div class=\"loading-animation sb--card--highlighter\" style=\"width:100px;height:20px;\">\r\n                <i class=\"icon-svg icon-svg--sm\"></i>\r\n        </div>\r\n</div>\r\n<div class=\"cards-container\" *ngIf=\"maxCardCount > 0\">\r\n    <div class=\"item\" [ngClass]=\"maxCardCount ? 'show-' + maxCardCount: ''\"\r\n        *ngFor=\"let element of range(maxCardCount); let i=index\">\r\n        <sb-library-card [layoutConfig]=\"layoutConfig\" [isLoading]=\"isLoading\" [type]=\"LibraryCardTypes.DESKTOP_TEXTBOOK\">\r\n        </sb-library-card>\r\n    </div>    \r\n</div>\r\n<div class=\"cards-container\" *ngIf=\"maxCardCount <= 0\">\r\n    <div class=\"item\"\r\n        *ngFor=\"let number of [0,1,2]\">\r\n        <sb-library-card [layoutConfig]=\"layoutConfig\" [isLoading]=\"isLoading\" [type]=\"LibraryCardTypes.DESKTOP_TEXTBOOK\">\r\n        </sb-library-card>\r\n    </div>\r\n</div>\r\n\r\n</div>\r\n",
                    styles: [".loading-animation{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-fill-mode:forwards;animation-fill-mode:forwards;-webkit-animation-iteration-count:infinite;animation-iteration-count:infinite;-webkit-animation-name:placeload;animation-name:placeload;-webkit-animation-timing-function:linear;animation-timing-function:linear;background:var(--lazyload-bg);background:var(--grey-nuance-lighter);background:linear-gradient(to right,var(--grey-nuance-lighter) 8%,var(--grey-nuance-darker) 18%,var(--grey-nuance-lighter) 33%);background-size:75rem 6.5rem;position:relative}@-webkit-keyframes placeload{0%{background-position:-29.25rem 0}100%{background-position:29.25rem 0}}@keyframes placeload{0%{background-position:-29.25rem 0}100%{background-position:29.25rem 0}}.sb--card--highlighter{height:.75rem;width:100%;margin-top:.3125rem}:host .layout-library{display:flex;flex-direction:column}:host .header{display:flex;flex-direction:row;padding:0;align-items:center}[dir=ltr] :host .header,[dir=rtl] :host .header{margin:1.5rem 0 1rem}:host .header .title{font-family:inherit;text-overflow:ellipsis;overflow:hidden;flex:1;height:1.5rem;color:var(--primary-color);font-size:1.125rem;font-weight:700;text-transform:capitalize;line-height:1.625rem;display:flex;align-items:center}:host .header .title i{vertical-align:middle;height:1.0625rem;width:.875rem;top:0}[dir=ltr] :host .header .title i{margin-right:.5rem}[dir=rtl] :host .header .title i{margin-left:.5rem}:host .header .title .badge{display:inline-block;background:var(--rc-d4d3d3);color:var(--gray-800);text-align:center;padding:0 .75rem;border-radius:.25rem;height:1.5rem;line-height:1.5rem;font-size:1rem;font-weight:400}[dir=ltr] :host .header .title .badge{margin-left:.5rem}[dir=rtl] :host .header .title .badge{margin-right:.5rem}:host .cards-containers{display:-ms-grid;display:grid;grid-template-columns:repeat(auto-fill,minmax(292px,1fr));grid-gap:1rem;grid-row-gap:1.5rem}:host .cards-containers--show-1{grid-template-columns:repeat(auto-fill,minmax(calc(100% / 1.5),1fr))}:host .cards-containers--show-2{grid-template-columns:repeat(auto-fill,minmax(calc(100% / 2.5),1fr))}:host .cards-containers--show-3{grid-template-columns:repeat(auto-fill,minmax(calc(100% / 3.5),1fr))}:host .cards-containers--show-4{grid-template-columns:repeat(auto-fill,minmax(calc(100% / 4.5),1fr))}:host .cards-containers--show-5{grid-template-columns:repeat(auto-fill,minmax(calc(100% / 5.5),1fr))}:host .cards-container{display:flex;flex-direction:row;flex-wrap:wrap;margin:-1.5rem -.5rem 0}:host .cards-container .item{box-sizing:border-box;margin-top:1.5rem}[dir=ltr] :host .cards-container .item,[dir=rtl] :host .cards-container .item{padding:0 .5rem}@media (max-width:767px){:host .cards-container .item{margin-top:1rem}}:host .cards-container .item.show-1{max-width:100%}:host .cards-container .item.show-2{flex:0 0 50%;max-width:50%}:host .cards-container .item.show-3{flex:0 0 33.33%;max-width:33.33%}:host .cards-container .item.show-4{flex:0 0 25%;max-width:25%}:host .cards-container .item.show-5{flex:0 0 20%;max-width:20%}@media (max-width:991px){:host .cards-containers--show-3,:host .cards-containers--show-4,:host .cards-containers--show-5{grid-template-columns:repeat(auto-fill,minmax(calc(100% / 2.5),1fr))}:host .cards-container .item.show-2,:host .cards-container .item.show-3,:host .cards-container .item.show-4,:host .cards-container .item.show-5{flex:0 0 50%;max-width:50%}}@media (max-width:575px){:host .cards-containers--show-2,:host .cards-containers--show-3,:host .cards-containers--show-4,:host .cards-containers--show-5{grid-template-columns:repeat(auto-fill,minmax(calc(100% / 1.5),1fr))}:host .cards-container .item.show-2,:host .cards-container .item.show-3,:host .cards-container .item.show-4,:host .cards-container .item.show-5{flex:0 0 100%;max-width:100%}}@media (min-width:992px) and (max-width:1279px){:host .cards-containers--show-4,:host .cards-containers--show-5{grid-template-columns:repeat(auto-fill,minmax(calc(100% / 3.5),1fr))}:host .cards-container .item.show-4,:host .cards-container .item.show-5{flex:0 0 33.33%;max-width:33.33%}}"]
                }] }
    ];
    LibraryCardsGridComponent.propDecorators = {
        title: [{ type: Input }],
        contentList: [{ type: Input }],
        type: [{ type: Input }],
        hoverData: [{ type: Input }],
        layoutConfig: [{ type: Input }],
        maxCardCount: [{ type: Input }],
        viewMoreButtonText: [{ type: Input }],
        gridTemplate: [{ type: Input, args: ['hover-template',] }],
        isLoading: [{ type: Input }],
        isMenu: [{ type: Input }],
        viewMoreClick: [{ type: Output }],
        cardClick: [{ type: Output }],
        hoverActionClick: [{ type: Output }],
        menuClick: [{ type: Output }]
    };
    return LibraryCardsGridComponent;
}());

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/** @type {?} */
var courseSection = {
    "display": "{\"name\":{\"en\":\"Popular Courses\",\"hi\":\"????????\"}}",
    "alt": null,
    "count": 79,
    "description": null,
    "index": 1,
    "sectionDataType": "course",
    "imgUrl": null,
    "resmsgId": "1064f950-69c8-11ea-96e6-657c81907c67",
    "contents": [
        {
            "ownershipType": [
                "createdFor"
            ],
            "organisation": [
                "First Org"
            ],
            "language": [
                "English"
            ],
            "mimeType": "application/vnd.ekstep.content-collection",
            "objectType": "Content",
            "appIcon": "https://preprodall.blob.core.windows.net/ntp-content-preprod/content/do_21269930835533824013378/artifact/book-image_1549031773487.thumb.jpg",
            "contentType": "Course",
            "identifier": "do_21269930835533824013378",
            "visibility": "Default",
            "name": "15 Feb course",
            "status": "Live",
            "code": "org.sunbird.MwO5RC",
            "description": "Enter description for Course",
            "resourceType": "Course",
            "node_id": 749014
        }
    ],
    "searchQuery": "{\"request\":{\"filters\":{\"contentType\":[\"Course\"],\"objectType\":[\"Content\"],\"status\":[\"Live\"]},\"sort_by\":{\"name\":\"asc\"},\"limit\":10}}",
    "name": "Popular Courses",
    "id": "01228382243946496017",
    "dataSource": null,
    "apiId": "api.content.search",
    "group": 2
};

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/** @type {?} */
var myCourses = {
    "courses": [
        {
            "contentId": "do_21278859656586035211271",
            "active": true,
            "description": "This is a sample course which contains all content types",
            "courseLogoUrl": "https://ntpstagingall.blob.core.windows.net/ntp-content-staging/content/do_21278859656586035211271/artifact/1200x1023_1560751586952.thumb.jpg",
            "batchId": "01278861095539507215",
            "userId": "d156e1be-9d11-45e3-b6a2-6aa8b88a79bb",
            "content": {
                "identifier": "do_21278859656586035211271",
                "orgDetails": {
                    "orgName": "Odisha",
                    "email": "qa_ekstep@qualitrix.com"
                },
                "channel": "0124784842112040965",
                "name": "vk-allcontentcourse",
                "topic": [
                    "Teaching and Classroom Management"
                ],
                "contentType": "Course",
                "objectType": "Content"
            },
            "completionPercentage": 50,
            "courseName": "vk-allcontentcourse",
            "courseId": "do_21278859656586035211271",
            "status": 1
        }
    ]
};

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var CourseCardsHlistComponent = /** @class */ (function () {
    function CourseCardsHlistComponent() {
        /* Title for the grid */
        this.title = courseSection.name;
        /* Max card count to be shown */
        this.maxCardCount = 10;
        this.viewMoreButtonText = 'View More';
        /* Show Menu on each card */
        this.isMenu = false;
        this.viewMoreButtonPosition = ButtonPosition.TOP;
        this.viewMoreClick = new EventEmitter();
        this.cardClick = new EventEmitter();
        this.menuClick = new EventEmitter();
    }
    Object.defineProperty(CourseCardsHlistComponent.prototype, "ButtonPosition", {
        get: /**
         * @return {?}
         */
        function () { return ButtonPosition; },
        enumerable: true,
        configurable: true
    });
    /**
     * @return {?}
     */
    CourseCardsHlistComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        if (this.type != null) {
            if (this.type == CourseCardGridTypes.MY_COURSE_CARD_GRID ||
                this.type == CourseCardGridTypes.MY_COURSE_RECENTLY_VIEWED_CARD_GRID) {
                if (!(this.contentList != null)) {
                    this.contentList = myCourses.courses;
                }
            }
            else {
                if (!(this.contentList != null)) {
                    this.contentList = courseSection.contents;
                }
            }
        }
        else {
            this.type = CourseCardGridTypes.COURSE_CARD_GRID;
            if (!(this.contentList != null)) {
                this.contentList = courseSection.contents;
            }
        }
    };
    /**
     * @param {?} changes
     * @return {?}
     */
    CourseCardsHlistComponent.prototype.ngOnChanges = /**
     * @param {?} changes
     * @return {?}
     */
    function (changes) {
    };
    Object.defineProperty(CourseCardsHlistComponent.prototype, "CourseCardGridTypes", {
        get: /**
         * @return {?}
         */
        function () { return CourseCardGridTypes; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CourseCardsHlistComponent.prototype, "CourseCardTypes", {
        get: /**
         * @return {?}
         */
        function () { return CourseCardTypes; },
        enumerable: true,
        configurable: true
    });
    /**
     * Triggers event on `View More` Click
     * @param event HTML click event
     */
    /**
     * Triggers event on `View More` Click
     * @param {?} event HTML click event
     * @return {?}
     */
    CourseCardsHlistComponent.prototype.onViewMoreClick = /**
     * Triggers event on `View More` Click
     * @param {?} event HTML click event
     * @return {?}
     */
    function (event) {
        this.viewMoreClick.emit({ event: event, data: this.contentList });
    };
    /**
     * Triggers event on card click
     * @param event HTML Click event
     * @param data Content data for selected card
     */
    /**
     * Triggers event on card click
     * @param {?} event HTML Click event
     * @param {?} data Content data for selected card
     * @return {?}
     */
    CourseCardsHlistComponent.prototype.onCardClick = /**
     * Triggers event on card click
     * @param {?} event HTML Click event
     * @param {?} data Content data for selected card
     * @return {?}
     */
    function (event, data) {
        this.cardClick.emit({ event: event, data: data });
    };
    /**
     * @param {?} maxCardCounter
     * @return {?}
     */
    CourseCardsHlistComponent.prototype.range = /**
     * @param {?} maxCardCounter
     * @return {?}
     */
    function (maxCardCounter) {
        return new Array(maxCardCounter);
    };
    /**
     * @param {?} event
     * @return {?}
     */
    CourseCardsHlistComponent.prototype.onCardMenuClick = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        this.menuClick.emit(event);
    };
    CourseCardsHlistComponent.decorators = [
        { type: Component, args: [{
                    selector: 'sb-course-cards-hlist',
                    template: "<div class=\"layout-course\" *ngIf=\"!isLoading\">\r\n    <div class=\"header\">\r\n        <div class=\"title\">\r\n            {{title}}\r\n            <hr>\r\n        </div>\r\n        <button class=\"sb-btn sb-btn-normal sb-btn-outline-secondary sb-btn-white\"\r\n            *ngIf=\"contentList?.length > maxCardCount && viewMoreButtonPosition === ButtonPosition.TOP\"\r\n            (click)=\"onViewMoreClick($event)\">\r\n            {{viewMoreButtonText}}\r\n        </button>\r\n    </div>\r\n    <div class=\"sb--scrolling-wrapper-flexbox\" *ngIf=\"!multiRow\">\r\n      <div  *ngFor=\"let content of contentList | slice:0:(maxCardCount ? maxCardCount : contentList?.length); let index = index\" class=\"sb--card--container\">\r\n        <sb-course-card [course]=\"content\" (click)=\"onCardClick($event, content)\"  [cardImg]=\"content?.cardImg\" [section]=\"content?.info_to_display\" *ngIf=\"type === CourseCardGridTypes.COURSE_CARD_GRID\" [isMenu]=\"isMenu\"  (menuClick)=\"onCardMenuClick($event)\"></sb-course-card>\r\n        <sb-my-course-card [hideProgress]=\"hideProgress\" [course]=\"content\" (click)=\"onCardClick($event, content)\" [cardImg]=\"content?.cardImg\" [section]=\"content?.info_to_display\" *ngIf=\"type === CourseCardGridTypes.MY_COURSE_CARD_GRID\"></sb-my-course-card>\r\n        <sb-my-course-card [hideProgress]=\"hideProgress\" [course]=\"content\" (click)=\"onCardClick($event, content)\" [cardImg]=\"content?.cardImg\" [section]=\"content?.info_to_display\" [type]=\"CourseCardTypes.RECENTLY_VIEWED\" *ngIf=\"type === CourseCardGridTypes.MY_COURSE_RECENTLY_VIEWED_CARD_GRID\"></sb-my-course-card>\r\n        <sb-course-curiculum-card [cardData]=\"content\" [index]=\"index\" (click)=\"onCardClick($event, content)\" *ngIf=\"type === CourseCardGridTypes.CURICULUM_COURSE_CARD_GRID\"></sb-course-curiculum-card>\r\n      </div>\r\n      <div class=\"view-all\">\r\n        <button class=\"sb-btn sb-btn-normal sb-btn-outline-secondary sb-btn-white sb-btn-oval\" *ngIf=\"contentList?.length > maxCardCount && viewMoreButtonPosition === ButtonPosition.RIGHT\" (click)=\"onViewMoreClick($event)\">\r\n          {{viewMoreButtonText}}\r\n        </button>\r\n      </div>\r\n    </div>\r\n    <div class=\"sb--scrolling-wrapper-flexbox\" *ngIf=\"multiRow\">\r\n      <span *ngFor=\"let content of contentList | slice:0:(maxCardCount ? maxCardCount : contentList?.length); let index = index\">\r\n        <div *ngIf=\"index%2 == 0\"  class=\"sb--card--container\">\r\n            <sb-course-card class=\"sb--card--seperator\" *ngIf=\"contentList[index]!=null && type === CourseCardGridTypes.COURSE_CARD_GRID\" [course]=\"contentList[index]\" (click)=\"onCardClick($event, contentList[index])\"  [cardImg]=\"contentList[index]?.cardImg\" [section]=\"contentList[index]?.info_to_display\" [isMenu]=\"isMenu\"  (menuClick)=\"onCardMenuClick($event)\"></sb-course-card>\r\n            <sb-course-card class=\"sb--card--seperator\" *ngIf=\"index+1 < contentList.length && type === CourseCardGridTypes.COURSE_CARD_GRID\" [course]=\"contentList[index+1]\" (click)=\"onCardClick($event, contentList[index+1])\"  [cardImg]=\"contentList[index+1]?.cardImg\" [section]=\"contentList[index+1]?.info_to_display\"></sb-course-card>\r\n\r\n            <sb-my-course-card [hideProgress]=\"hideProgress\" class=\"sb--card--seperator\" *ngIf=\"contentList[index]!=null && type === CourseCardGridTypes.MY_COURSE_CARD_GRID\" [course]=\"contentList[index]\" (click)=\"onCardClick($event, contentList[index])\" [cardImg]=\"contentList[index]?.cardImg\" [section]=\"contentList[index]?.info_to_display\"></sb-my-course-card>\r\n            <sb-my-course-card [hideProgress]=\"hideProgress\" class=\"sb--card--seperator\" *ngIf=\"index+1 < contentList.length && type === CourseCardGridTypes.MY_COURSE_CARD_GRID\" [course]=\"contentList[index+1]\" (click)=\"onCardClick($event, contentList[index+1])\" [cardImg]=\"contentList[index+1]?.cardImg\" [section]=\"contentList[index+1]?.info_to_display\"></sb-my-course-card>\r\n            \r\n            <sb-my-course-card [hideProgress]=\"hideProgress\" class=\"sb--card--seperator\" *ngIf=\"contentList[index]!=null && type === CourseCardGridTypes.MY_COURSE_RECENTLY_VIEWED_CARD_GRID\" [course]=\"contentList[index]\" (click)=\"onCardClick($event, contentList[index])\" [cardImg]=\"contentList[index]?.cardImg\" [section]=\"contentList[index]?.info_to_display\" [type]=\"CourseCardTypes.RECENTLY_VIEWED\"></sb-my-course-card>\r\n            <sb-my-course-card [hideProgress]=\"hideProgress\" class=\"sb--card--seperator\" *ngIf=\"index+1 < contentList.length && type === CourseCardGridTypes.MY_COURSE_RECENTLY_VIEWED_CARD_GRID\" [course]=\"contentList[index+1]\" (click)=\"onCardClick($event, contentList[index+1])\" [cardImg]=\"contentList[index+1]?.cardImg\" [section]=\"contentList[index+1]?.info_to_display\" [type]=\"CourseCardTypes.RECENTLY_VIEWED\"></sb-my-course-card>\r\n        \r\n            <sb-course-curiculum-card class=\"sb--card--seperator\" [index]=\"index\" [cardData]=\"contentList[index]\" (click)=\"onCardClick($event, contentList[index])\" *ngIf=\"contentList[index]!=null && type === CourseCardGridTypes.CURICULUM_COURSE_CARD_GRID\"></sb-course-curiculum-card>\r\n            <sb-course-curiculum-card class=\"sb--card--seperator\" [index]=\"index+1\" [cardData]=\"contentList[index+1]\" (click)=\"onCardClick($event, contentList[index+1])\" *ngIf=\"index+1 < contentList.length && contentList[index+1]!=null && type === CourseCardGridTypes.CURICULUM_COURSE_CARD_GRID\"></sb-course-curiculum-card>\r\n       </div>\r\n      </span>\r\n      <div class=\"view-all\">\r\n        <button class=\"sb-btn sb-btn-normal sb-btn-outline-secondary sb-btn-white sb-btn-oval\" *ngIf=\"contentList?.length > maxCardCount && viewMoreButtonPosition === ButtonPosition.RIGHT\" (click)=\"onViewMoreClick($event)\">\r\n          {{viewMoreButtonText}}\r\n        </button>\r\n      </div>\r\n    </div>\r\n</div>\r\n<div class=\"layout-course\" *ngIf=\"isLoading\">\r\n    <div class=\"header\" style=\"width:120px;\">\r\n        <div class=\"title loading-animation sb--card--highlighter\">\r\n            \r\n        </div>\r\n    </div>\r\n    <div class=\"sb--scrolling-wrapper-flexbox\" *ngIf=\"maxCardCount > 0 && !multiRow\">\r\n        <div *ngFor=\"let content of range(maxCardCount); let i=index\" class=\"sb--card--container\">\r\n          <sb-course-card [isLoading]=\"isLoading\" *ngIf=\"type === CourseCardGridTypes.COURSE_CARD_GRID\"></sb-course-card>\r\n          <sb-my-course-card [hideProgress]=\"hideProgress\" [isLoading]=\"isLoading\" *ngIf=\"type === CourseCardGridTypes.MY_COURSE_CARD_GRID\"></sb-my-course-card>\r\n          <sb-my-course-card [hideProgress]=\"hideProgress\" [isLoading]=\"isLoading\" [type]=\"CourseCardTypes.RECENTLY_VIEWED\" *ngIf=\"type === CourseCardGridTypes.MY_COURSE_RECENTLY_VIEWED_CARD_GRID\"></sb-my-course-card>\r\n          <sb-course-curiculum-card [index]=\"i\" [isLoading]=\"isLoading\" *ngIf=\"type === CourseCardGridTypes.CURICULUM_COURSE_CARD_GRID\"></sb-course-curiculum-card>\r\n        </div>\r\n      </div>\r\n      <div class=\"sb--scrolling-wrapper-flexbox\" *ngIf=\"maxCardCount > 0 && multiRow\">\r\n          <div *ngFor=\"let content of range(maxCardCount); let i=index\" class=\"sb--card--container\">\r\n              <sb-course-card [isLoading]=\"isLoading\" *ngIf=\"type === CourseCardGridTypes.COURSE_CARD_GRID\"></sb-course-card>\r\n              <sb-course-card [isLoading]=\"isLoading\" *ngIf=\"type === CourseCardGridTypes.COURSE_CARD_GRID\"></sb-course-card>\r\n              <sb-my-course-card [hideProgress]=\"hideProgress\" [isLoading]=\"isLoading\" *ngIf=\"type === CourseCardGridTypes.MY_COURSE_CARD_GRID\"></sb-my-course-card>\r\n              <sb-my-course-card [hideProgress]=\"hideProgress\" [isLoading]=\"isLoading\" *ngIf=\"type === CourseCardGridTypes.MY_COURSE_CARD_GRID\"></sb-my-course-card>\r\n              <sb-my-course-card [hideProgress]=\"hideProgress\" [isLoading]=\"isLoading\" [type]=\"CourseCardTypes.RECENTLY_VIEWED\" *ngIf=\"type === CourseCardGridTypes.MY_COURSE_RECENTLY_VIEWED_CARD_GRID\"></sb-my-course-card>\r\n              <sb-my-course-card [hideProgress]=\"hideProgress\" [isLoading]=\"isLoading\" [type]=\"CourseCardTypes.RECENTLY_VIEWED\" *ngIf=\"type === CourseCardGridTypes.MY_COURSE_RECENTLY_VIEWED_CARD_GRID\"></sb-my-course-card>\r\n              <sb-course-curiculum-card [index]=\"i\" [isLoading]=\"isLoading\" *ngIf=\"type === CourseCardGridTypes.CURICULUM_COURSE_CARD_GRID\"></sb-course-curiculum-card>\r\n              <sb-course-curiculum-card [index]=\"i+1\" [isLoading]=\"isLoading\" *ngIf=\"type === CourseCardGridTypes.CURICULUM_COURSE_CARD_GRID\"></sb-course-curiculum-card>\r\n            </div>\r\n      </div>\r\n\r\n</div>",
                    styles: [".loading-animation{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-fill-mode:forwards;animation-fill-mode:forwards;-webkit-animation-iteration-count:infinite;animation-iteration-count:infinite;-webkit-animation-name:placeload;animation-name:placeload;-webkit-animation-timing-function:linear;animation-timing-function:linear;background:var(--lazyload-bg);background:var(--grey-nuance-lighter);background:linear-gradient(to right,var(--grey-nuance-lighter) 8%,var(--grey-nuance-darker) 18%,var(--grey-nuance-lighter) 33%);background-size:75rem 6.5rem;position:relative}@-webkit-keyframes placeload{0%{background-position:-29.25rem 0}100%{background-position:29.25rem 0}}@keyframes placeload{0%{background-position:-29.25rem 0}100%{background-position:29.25rem 0}}.sb--card--highlighter{height:.75rem;width:100%;margin-top:.3125rem}:host .layout-library{display:flex;flex-direction:column}:host .sb--scrolling-wrapper-flexbox{display:flex;flex-wrap:nowrap;overflow-x:auto;-webkit-overflow-scrolling:touch;padding-bottom:.5em}:host .sb--card--container{flex:0 0 auto;width:17.5rem;margin:0 .5rem 0 0}html[dir=rtl] :host .sb--card--container{margin-right:inherit;margin-left:1rem}:host .header{display:flex;flex-direction:row;padding:0;align-items:center}[dir=ltr] :host .header,[dir=rtl] :host .header{margin:.7rem 0 .5rem}:host .header .title{font-family:inherit;text-overflow:ellipsis;overflow:hidden;flex:1;height:1.5rem;color:var(--secondary-color);font-size:1.125rem;font-weight:700;text-transform:capitalize;line-height:1.625rem;display:flex;align-items:center}:host .header .title hr{flex:1;margin-left:1rem;display:none}:host .sb-btn-oval{border-radius:50%;padding:0;height:80%;top:10%}"]
                }] }
    ];
    /** @nocollapse */
    CourseCardsHlistComponent.ctorParameters = function () { return []; };
    CourseCardsHlistComponent.propDecorators = {
        title: [{ type: Input }],
        contentList: [{ type: Input }],
        maxCardCount: [{ type: Input }],
        viewMoreButtonText: [{ type: Input }],
        isLoading: [{ type: Input }],
        type: [{ type: Input }],
        multiRow: [{ type: Input }],
        hideProgress: [{ type: Input }],
        isMenu: [{ type: Input }],
        viewMoreButtonPosition: [{ type: Input }],
        viewMoreClick: [{ type: Output }],
        cardClick: [{ type: Output }],
        menuClick: [{ type: Output }]
    };
    return CourseCardsHlistComponent;
}());

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var MemberListComponent = /** @class */ (function () {
    function MemberListComponent() {
        this.isMenu = false;
        this.layoutConfig = { size: 'medium', isBold: false, isSelectable: true, view: "vertical" };
        this.menuClick = new EventEmitter();
        this.cardClick = new EventEmitter();
    }
    /**
     * @return {?}
     */
    MemberListComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
    };
    /**
     * @param {?} event
     * @param {?} data
     * @return {?}
     */
    MemberListComponent.prototype.onCardClick = /**
     * @param {?} event
     * @param {?} data
     * @return {?}
     */
    function (event, data) {
        this.cardClick.emit({ event: event, data: { data: data } });
    };
    /**
     * @param {?} event
     * @param {?} data
     * @return {?}
     */
    MemberListComponent.prototype.onMenuClick = /**
     * @param {?} event
     * @param {?} data
     * @return {?}
     */
    function (event, data) {
        this.menuClick.emit({ event: event, data: { data: data } });
    };
    MemberListComponent.decorators = [
        { type: Component, args: [{
                    selector: 'sb-member-list',
                    template: "<div class=\"members-list\" *ngIf=\"layoutConfig.view == 'horizontal'\">\r\n  <span *ngFor=\"let member of memberList;let index = index\">\r\n      <sb-member-card [title]=\"member.title\" [initial]=\"member.initial\" [isAdmin]=\"member.isAdmin\" \r\n      [isMenu]=\"isMenu\" [progressDisplay]=\"member.progressDisplay\" [selected]=\"member.selected\" [cardImg]=\"cardImg\" [config]=\"layoutConfig\" [identifier]=\"member.id\" [indexOfMember]=\"index\" (cardClick)=\"onCardClick($event, member)\" (menuClick)=\"onMenuClick($event, member)\">\r\n      </sb-member-card>\r\n  </span>\r\n</div>\r\n<div class=\"members-inline\" *ngIf=\"layoutConfig.view == 'vertical'\">\r\n    <span *ngFor=\"let member of memberList;let index = index\">\r\n      <sb-member-card [title]=\"member.title\" [initial]=\"member.initial\" [isAdmin]=\"member.isAdmin\" \r\n        [isMenu]=\"isMenu\" [progressDisplay]=\"member.progressDisplay\" [cardImg]=\"cardImg\" [config]=\"layoutConfig\" [identifier]=\"member.id\" [indexOfMember]=\"index\" (cardClick)=\"onCardClick($event, member)\" (menuClick)=\"onMenuClick($event, member)\">\r\n      </sb-member-card>\r\n    </span>\r\n</div>\r\n",
                    styles: [".members-list{width:100%;background-color:var(--white)}.members-inline{display:flex;flex-wrap:wrap}"]
                }] }
    ];
    /** @nocollapse */
    MemberListComponent.ctorParameters = function () { return []; };
    MemberListComponent.propDecorators = {
        memberList: [{ type: Input }],
        isMenu: [{ type: Input }],
        cardImg: [{ type: Input }],
        layoutConfig: [{ type: Input }],
        menuClick: [{ type: Output }],
        cardClick: [{ type: Output }]
    };
    return MemberListComponent;
}());

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var CardsGridComponent = /** @class */ (function () {
    function CardsGridComponent() {
        /* Title for the grid */
        this.title = defaultLibraryCardsGrid.title;
        this.contentList = defaultLibraryCardsGrid.contentList;
        this.hoverData = [];
        this.cardType = "textbook";
        /* Max card count to be shown */
        this.maxCardCount = defaultLibraryCardsGrid.maxCardCount;
        this.viewMoreButtonText = defaultLibraryCardsGrid.viewMoreButtonText;
        this.isMenu = false;
        this.viewMoreClick = new EventEmitter();
        this.menuClick = new EventEmitter();
        this.cardClick = new EventEmitter();
        this.hoverActionClick = new EventEmitter();
    }
    Object.defineProperty(CardsGridComponent.prototype, "LibraryCardTypes", {
        get: /**
         * @return {?}
         */
        function () { return LibraryCardTypes; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CardsGridComponent.prototype, "CardGridTypes", {
        get: /**
         * @return {?}
         */
        function () { return CardGridTypes; },
        enumerable: true,
        configurable: true
    });
    /**
     * Triggers event on `View More` Click
     * @param event HTML click event
     */
    /**
     * Triggers event on `View More` Click
     * @param {?} event HTML click event
     * @return {?}
     */
    CardsGridComponent.prototype.onViewMoreClick = /**
     * Triggers event on `View More` Click
     * @param {?} event HTML click event
     * @return {?}
     */
    function (event) {
        this.viewMoreClick.emit({ event: event, data: this.contentList });
    };
    /**
     * Triggers event on card click
     * @param event HTML Click event
     * @param data Content data for selected card
     */
    /**
     * Triggers event on card click
     * @param {?} event HTML Click event
     * @param {?} data Content data for selected card
     * @return {?}
     */
    CardsGridComponent.prototype.onCardClick = /**
     * Triggers event on card click
     * @param {?} event HTML Click event
     * @param {?} data Content data for selected card
     * @return {?}
     */
    function (event, data) {
        this.cardClick.emit({ event: event, data: data });
    };
    /**
     * @param {?} event
     * @param {?} data
     * @return {?}
     */
    CardsGridComponent.prototype.onMenuClick = /**
     * @param {?} event
     * @param {?} data
     * @return {?}
     */
    function (event, data) {
        this.menuClick.emit({ event: event, data: data });
    };
    /**
     * @param {?} event
     * @return {?}
     */
    CardsGridComponent.prototype.hoverActionClicked = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        this.hoverActionClick.emit(event);
    };
    /**
     * @param {?} maxCardCounter
     * @return {?}
     */
    CardsGridComponent.prototype.range = /**
     * @param {?} maxCardCounter
     * @return {?}
     */
    function (maxCardCounter) {
        return new Array(maxCardCounter);
    };
    CardsGridComponent.decorators = [
        { type: Component, args: [{
                    selector: 'sb-cards-grid',
                    template: "<div class=\"layout-library\" *ngIf=\"!isLoading\">\r\n    <div class=\"header\">\r\n        <div class=\"title\">\r\n            <i class=\"icon-svg icon-svg--sm\">\r\n                <svg class=\"icon\">\r\n                    <use xlink:href=\"assets/common-consumption/images/sprite.svg#book\"></use>\r\n                </svg>\r\n            </i>\r\n            {{title}}\r\n            <span class=\"badge\">{{contentList?.length}}</span>\r\n        </div>\r\n        <button class=\"sb-btn sb-btn-normal sb-btn-outline-secondary sb-btn-white\"\r\n            *ngIf=\"(type !== CardGridTypes.INFINITE_CARD_GRID) && maxCardCount && contentList?.length >maxCardCount\"\r\n            (click)=\"onViewMoreClick($event)\">\r\n            {{viewMoreButtonText}}\r\n        </button>\r\n    </div>\r\n\r\n\r\n    <div class=\"cards-container\"\r\n        *ngIf=\"type !== CardGridTypes.INFINITE_CARD_GRID\">\r\n        <div class=\"item\" [ngClass]=\"maxCardCount ? 'show-' + maxCardCount: ''\"\r\n            *ngFor=\"let content of contentList | slice:0:(maxCardCount ? maxCardCount : contentList?.length);let i=index\">\r\n            <sb-library-card [indexToDisplay]=\"i\" [layoutConfig]=\"layoutConfig\" *ngIf=\"cardType === 'textbook'\" (menuClick)=\"onMenuClick($event, content)\" [isMenu]=\"isMenu\" [content]=\"content\" [type]=\"LibraryCardTypes.DESKTOP_TEXTBOOK\"\r\n                (click)=\"onCardClick($event, content)\" [cardImg]=\"content?.cardImg\">\r\n            </sb-library-card>\r\n            <sb-course-card [course]=\"content\" (menuClick)=\"onMenuClick($event, content)\" [isMenu]=\"isMenu\" (click)=\"onCardClick($event, content)\"  \r\n            [cardImg]=\"content?.cardImg\" [section]=\"content?.info_to_display\" \r\n            *ngIf=\"cardType === 'course'\"></sb-course-card>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"cards-container\" *ngIf=\"type === CardGridTypes.INFINITE_CARD_GRID\">\r\n        <div class=\"item\" [ngClass]=\"maxCardCount ? 'show-' + maxCardCount: ''\" *ngFor=\"let content of contentList;let i=index\">\r\n            <sb-library-card [indexToDisplay]=\"i\" [layoutConfig]=\"layoutConfig\" *ngIf=\"cardType === 'textbook'\" [isMenu]=\"isMenu\" [content]=\"content\" [type]=\"LibraryCardTypes.DESKTOP_TEXTBOOK\"\r\n                (click)=\"onCardClick($event, content)\" (menuClick)=\"onMenuClick($event, content)\" [cardImg]=\"content?.cardImg\">\r\n            </sb-library-card>\r\n            <sb-course-card [isMenu]=\"isMenu\" [course]=\"content\" (click)=\"onCardClick($event, content)\"  \r\n            [cardImg]=\"content?.cardImg\" (menuClick)=\"onMenuClick($event, content)\" [section]=\"content?.info_to_display\" \r\n            *ngIf=\"cardType === 'course'\"></sb-course-card>\r\n        </div>\r\n    </div>\r\n\r\n</div>\r\n\r\n<!--Loading Indicator for header-->\r\n<div class=\"layout-library\" *ngIf=\"isLoading\">\r\n<div class=\"header\" *ngIf=\"isLoading\">\r\n        <div class=\"loading-animation sb--card--highlighter\" style=\"width:100px;height:20px;\">\r\n                <i class=\"icon-svg icon-svg--sm\"></i>\r\n        </div>\r\n</div>\r\n<div class=\"cards-container\" *ngIf=\"maxCardCount > 0\">\r\n    <div class=\"item\" [ngClass]=\"maxCardCount ? 'show-' + maxCardCount: ''\"\r\n        *ngFor=\"let element of range(maxCardCount); let i=index\">\r\n        <sb-library-card [indexToDisplay]=\"i\" [layoutConfig]=\"layoutConfig\" [isLoading]=\"isLoading\" [type]=\"LibraryCardTypes.DESKTOP_TEXTBOOK\">\r\n        </sb-library-card>\r\n    </div>    \r\n</div>\r\n<div class=\"cards-container\" *ngIf=\"maxCardCount <= 0\">\r\n    <div class=\"item\"\r\n        *ngFor=\"let number of [0,1,2]\">\r\n        <sb-library-card [indexToDisplay]=\"number\" [isLoading]=\"isLoading\" [type]=\"LibraryCardTypes.DESKTOP_TEXTBOOK\">\r\n        </sb-library-card>\r\n    </div>\r\n</div>\r\n\r\n</div>\r\n",
                    styles: ["", ".loading-animation{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-fill-mode:forwards;animation-fill-mode:forwards;-webkit-animation-iteration-count:infinite;animation-iteration-count:infinite;-webkit-animation-name:placeload;animation-name:placeload;-webkit-animation-timing-function:linear;animation-timing-function:linear;background:var(--lazyload-bg);background:var(--grey-nuance-lighter);background:linear-gradient(to right,var(--grey-nuance-lighter) 8%,var(--grey-nuance-darker) 18%,var(--grey-nuance-lighter) 33%);background-size:75rem 6.5rem;position:relative}@-webkit-keyframes placeload{0%{background-position:-29.25rem 0}100%{background-position:29.25rem 0}}@keyframes placeload{0%{background-position:-29.25rem 0}100%{background-position:29.25rem 0}}.sb--card--highlighter{height:.75rem;width:100%;margin-top:.3125rem}:host .layout-library{display:flex;flex-direction:column}:host .header{display:flex;flex-direction:row;padding:0;align-items:center}[dir=ltr] :host .header,[dir=rtl] :host .header{margin:1.5rem 0 1rem}:host .header .title{font-family:inherit;text-overflow:ellipsis;overflow:hidden;flex:1;height:1.5rem;color:var(--primary-color);font-size:1.125rem;font-weight:700;text-transform:capitalize;line-height:1.625rem;display:flex;align-items:center}:host .header .title i{vertical-align:middle;height:1.0625rem;width:.875rem;top:0}[dir=ltr] :host .header .title i{margin-right:.5rem}[dir=rtl] :host .header .title i{margin-left:.5rem}:host .header .title .badge{display:inline-block;background:var(--rc-d4d3d3);color:var(--gray-800);text-align:center;padding:0 .75rem;border-radius:.25rem;height:1.5rem;line-height:1.5rem;font-size:1rem;font-weight:400}[dir=ltr] :host .header .title .badge{margin-left:.5rem}[dir=rtl] :host .header .title .badge{margin-right:.5rem}:host .cards-containers{display:-ms-grid;display:grid;grid-template-columns:repeat(auto-fill,minmax(292px,1fr));grid-gap:1rem;grid-row-gap:1.5rem}:host .cards-containers--show-1{grid-template-columns:repeat(auto-fill,minmax(calc(100% / 1.5),1fr))}:host .cards-containers--show-2{grid-template-columns:repeat(auto-fill,minmax(calc(100% / 2.5),1fr))}:host .cards-containers--show-3{grid-template-columns:repeat(auto-fill,minmax(calc(100% / 3.5),1fr))}:host .cards-containers--show-4{grid-template-columns:repeat(auto-fill,minmax(calc(100% / 4.5),1fr))}:host .cards-containers--show-5{grid-template-columns:repeat(auto-fill,minmax(calc(100% / 5.5),1fr))}:host .cards-container{display:flex;flex-direction:row;flex-wrap:wrap;margin:-1.5rem -.5rem 0}:host .cards-container .item{box-sizing:border-box;margin-top:1.5rem}[dir=ltr] :host .cards-container .item,[dir=rtl] :host .cards-container .item{padding:0 .5rem}@media (max-width:767px){:host .cards-container .item{margin-top:1rem}}:host .cards-container .item.show-1{max-width:100%}:host .cards-container .item.show-2{flex:0 0 50%;max-width:50%}:host .cards-container .item.show-3{flex:0 0 33.33%;max-width:33.33%}:host .cards-container .item.show-4{flex:0 0 25%;max-width:25%}:host .cards-container .item.show-5{flex:0 0 20%;max-width:20%}@media (max-width:991px){:host .cards-containers--show-3,:host .cards-containers--show-4,:host .cards-containers--show-5{grid-template-columns:repeat(auto-fill,minmax(calc(100% / 2.5),1fr))}:host .cards-container .item.show-2,:host .cards-container .item.show-3,:host .cards-container .item.show-4,:host .cards-container .item.show-5{flex:0 0 50%;max-width:50%}}@media (max-width:575px){:host .cards-containers--show-2,:host .cards-containers--show-3,:host .cards-containers--show-4,:host .cards-containers--show-5{grid-template-columns:repeat(auto-fill,minmax(calc(100% / 1.5),1fr))}:host .cards-container .item.show-2,:host .cards-container .item.show-3,:host .cards-container .item.show-4,:host .cards-container .item.show-5{flex:0 0 100%;max-width:100%}}@media (min-width:992px) and (max-width:1279px){:host .cards-containers--show-4,:host .cards-containers--show-5{grid-template-columns:repeat(auto-fill,minmax(calc(100% / 3.5),1fr))}:host .cards-container .item.show-4,:host .cards-container .item.show-5{flex:0 0 33.33%;max-width:33.33%}}"]
                }] }
    ];
    CardsGridComponent.propDecorators = {
        title: [{ type: Input }],
        contentList: [{ type: Input }],
        type: [{ type: Input }],
        hoverData: [{ type: Input }],
        cardType: [{ type: Input }],
        layoutConfig: [{ type: Input }],
        maxCardCount: [{ type: Input }],
        viewMoreButtonText: [{ type: Input }],
        gridTemplate: [{ type: Input, args: ['hover-template',] }],
        isLoading: [{ type: Input }],
        isMenu: [{ type: Input }],
        viewMoreClick: [{ type: Output }],
        menuClick: [{ type: Output }],
        cardClick: [{ type: Output }],
        hoverActionClick: [{ type: Output }]
    };
    return CardsGridComponent;
}());

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/** @type {?} */
var notificationViewConfig = {
    title: 'Notification',
    subTitle: 'New Notification (s)',
    clearText: 'Clear',
    moreText: 'See more',
    lessText: 'See less',
    minNotificationViewCount: 5
};

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var InAppNotificationComponent = /** @class */ (function () {
    function InAppNotificationComponent() {
        this.notificationList = [];
        this.inAppNotificationConfig = notificationViewConfig;
        this.notificationClick = new EventEmitter();
        this.deleteNotificationClick = new EventEmitter();
        this.clearAllClick = new EventEmitter();
        this.showMore = new EventEmitter();
        this.showLess = new EventEmitter();
    }
    /**
     * @return {?}
     */
    InAppNotificationComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        this.displayItemCount = this.inAppNotificationConfig.minNotificationViewCount;
        console.log(this.notificationList);
    };
    /**
     * @param {?} event
     * @return {?}
     */
    InAppNotificationComponent.prototype.notificationClickHandler = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        console.log(this.notificationList);
        this.notificationClick.emit(event);
    };
    /**
     * @param {?} event
     * @return {?}
     */
    InAppNotificationComponent.prototype.deleteNotificationHandler = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        this.deleteNotificationClick.emit(event);
    };
    /**
     * @param {?} event
     * @return {?}
     */
    InAppNotificationComponent.prototype.clearAllNotifications = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        /** @type {?} */
        var eventData = {
            event: event,
            data: this.notificationList
        };
        this.clearAllClick.emit(eventData);
    };
    /**
     * @return {?}
     */
    InAppNotificationComponent.prototype.onShowMore = /**
     * @return {?}
     */
    function () {
        this.showMore.emit(true);
        if (this.notificationList.length) {
            this.displayItemCount = this.notificationList.length;
        }
    };
    /**
     * @return {?}
     */
    InAppNotificationComponent.prototype.onShowLess = /**
     * @return {?}
     */
    function () {
        this.showLess.emit(true);
        this.displayItemCount = this.inAppNotificationConfig.minNotificationViewCount;
    };
    InAppNotificationComponent.decorators = [
        { type: Component, args: [{
                    selector: 'sb-in-app-notification',
                    template: "<div class=\"sb-notification-container\">\r\n  <div class=\"sb-notification-header\">\r\n    <div class=\"title\" *ngIf=\"inAppNotificationConfig?.title\">{{inAppNotificationConfig?.title}}</div>\r\n    <div class=\"sub-title\" *ngIf=\"inAppNotificationConfig?.subTitle\">{{inAppNotificationConfig?.subTitle}}</div>\r\n  </div>\r\n  <div class=\"clear-text\" *ngIf=\"inAppNotificationConfig.clearText\">\r\n    <a (click)=\"clearAllNotifications($event)\">{{inAppNotificationConfig.clearText}}</a>\r\n  </div>\r\n  <div class=\"sb-notification-list-items\">\r\n    <div *ngFor=\"let notification of notificationList | slice:0:displayItemCount; let i=index\" >\r\n      <sb-notification-card [notification]=\"notification\" (notificationClick)=\"notificationClickHandler($event)\"\r\n      (deleteNotificationClick)=\"deleteNotificationHandler($event)\"></sb-notification-card>\r\n    </div>\r\n  </div>\r\n  <ng-container *ngIf=\"inAppNotificationConfig?.minNotificationViewCount < this.notificationList?.length\">\r\n    <div class=\"text-center more-text mt-16\" *ngIf=\"displayItemCount < this.notificationList?.length\">\r\n      <a (click)=\"onShowMore()\">{{inAppNotificationConfig?.moreText}}</a>\r\n    </div>\r\n    <div class=\"text-center more-text mt-16\" *ngIf=\"displayItemCount === this.notificationList?.length\">\r\n      <a (click)=\"onShowLess()\">{{inAppNotificationConfig?.lessText}}</a>\r\n    </div>\r\n  </ng-container>\r\n</div>",
                    styles: [":host .sb-notification-container .sb-notification-header{color:var(--gray)}:host .sb-notification-container .sb-notification-header .title{font-size:1rem;font-weight:700;margin-bottom:.25rem}:host .sb-notification-container .sb-notification-header .sub-title{font-size:.75rem;margin-bottom:1rem}:host .sb-notification-container .sb-notification-list-items{max-height:calc(100vh - 275px);overflow-y:auto}:host .sb-notification-container .clear-text a{color:var(--danger-color);font-size:.875rem;position:absolute;right:1.5rem;top:1.5rem;text-decoration:none}html[dir=rtl] :host .sb-notification-container .clear-text a{right:auto;left:1.5rem}:host .sb-notification-container .more-text a{font-size:.75rem;font-weight:700;cursor:pointer;color:var(--primary-400)}"]
                }] }
    ];
    /** @nocollapse */
    InAppNotificationComponent.ctorParameters = function () { return []; };
    InAppNotificationComponent.propDecorators = {
        notificationList: [{ type: Input }],
        inAppNotificationConfig: [{ type: Input }],
        notificationClick: [{ type: Output }],
        deleteNotificationClick: [{ type: Output }],
        clearAllClick: [{ type: Output }],
        showMore: [{ type: Output }],
        showLess: [{ type: Output }]
    };
    return InAppNotificationComponent;
}());

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/** @type {?} */
var staticContent$1 = [{
        "identifier": "do_213075286045111111111",
        "orgDetails": {
            "orgName": "Odisha",
            "email": "qa_ekstep@qualitrix.com"
        },
        "subject": [
            "Physics"
        ],
        "channel": "0124784842112040965",
        "organisation": [
            "Odisha"
        ],
        "mimeType": "application/vnd.ekstep.content-collection",
        "medium": [
            "English"
        ],
        "pkgVersion": 1,
        "objectType": "Content",
        "appIcon": "https://ntpstagingall.blob.core.windows.net/ntp-content-staging/content/do_2127645021030563841271/artifact/download_1557833776003.thumb.jpg",
        "gradeLevel": "Class 6, Class 7",
        "name": "vk-3.0Course3007",
        "contentType": "Course",
        "board": "CBSE",
        "resourceType": "Course",
        "cardImg": "cardImg",
        "contentData": {
            "cardImg": "cardImg"
        },
        "isAvailableLocally": false
    }, {
        "identifier": "do_2130752860453222222222",
        "orgDetails": {
            "orgName": "Odisha",
            "email": "qa_ekstep@qualitrix.com"
        },
        "subject": [
            "Physics"
        ],
        "channel": "0124784842112040965",
        "organisation": [
            "Odisha"
        ],
        "mimeType": "application/vnd.ekstep.content-collection",
        "medium": [
            "English"
        ],
        "pkgVersion": 1,
        "objectType": "Content",
        "appIcon": "https://ntpstagingall.blob.core.windows.net/ntp-content-staging/content/do_2127645021030563841271/artifact/download_1557833776003.thumb.jpg",
        "gradeLevel": "Class 6, Class 7",
        "name": "vk-3.0Course3007",
        "contentType": "Course",
        "board": "CBSE",
        "resourceType": "Course",
        "cardImg": "cardImg",
        "contentData": {
            "cardImg": "cardImg"
        },
        "isAvailableLocally": true
    }];

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var LibraryCardsHlistComponent = /** @class */ (function () {
    function LibraryCardsHlistComponent() {
        this.contentList = staticContent$1;
        this.viewMoreButtonText = defaultLibraryCardsGrid.viewMoreButtonText;
        this.maxCardCount = 10;
        this.isLoading = true;
        this.isMenu = false;
        this.isMobile = false;
        this.isOffline = false;
        this.type = LibraryCardTypes.DESKTOP_TEXTBOOK;
        this.moreInfoLabel = 'Medium';
        this.section = '';
        this.btnlabel = '';
        this.btnicon = '';
        this.isSelected = false;
        this.viewMoreButtonPosition = ButtonPosition.TOP;
        this.viewMoreClick = new EventEmitter();
        this.cardClick = new EventEmitter();
        this.menuClick = new EventEmitter();
    }
    Object.defineProperty(LibraryCardsHlistComponent.prototype, "LibraryCardTypes", {
        get: /**
         * @return {?}
         */
        function () { return LibraryCardTypes; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(LibraryCardsHlistComponent.prototype, "ButtonPosition", {
        get: /**
         * @return {?}
         */
        function () { return ButtonPosition; },
        enumerable: true,
        configurable: true
    });
    /**
     * @param {?} event
     * @return {?}
     */
    LibraryCardsHlistComponent.prototype.onViewMoreClick = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        this.viewMoreClick.emit(event);
    };
    /**
     * @param {?} event
     * @param {?} index
     * @return {?}
     */
    LibraryCardsHlistComponent.prototype.onCardClick = /**
     * @param {?} event
     * @param {?} index
     * @return {?}
     */
    function (event, index) {
        this.cardClick.emit({ 'data': event.data, 'index': index });
    };
    /**
     * @param {?} event
     * @return {?}
     */
    LibraryCardsHlistComponent.prototype.onMenuClick = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        this.menuClick.emit(event);
    };
    /**
     * @param {?} maxCardCounter
     * @return {?}
     */
    LibraryCardsHlistComponent.prototype.range = /**
     * @param {?} maxCardCounter
     * @return {?}
     */
    function (maxCardCounter) {
        return new Array(maxCardCounter);
    };
    LibraryCardsHlistComponent.decorators = [
        { type: Component, args: [{
                    selector: 'sb-library-cards-hlist',
                    template: "<div class=\"layout-course\" *ngIf=\"!isLoading\">\r\n    <div class=\"header\">\r\n        <div class=\"title\"> {{title}} <hr> </div>\r\n        <button class=\"sb-btn sb-btn-normal sb-btn-outline-secondary sb-btn-white\" *ngIf=\"contentList?.length > maxCardCount && viewMoreButtonPosition === ButtonPosition.TOP\" (click)=\"onViewMoreClick($event)\">\r\n            {{viewMoreButtonText}}\r\n        </button>\r\n    </div>\r\n\r\n    <div class=\"sb--scrolling-wrapper-flexbox\" *ngIf=\"!multiRow\">\r\n        <div *ngFor=\"let content of contentList | slice:0:(maxCardCount ? maxCardCount : contentList?.length); let index = index\" class=\"sb--card--container\">\r\n            <sb-library-card [indexToDisplay]=\"index\" [layoutConfig]=\"layoutConfig\" [content]=\"content\" [type]=\"type\" [isMobile]=\"isMobile\" [isOffline]=\"(isOffline && !content.isAvailableLocally)\" [moreInfoLabel]=\"moreInfoLabel\" [section]=\"section\" [btnlabel]=\"btnlabel\" [btnicon]=\"btnicon\" [isMenu]=\"isMenu\" [isSelected]=\"isSelected\" (cardClick)=\"onCardClick($event, index)\" (menuClick)=\"onMenuClick($event)\" [cardImg]=\"content?.cardImg || content?.contentData?.cardImg\"></sb-library-card>\r\n        </div>\r\n        <div class=\"view-all\">\r\n            <button class=\"sb-btn sb-btn-normal sb-btn-outline-secondary sb-btn-white sb-btn-oval\" *ngIf=\"contentList?.length > maxCardCount && viewMoreButtonPosition === ButtonPosition.RIGHT\" (click)=\"onViewMoreClick($event)\">\r\n                {{viewMoreButtonText}}\r\n            </button>\r\n        </div>\r\n    </div>\r\n    \r\n    <div class=\"sb--scrolling-wrapper-flexbox\" *ngIf=\"multiRow\">\r\n        <span *ngFor=\"let content of contentList | slice:0:(maxCardCount ? maxCardCount : contentList?.length); let index = index\">\r\n            <div *ngIf=\"index%2 == 0\" class=\"sb--card--container\">\r\n                <sb-library-card class=\"sb--card--seperator\" *ngIf=\"contentList[index]!=null\" [indexToDisplay]=\"index\" [layoutConfig]=\"layoutConfig\" [content]=\"contentList[index]\" [type]=\"type\" [isMobile]=\"isMobile\" [isOffline]=\"isOffline && !content.isAvailableLocally\" [moreInfoLabel]=\"moreInfoLabel\" [section]=\"section\" [btnlabel]=\"btnlabel\" [btnicon]=\"btnicon\" [isMenu]=\"isMenu\" [isSelected]=\"isSelected\" (cardClick)=\"onCardClick($event, index)\" (menuClick)=\"onMenuClick($event)\" [cardImg]=\"contentList[index]?.cardImg || contentList[index]?.contentData?.cardImg\"></sb-library-card>\r\n                <sb-library-card class=\"sb--card--seperator\" *ngIf=\"index+1 < contentList.length\" [indexToDisplay]=\"index+1\" [layoutConfig]=\"layoutConfig\" [content]=\"contentList[index+1]\" [type]=\"type\" [isMobile]=\"isMobile\" [isOffline]=\"isOffline && !content.isAvailableLocally\" [moreInfoLabel]=\"moreInfoLabel\" [section]=\"section\" [btnlabel]=\"btnlabel\" [btnicon]=\"btnicon\" [isMenu]=\"isMenu\" [isSelected]=\"isSelected\" (cardClick)=\"onCardClick($event, index+1)\" (menuClick)=\"onMenuClick($event)\" [cardImg]=\"contentList[index+1]?.cardImg || contentList[index+1]?.contentData?.cardImg\"></sb-library-card>\r\n            </div>\r\n        </span>\r\n        <div class=\"view-all\">\r\n            <button class=\"sb-btn sb-btn-normal sb-btn-outline-secondary sb-btn-white sb-btn-oval\" *ngIf=\"contentList?.length > maxCardCount && viewMoreButtonPosition === ButtonPosition.RIGHT\" (click)=\"onViewMoreClick($event)\">\r\n                {{viewMoreButtonText}}\r\n            </button>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"layout-course\" *ngIf=\"isLoading\">\r\n    <div class=\"header\" style=\"width:120px;\">\r\n        <div class=\"title loading-animation sb--card--highlighter\"></div>\r\n    </div>\r\n\r\n    <div class=\"sb--scrolling-wrapper-flexbox\" *ngIf=\"maxCardCount > 0 && !multiRow\">\r\n        <div *ngFor=\"let content of range(maxCardCount); let index=index\" class=\"sb--card--container\">\r\n            <sb-library-card [indexToDisplay]=\"index\" [isLoading]=\"isLoading\" [type]=\"type\"></sb-library-card>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"sb--scrolling-wrapper-flexbox\" *ngIf=\"maxCardCount > 0 && multiRow\">\r\n        <div *ngFor=\"let content of range(maxCardCount); let index=index\" class=\"sb--card--container\">\r\n            <sb-library-card [indexToDisplay]=\"index\" [isLoading]=\"isLoading\" [type]=\"type\"></sb-library-card>\r\n            <sb-library-card [indexToDisplay]=\"index\" [isLoading]=\"isLoading\" [type]=\"type\"></sb-library-card>\r\n        </div>\r\n    </div>\r\n\r\n</div>\r\n",
                    styles: [".loading-animation{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-fill-mode:forwards;animation-fill-mode:forwards;-webkit-animation-iteration-count:infinite;animation-iteration-count:infinite;-webkit-animation-name:placeload;animation-name:placeload;-webkit-animation-timing-function:linear;animation-timing-function:linear;background:var(--lazyload-bg);background:var(--grey-nuance-lighter);background:linear-gradient(to right,var(--grey-nuance-lighter) 8%,var(--grey-nuance-darker) 18%,var(--grey-nuance-lighter) 33%);background-size:75rem 6.5rem;position:relative}@-webkit-keyframes placeload{0%{background-position:-29.25rem 0}100%{background-position:29.25rem 0}}@keyframes placeload{0%{background-position:-29.25rem 0}100%{background-position:29.25rem 0}}.sb--card--highlighter{height:.75rem;width:100%;margin-top:.3125rem}:host .layout-library{display:flex;flex-direction:column}:host .sb--scrolling-wrapper-flexbox{display:flex;flex-wrap:nowrap;overflow-x:auto;-webkit-overflow-scrolling:touch;padding-bottom:.5em}:host .sb--card--container{flex:0 0 auto;width:17.5rem;margin:0 .5rem 0 0}html[dir=rtl] :host .sb--card--container{margin-right:inherit;margin-left:1rem}:host .header{display:flex;flex-direction:row;padding:0;align-items:center}[dir=ltr] :host .header,[dir=rtl] :host .header{margin:.7rem 0 .5rem}:host .header .title{font-family:inherit;text-overflow:ellipsis;overflow:hidden;flex:1;height:1.5rem;color:var(--black);font-size:1.125rem;font-weight:700;text-transform:capitalize;line-height:1.625rem;display:flex;align-items:center}:host .header .title hr{flex:1;margin-left:1rem;display:none}:host .sb-btn-oval{border-radius:50%;padding:0;height:80%;top:10%}"]
                }] }
    ];
    LibraryCardsHlistComponent.propDecorators = {
        contentList: [{ type: Input }],
        title: [{ type: Input }],
        viewMoreButtonText: [{ type: Input }],
        maxCardCount: [{ type: Input }],
        isLoading: [{ type: Input }],
        isMenu: [{ type: Input }],
        layoutConfig: [{ type: Input }],
        multiRow: [{ type: Input }],
        isMobile: [{ type: Input }],
        isOffline: [{ type: Input }],
        type: [{ type: Input }],
        moreInfoLabel: [{ type: Input }],
        section: [{ type: Input }],
        gridTemplate: [{ type: Input, args: ['hover-template',] }],
        btnlabel: [{ type: Input }],
        btnicon: [{ type: Input }],
        indexToDisplay: [{ type: Input }],
        isSelected: [{ type: Input }],
        viewMoreButtonPosition: [{ type: Input }],
        viewMoreClick: [{ type: Output }],
        cardClick: [{ type: Output }],
        menuClick: [{ type: Output }]
    };
    return LibraryCardsHlistComponent;
}());

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var LayoutModule = /** @class */ (function () {
    function LayoutModule() {
    }
    LayoutModule.decorators = [
        { type: NgModule, args: [{
                    declarations: [
                        LibraryCardsStackComponent,
                        LibraryCardsGridComponent,
                        CourseCardsHlistComponent,
                        MemberListComponent,
                        CardsGridComponent,
                        InAppNotificationComponent,
                        LibraryCardsHlistComponent
                    ],
                    imports: [
                        CommonModule,
                        CardModule
                    ],
                    exports: [
                        LibraryCardsStackComponent,
                        LibraryCardsGridComponent,
                        CourseCardsHlistComponent,
                        MemberListComponent,
                        CardsGridComponent,
                        InAppNotificationComponent,
                        LibraryCardsHlistComponent
                    ]
                },] }
    ];
    return LayoutModule;
}());

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/** @type {?} */
var defaultModalContent = {
    title: 'Sample Title',
    hideCloseButton: false,
    closeButtonText: '',
    class: 'sb-modal-primary',
    contentHeading: 'This popup is intentded to take the action',
    contentDescription: 'Sample text book',
    contentMetadata: '1 item (1.5.)',
    actionButtons: [
        {
            text: 'Download',
            class: 'popover-color',
            action: 'download'
        },
        {
            text: 'Cancel',
            action: 'cancel'
        },
    ]
};

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var ConfirmationModalComponent = /** @class */ (function () {
    function ConfirmationModalComponent() {
        this.data = defaultModalContent;
        this.action = new EventEmitter();
    }
    /**
     * @return {?}
     */
    ConfirmationModalComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
    };
    /**
     * @param {?=} data
     * @return {?}
     */
    ConfirmationModalComponent.prototype.modalActionHandler = /**
     * @param {?=} data
     * @return {?}
     */
    function (data) {
        this.action.emit(data);
    };
    ConfirmationModalComponent.decorators = [
        { type: Component, args: [{
                    selector: 'sb-confirmation-modal',
                    template: "<div class=\"sb-modalWrapper sb-modal-md sb-modal-isNotClosable\" [ngClass]=\"data?.class\">\r\n  <!-- modal component -->\r\n  <div class=\"sb-modal\">\r\n    <!-- modal header area -->\r\n    <div class=\"sb-modal__header\">\r\n      <h4>{{data?.title}}</h4>\r\n    <a href=\"javascript:void(0)\" title=\"Close\" class=\"i-link sb-btn-close\" *ngIf=\"!data?.hideCloseButton\" (click)=\"modalActionHandler()\">\r\n        <svg class=\"sb-icon sb-icon--close sb-icon--white\" *ngIf=\"!data?.closeButtonText\">\r\n          <use xlink:href=\"../../../../assets/images/sprite.svg#close\"></use>\r\n        </svg>\r\n        <span class=\"sb-icon sb-icon--close sb-icon--white\">{{data?.closeButtonText}}</span>\r\n      </a>\r\n    </div>\r\n    <!-- modal body area -->\r\n    <div class=\"sb-modal__content sb-modal__content-scroll\">\r\n      <p>{{data?.contentHeading}}</p>\r\n      <p>{{data?.contentDescription}}</p>\r\n      <p>{{data?.contentMetadata}}</p>\r\n    </div>\r\n    <!-- modal actions area -->\r\n    <div class=\"sb-modal__actions\">\r\n      <button type=\"button\" class=\"sb-btn sb-btn-sm\" [ngClass]=\"{'btn?.class': btn?.class}\" *ngFor=\"let btn of data?.actionButtons\" (click)=\"modalActionHandler(btn.action)\">\r\n        {{btn.text}}\r\n      </button>\r\n    </div>\r\n  </div>\r\n  <!-- modal component ends -->\r\n\r\n</div>",
                    styles: [":root{--font-stack-en:\"Noto Sans\",\"Noto Sans Devanagari\",\"Noto Sans Tamil\",\"Noto Sans Bengali\",\"Noto Sans Malayalam\",\"Noto Sans Gurmukhi\",\"Noto Sans Gujarati\",\"Noto Sans Telugu\",\"Noto Sans Kannada\",\"Noto Sans Oriya\",\"Noto Nastaliq Urdu\",-apple-system,BlinkMacSystemFont,\"Segoe UI\",Roboto,Oxygen-Sans,Ubuntu,Cantarell,\"Helvetica Neue\",sans-serif;--font-stack-hi:\"Noto Sans Devanagari\",\"Noto Sans\",\"Noto Sans Tamil\",\"Noto Sans Bengali\",\"Noto Sans Malayalam\",\"Noto Sans Gurmukhi\",\"Noto Sans Gujarati\",\"Noto Sans Telugu\",\"Noto Sans Kannada\",\"Noto Sans Oriya\",\"Noto Nastaliq Urdu\",-apple-system,BlinkMacSystemFont,\"Segoe UI\",Roboto,Oxygen-Sans,Ubuntu,Cantarell,\"Helvetica Neue\",sans-serif;--font-stack-ur:\"Noto Sans\",\"Noto Nastaliq Urdu\",\"Noto Sans Devanagari\",\"Noto Sans Tamil\",\"Noto Sans Bengali\",\"Noto Sans Malayalam\",\"Noto Sans Gurmukhi\",\"Noto Sans Gujarati\",\"Noto Sans Telugu\",\"Noto Sans Kannada\",\"Noto Sans Oriya\",-apple-system,BlinkMacSystemFont,\"Segoe UI\",Roboto,Oxygen-Sans,Ubuntu,Cantarell,\"Helvetica Neue\",sans-serif;--blue:#024f9d;--green:#008840;--orange:#e55a28;--red:#ff4558;--indigo:#6610f2;--purple:#6f42c1;--pink:#e83e8c;--yellow:#ffc107;--teal:#20c997;--cyan:#17a2b8;--black:#000000;--white:#ffffff;--gray-hs:0,0%;--gray:hsl(var(--gray-hs), 20%);--gray-0:hsl(var(--gray-hs), 95%);--gray-100:hsl(var(--gray-hs), 80%);--gray-200:hsl(var(--gray-hs), 60%);--gray-300:hsl(var(--gray-hs), 59%);--gray-400:hsl(var(--gray-hs), 40%);--gray-800:var(--gray);--primary-color:#024f9d;--secondary-color:#008840;--tertiary-color:#e55a28;--primary-0:#f3f7fa;--primary-100:#edf4f9;--primary-200:#80a7ce;--primary-250:#d3e7f4;--primary-300:#7ab4ee;--primary-400:var(--primary-color);--primary-600:#005391;--primary-800:#002e50;--secondary-0:#e1ffdf;--secondary-100:#00c786;--secondary-200:#07bc81;--secondary-400:var(--secondary-color);--tertiary-0:#feedd7;--tertiary-100:#ffa11d;--tertiary-400:var(--tertiary-color);--red-0:#fbccd1;--red-100:#ff6979;--red-400:var(--red);--info-color:var(--blue);--success-color:var(--green);--warning-color:var(--orange);--danger-color:var(--red);--body-background-color:var(--primary-0);--default-text-color:var(--gray-800);--bg-body:var(--primary-0);--body-color:var(--gray-800);--alpha0:0;--alpha25:0.25;--alpha50:0.5;--alpha75:0.75;--font-default-size:0.875rem;--font-size-base:var(--font-default-size);--font-weight-light:300;--font-weight-normal:400;--font-weight-bold:700;--font-weight-base:var(--font-weight-normal);--line-height-base:calc(var(--font-size-base) * 1.61803398875);--h1-font-size:2rem;--h2-font-size:1.75rem;--h3-font-size:1.5rem;--h4-font-size:1.2rem;--h5-font-size:1rem;--h6-font-size:var(--font-size-base);--font-size-lg:var(--h4-font-size);--font-size-md:var(--h5-font-size);--font-size-normal:var(--font-size-base);--font-size-sm:0.75rem;--font-size-xs:0.625rem;--p-font-size:var(--font-size-base);--base-font-size:0.875rem;--base-block-space:0.5rem;--icon-svg-xxs:0.75rem;--icon-svg-xs:calc(var(--base-block-space) * 2);--icon-svg-sm:calc(var(--base-block-space) * 3);--icon-svg-md:calc(var(--base-block-space) * 4);--icon-svg-lg:calc(var(--base-block-space) * 5);--icon-svg-xl:calc(var(--base-block-space) * 6);--rc-96C8DA:#96C8DA;--rc-0076FE:#0076FE;--rc-E5EDF5:#E5EDF5;--rc-7c7b7b:#7c7b7b;--rc-f5f5f5:#f5f5f5;--rc-fdfdfd:#fdfdfd;--rc-dedede:#dedede;--rc-F5F9FC:#F5F9FC;--rc-c4c4c4:#c4c4c4;--rc-d8d8d8:#d8d8d8;--rc-e9e5e5:#e9e5e5;--rc-dddddd:#dddddd;--rc-7b86f4:#7b86f4;--rc-d0d0d0:#d0d0d0;--rc-5c8db7:#5c8db7;--rc-91aecc:#91aecc;--rc-f9f9f9:#f9f9f9;--rc-d4d3d3:#d4d3d3;--rc-FAFAFA:#FAFAFA;--rc-866A6A:#866a6a;--rc-979797:#979797;--rc-e0e1e2:#e0e1e2;--rc-00BD7F:#00BD7F;--rc-9F9F9F:#9F9F9F;--rc-F3F8FF:#F3F8FF;--rc-80A7CE:#80A7CE;--rc-9b9b9b:#9b9b9b;--rc-2ca58d:#2ca58d;--rc-007AFF:#007AFF;--rc-bdbdbd:#bdbdbd;--rc-cecece:#cecece;--rc-2972a4:#2972a4;--rc-E0F1FD:#E0F1FD;--rc-C8D6EA:#C8D6EA;--rc-e2e3e5:#e2e3e5;--rc-BCBEC0:#BCBEC0;--rc-d4d4d5:#d4d4d5;--rc-d4d8da:#d4d8da;--rc-bfe1cf:#bfe1cf;--rc-289fd9:#289fd9;--rc-e68900:#e68900;--rc-2f4272:#2f4272;--rc-e0e0e0:#e0e0e0;--rc-2361ff:#2361ff;--rc-c2c2c2:#c2c2c2;--rc-e5e5e5:#e5e5e5;--rc-ffb300:#ffb300;--rc-d8dee2:#d8dee2;--rc-252525:#252525;--rc-fcf2d6:#fcf2d6;--rc-add8e6:#add8e6;--rc-afd9e7:#afd9e7;--rc-D9E4F2:#D9E4F2;--rc-88B7E6:#88B7E6;--rc-4a4a4a:#4a4a4a;--rc-fff6f6:#fff6f6;--rc-f7f7f7:#f7f7f7;--rc-66c7f4:#66c7f4;--rc-1B4785:#1B4785;--rc-a9a9a9:#a9a9a9;--rc-eeeeee:#eeeeee;--rc-1b1c1d:#1b1c1d;--rc-dededf:#dededf;--rc-aaaaaa:#aaaaaa;--rc-042D55:#042D55;--rc-eeeeee:#eeeeee;--rc-bbbbbb:#bbbbbb;--rc-009D53:#009D53;--rc-E0EFFF:#E0EFFF;--rc-196DAB:#196DAB;--rc-c2c2c2:#c2c2c2;--rc-e5e5e5:#e5e5e5;--rc-c3c3c3:#c3c3c3;--rc-00abc7:#00abc7;--rc-FCE6E6:#FCE6E6;--rc-DECACA:#DECACA;--rc-424242:#424242;--rc-F5D7D7:#F5D7D7;--rc-F7FFF5:#F7FFF5;--rc-D3DED1:#D3DED1;--rc-EBF6E0:#EBF6E0;--rc-F6F6F6:#F6F6F6;--rc-33B6CC:#33B6CC;--rc-2dadc2:#2dadc2;--rc-0fbad6:#0fbad6;--rc-f7ffec:#f7ffec;--rc-d2ddc7:#d2ddc7;--rc-ffe1e1:#ffe1e1;--rc-e6c8c8:#e6c8c8;--rc-f56b56:#f56b56;--rc-dc523d:#dc523d;--rc-e65c47:#e65c47;--rc-565c70:#565c70;--rc-rgba-black:0,0,0;--rc-rgba-white:255,255,255;--rc-rgba-gray:51,51,51;--rc-rgba-primary:2,79,157;--rc-rgba-primary-300:41,114,164;--rc-rgba-gray-300:34,36,38;--rc-rgba-866a6a:134,106,106;--rc-rgba-d0d0d0:208,208,208;--rc-rgba-7b86f4:123,134,244;--rc-rgba-C8D6EA:200,214,234;--lazyload-bg:#f6f7f8;--grey-nuance-lighter:#eeeeee;--grey-nuance-darker:#dddddd;--fade-grey:#e8e8e8}input[type=button].btn-block,input[type=reset].btn-block,input[type=submit].btn-block{width:100%}a.sb-btn{text-align:center;display:inline-flex;justify-content:center;align-items:center;flex-wrap:wrap}.sb-btn{white-space:nowrap;-webkit-tap-highlight-color:transparent;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;outline:0;display:inline-block;border:1px solid;cursor:pointer;min-width:4rem;border-radius:.125rem;-webkit-border-radius:.125rem;-moz-border-radius:.125rem;position:relative;line-height:1.15;text-transform:inherit;text-decoration:none}.sb-btn:hover{opacity:1}.sb-btn:after{content:\"\";position:absolute;top:50%;left:50%;width:3px;height:3px;background:var(--primary-600);opacity:0;border-radius:50%;transform:scale(1,1) translate(-50%);transform-origin:50% 50%}.sb-btn.flat{border-radius:0}.sb-btn.sb-btn-radius{border-radius:2rem}.sb-btn-gray{background-color:var(--gray-200);border-color:var(--gray-200);color:var(--white)}.sb-btn-gray.active,.sb-btn-gray:active,.sb-btn-gray:hover{background-color:var(--gray-400);border:1px solid transparent;color:var(--white)}.sb-btn-outline-gray{background-color:var(--white);color:var(--gray-200);border-color:var(--gray-200)}.sb-btn-outline-gray.active,.sb-btn-outline-gray:active,.sb-btn-outline-gray:hover{color:var(--gray-400);background-color:var(--gray-100)}.sb-btn-dashed-gray{border-style:dashed;border-width:1px;background-color:#fff;border-color:var(--gray-200);color:var(--gray-200)}.sb-btn-dashed-gray.active,.sb-btn-dashed-gray:active,.sb-btn-dashed-gray:hover{background-color:var(--gray-100)}.sb-btn-link-gray{background:0 0;border:0;color:var(--gray-200)}.sb-btn-link-gray.active,.sb-btn-link-gray:active,.sb-btn-link-gray:hover{background-color:var(--gray-100)}.sb-btn-primary,.sb-modalWrapper.sb-modal-primary .sb-modal .sb-modal__actions button:nth-child(1){background-color:var(--primary-400);border-color:var(--primary-400);color:var(--white)}.sb-btn-primary.active,.sb-btn-primary:active,.sb-btn-primary:hover,.sb-modalWrapper.sb-modal-primary .sb-modal .sb-modal__actions button.active:nth-child(1),.sb-modalWrapper.sb-modal-primary .sb-modal .sb-modal__actions button:active:nth-child(1),.sb-modalWrapper.sb-modal-primary .sb-modal .sb-modal__actions button:hover:nth-child(1){background-color:var(--primary-800);border:1px solid transparent;color:var(--white)}.sb-btn-outline-primary,.sb-modalWrapper.sb-modal-primary .sb-modal .sb-modal__actions button:nth-child(2),.sb-modalWrapper.sb-modal-primary .sb-modal .sb-modal__actions button:nth-child(3){background-color:var(--white);color:var(--primary-400);border-color:var(--primary-400)}.sb-btn-outline-primary.active,.sb-btn-outline-primary:active,.sb-btn-outline-primary:hover,.sb-modalWrapper.sb-modal-primary .sb-modal .sb-modal__actions button.active:nth-child(2),.sb-modalWrapper.sb-modal-primary .sb-modal .sb-modal__actions button.active:nth-child(3),.sb-modalWrapper.sb-modal-primary .sb-modal .sb-modal__actions button:active:nth-child(2),.sb-modalWrapper.sb-modal-primary .sb-modal .sb-modal__actions button:active:nth-child(3),.sb-modalWrapper.sb-modal-primary .sb-modal .sb-modal__actions button:hover:nth-child(2),.sb-modalWrapper.sb-modal-primary .sb-modal .sb-modal__actions button:hover:nth-child(3){color:var(--primary-800);background-color:var(--primary-100)}.sb-btn-dashed-primary{border-style:dashed;border-width:1px;background-color:#fff;border-color:var(--primary-400);color:var(--primary-400)}.sb-btn-dashed-primary.active,.sb-btn-dashed-primary:active,.sb-btn-dashed-primary:hover{background-color:var(--primary-100)}.sb-btn-link-primary{background:0 0;border:0;color:var(--primary-400)}.sb-btn-link-primary.active,.sb-btn-link-primary:active,.sb-btn-link-primary:hover{background-color:var(--primary-100)}.sb-btn-secondary{background-color:var(--secondary-200);border-color:var(--secondary-200);color:var(--white)}.sb-btn-secondary.active,.sb-btn-secondary:active,.sb-btn-secondary:hover{background-color:var(--secondary-400);border:1px solid transparent;color:var(--white)}.sb-btn-outline-secondary{background-color:var(--white);color:var(--secondary-200);border-color:var(--secondary-200)}.sb-btn-outline-secondary.active,.sb-btn-outline-secondary:active,.sb-btn-outline-secondary:hover{color:var(--secondary-400);background-color:var(--secondary-0)}.sb-btn-dashed-secondary{border-style:dashed;border-width:1px;background-color:#fff;border-color:var(--secondary-200);color:var(--secondary-200)}.sb-btn-dashed-secondary.active,.sb-btn-dashed-secondary:active,.sb-btn-dashed-secondary:hover{background-color:var(--secondary-0)}.sb-btn-link-secondary{background:0 0;border:0;color:var(--secondary-200)}.sb-btn-link-secondary.active,.sb-btn-link-secondary:active,.sb-btn-link-secondary:hover{background-color:var(--secondary-0)}.sb-btn-tertiary{background-color:var(--tertiary-100);border-color:var(--tertiary-100);color:var(--white)}.sb-btn-tertiary.active,.sb-btn-tertiary:active,.sb-btn-tertiary:hover{background-color:var(--tertiary-400);border:1px solid transparent;color:var(--white)}.sb-btn-outline-tertiary{background-color:var(--white);color:var(--tertiary-100);border-color:var(--tertiary-100)}.sb-btn-outline-tertiary.active,.sb-btn-outline-tertiary:active,.sb-btn-outline-tertiary:hover{color:var(--tertiary-400);background-color:var(--tertiary-0)}.sb-btn-dashed-tertiary{border-style:dashed;border-width:1px;background-color:#fff;border-color:var(--tertiary-100);color:var(--tertiary-100)}.sb-btn-dashed-tertiary.active,.sb-btn-dashed-tertiary:active,.sb-btn-dashed-tertiary:hover{background-color:var(--tertiary-0)}.sb-btn-link-tertiary{background:0 0;border:0;color:var(--tertiary-100)}.sb-btn-link-tertiary.active,.sb-btn-link-tertiary:active,.sb-btn-link-tertiary:hover{background-color:var(--tertiary-0)}.sb-btn-red{background-color:var(--red-100);border-color:var(--red-100);color:var(--white)}.sb-btn-red.active,.sb-btn-red:active,.sb-btn-red:hover{background-color:var(--red-400);border:1px solid transparent;color:var(--white)}.sb-btn-outline-red{background-color:var(--white);color:var(--red-100);border-color:var(--red-100)}.sb-btn-outline-red.active,.sb-btn-outline-red:active,.sb-btn-outline-red:hover{color:var(--red-400);background-color:var(--red-0)}.sb-btn-dashed-red{border-style:dashed;border-width:1px;background-color:#fff;border-color:var(--red-100);color:var(--red-100)}.sb-btn-dashed-red.active,.sb-btn-dashed-red:active,.sb-btn-dashed-red:hover{background-color:var(--red-0)}.sb-btn-link-red{background:0 0;border:0;color:var(--red-100)}.sb-btn-link-red.active,.sb-btn-link-red:active,.sb-btn-link-red:hover{background-color:var(--red-0)}.sb-btn-info{background-color:var(--primary-400);border-color:var(--primary-400);color:var(--white)}.sb-btn-info.active,.sb-btn-info:active,.sb-btn-info:hover{background-color:var(--primary-800);border:1px solid transparent;color:var(--white)}.sb-btn-outline-info{background-color:var(--white);color:var(--primary-400);border-color:var(--primary-400)}.sb-btn-outline-info.active,.sb-btn-outline-info:active,.sb-btn-outline-info:hover{color:var(--primary-800);background-color:var(--primary-100)}.sb-btn-dashed-info{border-style:dashed;border-width:1px;background-color:#fff;border-color:var(--primary-400);color:var(--primary-400)}.sb-btn-dashed-info.active,.sb-btn-dashed-info:active,.sb-btn-dashed-info:hover{background-color:var(--primary-100)}.sb-btn-link-info{background:0 0;border:0;color:var(--primary-400)}.sb-btn-link-info.active,.sb-btn-link-info:active,.sb-btn-link-info:hover{background-color:var(--primary-100)}.sb-btn-success,.sb-modalWrapper.sb-modal-secondary .sb-modal .sb-modal__actions button:nth-child(1),.sb-modalWrapper.sb-modal-success .sb-modal .sb-modal__actions button:nth-child(1){background-color:var(--secondary-200);border-color:var(--secondary-200);color:var(--white)}.sb-btn-success.active,.sb-btn-success:active,.sb-btn-success:hover,.sb-modalWrapper.sb-modal-secondary .sb-modal .sb-modal__actions button.active:nth-child(1),.sb-modalWrapper.sb-modal-secondary .sb-modal .sb-modal__actions button:active:nth-child(1),.sb-modalWrapper.sb-modal-secondary .sb-modal .sb-modal__actions button:hover:nth-child(1),.sb-modalWrapper.sb-modal-success .sb-modal .sb-modal__actions button.active:nth-child(1),.sb-modalWrapper.sb-modal-success .sb-modal .sb-modal__actions button:active:nth-child(1),.sb-modalWrapper.sb-modal-success .sb-modal .sb-modal__actions button:hover:nth-child(1){background-color:var(--secondary-400);border:1px solid transparent;color:var(--white)}.sb-btn-outline-success,.sb-modalWrapper.sb-modal-secondary .sb-modal .sb-modal__actions button:nth-child(2),.sb-modalWrapper.sb-modal-secondary .sb-modal .sb-modal__actions button:nth-child(3),.sb-modalWrapper.sb-modal-success .sb-modal .sb-modal__actions button:nth-child(2),.sb-modalWrapper.sb-modal-success .sb-modal .sb-modal__actions button:nth-child(3){background-color:var(--white);color:var(--secondary-200);border-color:var(--secondary-200)}.sb-btn-outline-success.active,.sb-btn-outline-success:active,.sb-btn-outline-success:hover,.sb-modalWrapper.sb-modal-secondary .sb-modal .sb-modal__actions button.active:nth-child(2),.sb-modalWrapper.sb-modal-secondary .sb-modal .sb-modal__actions button.active:nth-child(3),.sb-modalWrapper.sb-modal-secondary .sb-modal .sb-modal__actions button:active:nth-child(2),.sb-modalWrapper.sb-modal-secondary .sb-modal .sb-modal__actions button:active:nth-child(3),.sb-modalWrapper.sb-modal-secondary .sb-modal .sb-modal__actions button:hover:nth-child(2),.sb-modalWrapper.sb-modal-secondary .sb-modal .sb-modal__actions button:hover:nth-child(3),.sb-modalWrapper.sb-modal-success .sb-modal .sb-modal__actions button.active:nth-child(2),.sb-modalWrapper.sb-modal-success .sb-modal .sb-modal__actions button.active:nth-child(3),.sb-modalWrapper.sb-modal-success .sb-modal .sb-modal__actions button:active:nth-child(2),.sb-modalWrapper.sb-modal-success .sb-modal .sb-modal__actions button:active:nth-child(3),.sb-modalWrapper.sb-modal-success .sb-modal .sb-modal__actions button:hover:nth-child(2),.sb-modalWrapper.sb-modal-success .sb-modal .sb-modal__actions button:hover:nth-child(3){color:var(--secondary-400);background-color:var(--secondary-100)}.sb-btn-dashed-success{border-style:dashed;border-width:1px;background-color:#fff;border-color:var(--secondary-200);color:var(--secondary-200)}.sb-btn-dashed-success.active,.sb-btn-dashed-success:active,.sb-btn-dashed-success:hover{background-color:var(--secondary-100)}.sb-btn-link-success{background:0 0;border:0;color:var(--secondary-200)}.sb-btn-link-success.active,.sb-btn-link-success:active,.sb-btn-link-success:hover{background-color:var(--secondary-100)}.sb-btn-warning,.sb-modalWrapper.sb-modal-tertiary .sb-modal .sb-modal__actions button:nth-child(1),.sb-modalWrapper.sb-modal-warning .sb-modal .sb-modal__actions button:nth-child(1){background-color:var(--tertiary-100);border-color:var(--tertiary-100);color:var(--white)}.sb-btn-warning.active,.sb-btn-warning:active,.sb-btn-warning:hover,.sb-modalWrapper.sb-modal-tertiary .sb-modal .sb-modal__actions button.active:nth-child(1),.sb-modalWrapper.sb-modal-tertiary .sb-modal .sb-modal__actions button:active:nth-child(1),.sb-modalWrapper.sb-modal-tertiary .sb-modal .sb-modal__actions button:hover:nth-child(1),.sb-modalWrapper.sb-modal-warning .sb-modal .sb-modal__actions button.active:nth-child(1),.sb-modalWrapper.sb-modal-warning .sb-modal .sb-modal__actions button:active:nth-child(1),.sb-modalWrapper.sb-modal-warning .sb-modal .sb-modal__actions button:hover:nth-child(1){background-color:var(--tertiary-400);border:1px solid transparent;color:var(--white)}.sb-btn-outline-warning,.sb-modalWrapper.sb-modal-tertiary .sb-modal .sb-modal__actions button:nth-child(2),.sb-modalWrapper.sb-modal-tertiary .sb-modal .sb-modal__actions button:nth-child(3),.sb-modalWrapper.sb-modal-warning .sb-modal .sb-modal__actions button:nth-child(2),.sb-modalWrapper.sb-modal-warning .sb-modal .sb-modal__actions button:nth-child(3){background-color:var(--white);color:var(--tertiary-100);border-color:var(--tertiary-100)}.sb-btn-outline-warning.active,.sb-btn-outline-warning:active,.sb-btn-outline-warning:hover,.sb-modalWrapper.sb-modal-tertiary .sb-modal .sb-modal__actions button.active:nth-child(2),.sb-modalWrapper.sb-modal-tertiary .sb-modal .sb-modal__actions button.active:nth-child(3),.sb-modalWrapper.sb-modal-tertiary .sb-modal .sb-modal__actions button:active:nth-child(2),.sb-modalWrapper.sb-modal-tertiary .sb-modal .sb-modal__actions button:active:nth-child(3),.sb-modalWrapper.sb-modal-tertiary .sb-modal .sb-modal__actions button:hover:nth-child(2),.sb-modalWrapper.sb-modal-tertiary .sb-modal .sb-modal__actions button:hover:nth-child(3),.sb-modalWrapper.sb-modal-warning .sb-modal .sb-modal__actions button.active:nth-child(2),.sb-modalWrapper.sb-modal-warning .sb-modal .sb-modal__actions button.active:nth-child(3),.sb-modalWrapper.sb-modal-warning .sb-modal .sb-modal__actions button:active:nth-child(2),.sb-modalWrapper.sb-modal-warning .sb-modal .sb-modal__actions button:active:nth-child(3),.sb-modalWrapper.sb-modal-warning .sb-modal .sb-modal__actions button:hover:nth-child(2),.sb-modalWrapper.sb-modal-warning .sb-modal .sb-modal__actions button:hover:nth-child(3){color:var(--tertiary-400);background-color:var(--tertiary-0)}.sb-btn-dashed-warning{border-style:dashed;border-width:1px;background-color:#fff;border-color:var(--tertiary-100);color:var(--tertiary-100)}.sb-btn-dashed-warning.active,.sb-btn-dashed-warning:active,.sb-btn-dashed-warning:hover{background-color:var(--tertiary-0)}.sb-btn-link-warning{background:0 0;border:0;color:var(--tertiary-100)}.sb-btn-link-warning.active,.sb-btn-link-warning:active,.sb-btn-link-warning:hover{background-color:var(--tertiary-0)}.sb-btn-error,.sb-modalWrapper.sb-modal-error .sb-modal .sb-modal__actions button:nth-child(1){background-color:var(--red-100);border-color:var(--red-100);color:var(--white)}.sb-btn-error.active,.sb-btn-error:active,.sb-btn-error:hover,.sb-modalWrapper.sb-modal-error .sb-modal .sb-modal__actions button.active:nth-child(1),.sb-modalWrapper.sb-modal-error .sb-modal .sb-modal__actions button:active:nth-child(1),.sb-modalWrapper.sb-modal-error .sb-modal .sb-modal__actions button:hover:nth-child(1){background-color:var(--red-400);border:1px solid transparent;color:var(--white)}.sb-btn-outline-error,.sb-modalWrapper.sb-modal-error .sb-modal .sb-modal__actions button:nth-child(2),.sb-modalWrapper.sb-modal-error .sb-modal .sb-modal__actions button:nth-child(3){background-color:var(--white);color:var(--red-100);border-color:var(--red-100)}.sb-btn-outline-error.active,.sb-btn-outline-error:active,.sb-btn-outline-error:hover,.sb-modalWrapper.sb-modal-error .sb-modal .sb-modal__actions button.active:nth-child(2),.sb-modalWrapper.sb-modal-error .sb-modal .sb-modal__actions button.active:nth-child(3),.sb-modalWrapper.sb-modal-error .sb-modal .sb-modal__actions button:active:nth-child(2),.sb-modalWrapper.sb-modal-error .sb-modal .sb-modal__actions button:active:nth-child(3),.sb-modalWrapper.sb-modal-error .sb-modal .sb-modal__actions button:hover:nth-child(2),.sb-modalWrapper.sb-modal-error .sb-modal .sb-modal__actions button:hover:nth-child(3){color:var(--red-400);background-color:var(--red-0)}.sb-btn-dashed-error{border-style:dashed;border-width:1px;background-color:#fff;border-color:var(--red-100);color:var(--red-100)}.sb-btn-dashed-error.active,.sb-btn-dashed-error:active,.sb-btn-dashed-error:hover{background-color:var(--red-0)}.sb-btn-link-error{background:0 0;border:0;color:var(--red-100)}.sb-btn-link-error.active,.sb-btn-link-error:active,.sb-btn-link-error:hover{background-color:var(--red-0)}.sb-btn-xs{height:1.5rem;padding:.25rem .5rem;font-size:.75rem}.sb-btn-normal{height:2rem;padding:.5rem 1rem;font-size:.75rem}.sb-btn-sm{height:2.5rem;padding:.5rem 1rem;font-size:1rem}.sb-btn-md{height:3rem;padding:.5rem 1rem;font-size:1rem}.sb-btn-lg,.sb-modalWrapper.sb-modal-lg .sb-modal .sb-btn-close .sb-icon{height:3.5rem;padding:1rem 1.5rem;font-size:1.25rem}.sb-btn-full{height:1.5rem;padding:.5rem 1rem;font-size:1.25rem;width:100%}.sb-btn-square.sb-btn-xs{height:1.5rem;width:1.5rem;font-size:1rem}.sb-btn-square.sb-btn-xs i.icon{margin:0;font-size:2em}.sb-btn-square.sb-btn-xs span{margin:.5rem 0 0}.sb-btn-square.sb-btn-normal{height:4rem;width:4rem;font-size:.75rem}.sb-btn-square.sb-btn-normal i.icon{margin:0;font-size:2em}.sb-btn-square.sb-btn-normal span{margin:.5rem 0 0}.sb-btn-square.sb-btn-sm{height:3rem;width:3rem;font-size:.75rem}.sb-btn-square.sb-btn-sm i.icon{margin:0;font-size:2em}.sb-btn-square.sb-btn-sm span{margin:.5rem 0 0}.sb-btn-square.sb-btn-md{height:4rem;width:4rem;font-size:1rem}.sb-btn-square.sb-btn-md i.icon{margin:0;font-size:2em}.sb-btn-square.sb-btn-md span{margin:.5rem 0 0}.sb-btn-square.sb-btn-lg,.sb-modalWrapper.sb-modal-lg .sb-modal .sb-btn-close .sb-btn-square.sb-icon{height:8rem;width:8rem;font-size:1.25rem}.sb-btn-square.sb-btn-lg i.icon,.sb-modalWrapper.sb-modal-lg .sb-modal .sb-btn-close .sb-btn-square.sb-icon i.icon{margin:0;font-size:2em}.sb-btn-square.sb-btn-lg span,.sb-modalWrapper.sb-modal-lg .sb-modal .sb-btn-close .sb-btn-square.sb-icon span{margin:.5rem 0 0}.sb-btn-white{box-shadow:0 -.0625rem .25rem 0 rgba(0,0,0,.1),0 3px 4px 0 rgba(0,0,0,.2);border:0 solid #ddd}.sb-btn-square{display:inline-flex;flex-direction:column;align-items:center;justify-content:space-evenly;font-size:.75rem;padding:.5rem}.sb-btn-disabled{background-color:var(--gray-100);border:1px solid var(--gray-100);color:var(--gray-200);cursor:default}.sb-btn-outline-disabled{background-color:var(--white);border:1px solid var(--gray-100);color:var(--gray-200);cursor:default;font-weight:400}.sb-btn-link{background:0 0;border:0}.sb-btn-download{transition:1.2s ease-in-out}.sb-btn-download i::after{content:\"\\f019\";font-size:.8125rem;color:var(--white)}.sb-btn-download:hover{-webkit-animation:.2s 2 both pulse;animation:.2s 2 both pulse}.sb-btn-download.loading i{-webkit-animation:2s linear infinite loading;animation:2s linear infinite loading}.sb-btn-download.loading i::after{content:\"\\f1ce\"}.sb-btn-download.success i::after{content:\"\\f00c\";color:transparent;-webkit-animation:1s linear .6s both change-icon;animation:1s linear .6s both change-icon}.sb-right-icon-btn{padding:.5rem}.sb-right-icon-btn i.icon{margin-left:.25rem}html[dir=rtl] .sb-right-icon-btn i.icon{margin-right:.25rem;margin-left:0}.sb-left-icon-btn{padding:.5rem}.sb-left-icon-btn i.icon{margin-left:.25rem}html[dir=rtl] .sb-left-icon-btn i.icon{margin-right:.25rem;margin-left:0}.sb-left-icon-btn.sb-btn-xs{padding:.5rem}.ui.toggle.checkbox.sb-toggle{min-height:1.5rem;position:relative;display:inline-block;-webkit-backface-visibility:hidden;backface-visibility:hidden;outline:0;vertical-align:baseline;font-style:normal;min-height:1rem;font-size:1rem;min-width:1rem}.ui.toggle.checkbox.sb-toggle input{width:4rem;height:1.5rem;cursor:pointer;position:absolute;top:0;left:0;opacity:0;outline:0;z-index:3}.ui.toggle.checkbox.sb-toggle input:checked~.box:before,.ui.toggle.checkbox.sb-toggle input:checked~label:before,.ui.toggle.checkbox.sb-toggle input:focus:checked~.box:before,.ui.toggle.checkbox.sb-toggle input:focus:checked~label:before{background-color:#024f9d!important}.ui.toggle.checkbox.sb-toggle label{min-height:1rem;padding-left:4.5rem;color:rgba(0,0,0,.87);position:relative;display:block;outline:0;font-size:1rem}.ui.toggle.checkbox.sb-toggle label:before{display:block;position:absolute;content:\"\";z-index:1;transform:none;border:none;top:1px;left:0;background:rgba(0,0,0,.05);box-shadow:none;width:4rem;height:1.5rem;border-radius:500rem;border-color:var(--primary-color);background-color:var(--primary-color);color:var(--white);transition:border .1s,opacity .1s,transform .1s,box-shadow .1s}.ui.toggle.checkbox.sb-toggle label:after{background:var(--white) linear-gradient(transparent,rgba(0,0,0,.05));position:absolute;content:\"\"!important;opacity:1;z-index:2;border:none;width:-2.5rem;height:-2.5rem;top:3px;left:0;border-radius:500rem;transition:background .3s,left .3s}.ui.toggle.checkbox.sb-toggle input~label:after{left:.1rem;box-shadow:none}.ui.toggle.checkbox.sb-toggle input:checked~label:after{left:2.5625rem;box-shadow:none}.btn-group{border:1px solid var(--gray-100);display:inline-flex;flex-direction:row;flex-direction:row;font-size:0;vertical-align:baseline}.btn-group .sb-btn{background:var(--white);border-left:1px solid var(--gray-100);flex:1 0 auto;margin:0;border-radius:0;border:0;color:var(--primary-400);min-width:2.5rem}.btn-group .sb-btn:first-child{border-left:none;margin-left:0}.btn-group .sb-btn.active,.btn-group .sb-btn:active{background-color:var(--primary-100);color:var(--primary-400)}.btn-group .sb-btn .icon{margin:0;vertical-align:top}.sb-btn-icon-fix{display:flex;align-items:center;line-height:normal}.sb-btn-grow{background:0 0;border:0 solid #fff;font-size:12px;color:#fff;cursor:pointer;transition:.2s ease-in-out}.sb-btn-grow:disabled{opacity:.4;cursor:default}.sb-btn-grow:hover:not([disabled]){background:0 0;transform:scale(1.15)}.sb-icon{position:relative;top:.0625rem;display:inline-block;font-style:normal;font-weight:400;line-height:1;-webkit-font-smoothing:antialiased;opacity:.8}.sb-icon--xs{width:var(--icon-svg-xs);height:var(--icon-svg-xs)}.sb-icon--sm{width:var(--icon-svg-sm);height:var(--icon-svg-sm)}.sb-icon--md{width:var(--icon-svg-md);height:var(--icon-svg-md)}.sb-icon--lg{width:var(--icon-svg-lg);height:var(--icon-svg-lg)}.sb-icon--xl{width:var(--icon-svg-xl);height:var(--icon-svg-xl)}.sb-icon--white{fill:var(--white)}.sb-icon--primary{fill:var(--primary-color)}.sb-icon--secondary{fill:var(--secondary-color)}.sb-icon--tertiary{fill:var(--tertiary-color)}.sb-icon--red{fill:var(--red-400)}.sb-icon--gray{fill:var(--gray-800)}.sb-modalWrapper{background:rgba(var(--rc-rgba-black),.35);position:fixed;transform-origin:center center;opacity:1;overflow-y:auto;z-index:999999;top:0;left:0;width:100%;height:100%;text-align:center;vertical-align:middle;line-height:1;-webkit-animation-fill-mode:both;animation-fill-mode:both;-webkit-animation-duration:.5s;animation-duration:.5s;transition:background-color .5s linear;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;will-change:opacity}.sb-modalWrapper--noOverlay{background:0 0}.sb-modalWrapper.sb-modal-sm .sb-modal{max-width:30rem}.sb-modalWrapper.sb-modal-md .sb-modal{max-width:45rem}.sb-modalWrapper.sb-modal-md .sb-modal .sb-modal__content{max-height:calc(100vh - 124px)}.sb-modalWrapper.sb-modal-md .sb-modal .sb-modal__content.o-y-visible{max-height:inherit}.sb-modalWrapper.sb-modal-lg .sb-modal{max-width:56.25rem}.sb-modalWrapper.sb-modal-lg .sb-modal .sb-modal-content{max-height:calc(100vh - 124px)}.sb-modalWrapper.sb-modal-full .sb-modal{position:fixed;top:0;right:0;bottom:0;left:0;width:100%;height:100vh;transform:translate(0,0);overflow-y:auto;overflow-x:hidden;border-radius:0}[dir=ltr] .sb-modalWrapper.sb-modal-full .sb-modal,[dir=rtl] .sb-modalWrapper.sb-modal-full .sb-modal{margin:0 auto}.sb-modalWrapper.sb-modal-full .sb-modal .sb-btn-close .sb-icon{height:2rem;width:2rem}.sb-modalWrapper.sb-modal-full .sb-modal .sb-modal__header{height:3.5rem;width:auto;border-radius:0}.sb-modalWrapper.sb-modal-full .sb-modal .sb-modal__content{height:calc(100vh - 112px)}.sb-modalWrapper.sb-modal-full .sb-modal .sb-modal__actions{border-radius:0}.sb-modalWrapper.sb-modal-full .sb-modal .close{position:relative}.sb-modalWrapper.sb-modal-isNotClosable .sb-modal .sb-btn-close{display:block}.sb-modalWrapper.sb-modal-primary .sb-modal .sb-modal__header{background-color:var(--primary-400)}.sb-modalWrapper.sb-modal-tertiary .sb-modal .sb-modal__header,.sb-modalWrapper.sb-modal-warning .sb-modal .sb-modal__header{background-color:var(--tertiary-100)}.sb-modalWrapper.sb-modal-secondary .sb-modal .sb-modal__header,.sb-modalWrapper.sb-modal-success .sb-modal .sb-modal__header{background-color:var(--secondary-200)}.sb-modalWrapper.sb-modal-error .sb-modal .sb-modal__header{background-color:var(--red-400)}.sb-modal{margin:0 auto;position:fixed;z-index:9999999;text-align:center;background:0 0;border:none;box-shadow:.0625rem .1875rem .1875rem 0 rgba(var(--rc-rgba-black),.2),.0625rem .1875rem .9375rem .125rem rgba(var(--rc-rgba-black),.2);-webkit-user-select:text;-moz-user-select:text;-ms-user-select:text;user-select:text;border-radius:.25rem .25rem 0 0;bottom:0;left:0;right:0;width:100%;-webkit-animation-fill-mode:inherit;animation-fill-mode:inherit}.sb-modal__header{background-color:var(--primary-400);color:var(--white);padding:.25rem 1rem;border-bottom:0 solid var(--gray-100);min-height:2.5rem;border-top-left-radius:.25rem;border-top-right-radius:.25rem;display:flex;flex-direction:row;justify-content:space-between;align-items:center}.sb-modal__header h4{margin:0;padding:0;font-weight:700;font-size:1rem;flex:1}@media (min-width:768px){.sb-modalWrapper.sb-modal-error .sb-modal .sb-modal__actions button:nth-child(3),.sb-modalWrapper.sb-modal-primary .sb-modal .sb-modal__actions button:nth-child(3),.sb-modalWrapper.sb-modal-secondary .sb-modal .sb-modal__actions button:nth-child(3),.sb-modalWrapper.sb-modal-success .sb-modal .sb-modal__actions button:nth-child(3),.sb-modalWrapper.sb-modal-tertiary .sb-modal .sb-modal__actions button:nth-child(3),.sb-modalWrapper.sb-modal-warning .sb-modal .sb-modal__actions button:nth-child(3){margin-right:auto!important}.sb-modal{width:calc(100% - 16px);height:-webkit-min-content;height:-moz-min-content;height:min-content;border-radius:.25rem;top:50%;transform:translate(0,-50%);text-align:left}.sb-modal__header h4{flex:inherit}}.sb-modal__header .sb-icon{width:1.5rem;height:1.5rem}.sb-modal__content{min-height:6rem;padding:1rem;overflow-y:auto;background:var(--white)}.sb-modal__actions{padding:.5rem 1rem;background:var(--white);border-top:.0625rem solid var(--gray-100);min-height:3.5rem;display:flex;flex-direction:row-reverse;align-items:center;justify-content:center}@media (min-width:768px){.sb-modal__actions{justify-content:inherit;border-radius:0 0 .25rem .25rem}}[dir=ltr] .sb-modal__actions .sb-btn+.sb-btn,[dir=rtl] .sb-modal__actions .sb-btn+.sb-btn{margin:0 .5rem 0 0}"]
                }] }
    ];
    /** @nocollapse */
    ConfirmationModalComponent.ctorParameters = function () { return []; };
    ConfirmationModalComponent.propDecorators = {
        data: [{ type: Input }],
        action: [{ type: Output }]
    };
    return ConfirmationModalComponent;
}());

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var ModalModule = /** @class */ (function () {
    function ModalModule() {
    }
    ModalModule.decorators = [
        { type: NgModule, args: [{
                    declarations: [ConfirmationModalComponent],
                    imports: [
                        CommonModule
                    ],
                    exports: [ConfirmationModalComponent]
                },] }
    ];
    return ModalModule;
}());

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/** @enum {string} */
var LibraryFiltersLayout = {
    ROUND: 'round',
    ROUND_WITH_ICONS: 'round-with-icon',
    SQUARE: 'square',
};
/** @enum {string} */
var TocMimeTypes = {
    COLLECTION: 'collection',
    VIDEO: 'video',
    AUDIO: 'audio',
    INTERACTIVE: 'interactive',
    DOCS: 'docs',
    ALL: 'all',
};

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var LibraryFiltersComponent = /** @class */ (function () {
    function LibraryFiltersComponent() {
        this.selectedFilter = new EventEmitter();
        this.selectedMimeType = new EventEmitter();
        this.TocMimeTypesMaster = [
            { name: 'all', value: ['all'] },
            {
                name: 'video', value: ['video/mp4', 'video/x-youtube', 'video/webm']
            },
            {
                name: 'docs', value: ['application/pdf', 'application/epub', 'application/msword']
            },
            {
                name: 'interactive',
                value: ['application/vnd.ekstep.ecml-archive', 'application/vnd.ekstep.h5p-archive', 'application/vnd.ekstep.html-archive'],
            },
        ];
    }
    Object.defineProperty(LibraryFiltersComponent.prototype, "LibraryFiltersLayout", {
        get: /**
         * @return {?}
         */
        function () { return LibraryFiltersLayout; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(LibraryFiltersComponent.prototype, "TocMimeTypes", {
        get: /**
         * @return {?}
         */
        function () { return TocMimeTypes; },
        enumerable: true,
        configurable: true
    });
    /**
     * @param {?} input
     * @return {?}
     */
    LibraryFiltersComponent.prototype.fetchCorrespondingTypes = /**
     * @param {?} input
     * @return {?}
     */
    function (input) {
        /** @type {?} */
        var type = '';
        switch (input) {
            case TocMimeTypes.ALL:
                type = TocMimeTypes.ALL;
                break;
            case TocMimeTypes.AUDIO:
                type = TocMimeTypes.AUDIO;
                break;
            case TocMimeTypes.COLLECTION:
                type = TocMimeTypes.COLLECTION;
                break;
            case TocMimeTypes.DOCS:
                type = TocMimeTypes.DOCS;
                break;
            case TocMimeTypes.INTERACTIVE:
                type = TocMimeTypes.INTERACTIVE;
                break;
            case TocMimeTypes.VIDEO:
                type = TocMimeTypes.VIDEO;
                break;
        }
        return type;
    };
    /**
     * @param {?} changes
     * @return {?}
     */
    LibraryFiltersComponent.prototype.ngOnChanges = /**
     * @param {?} changes
     * @return {?}
     */
    function (changes) {
        var _this = this;
        if (this.layout === LibraryFiltersLayout.ROUND_WITH_ICONS) {
            if (this.tocList) {
                this.filterList = this.tocList.map((/**
                 * @param {?} item
                 * @param {?} index
                 * @return {?}
                 */
                function (item, index) {
                    /** @type {?} */
                    var type = _this.fetchCorrespondingTypes(item.value);
                    if (_this.selectedItems && _this.selectedItems.includes(index)) {
                        return ({ text: item.text, selected: true, type: type });
                    }
                    else if (!_this.selectedItems && type === TocMimeTypes.ALL) {
                        return ({ text: item.text, selected: true, type: type });
                    }
                    else {
                        return ({ text: item.text, selected: false, type: type });
                    }
                }));
            }
            else if (this.list) {
                this.filterList = this.list.map((/**
                 * @param {?} item
                 * @param {?} index
                 * @return {?}
                 */
                function (item, index) {
                    /** @type {?} */
                    var type = _this.fetchCorrespondingTypes(item);
                    if (_this.selectedItems && _this.selectedItems.includes(index)) {
                        return ({ text: item, selected: true, type: type });
                    }
                    else if (!_this.selectedItems && item === TocMimeTypes.ALL) {
                        return ({ text: item, selected: true, type: type });
                    }
                    else {
                        return ({ text: item, selected: false, type: type });
                    }
                }));
            }
        }
        else {
            if (this.list) {
                this.filterList = this.list.map((/**
                 * @param {?} item
                 * @param {?} index
                 * @return {?}
                 */
                function (item, index) {
                    if (_this.selectedItems && _this.selectedItems.includes(index)) {
                        return ({ text: item, selected: true });
                    }
                    else {
                        return ({ text: item, selected: false });
                    }
                }));
            }
        }
    };
    /**
     * @param {?} event
     * @param {?} index
     * @return {?}
     */
    LibraryFiltersComponent.prototype.selectPill = /**
     * @param {?} event
     * @param {?} index
     * @return {?}
     */
    function (event, index) {
        this.filterList = this.filterList.map((/**
         * @param {?} e
         * @return {?}
         */
        function (e) { return (__assign({}, e, { selected: false })); }));
        try {
            this.filterList[index].selected = true;
            this.selectedFilter.emit({ event: event, data: __assign({}, this.filterList[index], { index: index }) });
            // animation code
            /** @type {?} */
            var el_1 = document.getElementById('class' + index);
            if (el_1) {
                el_1.scrollIntoView({ behavior: 'smooth', block: 'end', inline: 'start' });
            }
            else {
                setTimeout((/**
                 * @return {?}
                 */
                function () {
                    el_1 = document.getElementById('class' + index);
                    if (el_1) {
                        el_1.scrollIntoView({ behavior: 'smooth', block: 'end', inline: 'start' });
                    }
                }), 1000);
            }
        }
        catch (error) {
            console.error('Error in selectPill method', error);
        }
    };
    /**
     * @param {?} event
     * @param {?} index
     * @return {?}
     */
    LibraryFiltersComponent.prototype.selectMimeFilter = /**
     * @param {?} event
     * @param {?} index
     * @return {?}
     */
    function (event, index) {
        var _this = this;
        /** @type {?} */
        var outputType = {};
        this.filterList = this.filterList.map((/**
         * @param {?} e
         * @return {?}
         */
        function (e) { return (__assign({}, e, { selected: false })); }));
        try {
            this.filterList[index].selected = true;
            this.TocMimeTypesMaster.map((/**
             * @param {?} mimeType
             * @return {?}
             */
            function (mimeType) {
                if (mimeType.name === _this.filterList[index].type) {
                    outputType = {
                        event: event,
                        data: __assign({ value: mimeType.value }, _this.filterList[index], { index: index })
                    };
                }
            }));
            this.selectedMimeType.emit(__assign({}, outputType));
            // animation code
            /** @type {?} */
            var el_2 = document.getElementById('mimeType' + index);
            if (el_2) {
                el_2.scrollIntoView({ behavior: 'smooth', block: 'end', inline: 'start' });
            }
            else {
                setTimeout((/**
                 * @return {?}
                 */
                function () {
                    el_2 = document.getElementById('mimeType' + index);
                    if (el_2) {
                        el_2.scrollIntoView({ behavior: 'smooth', block: 'end', inline: 'start' });
                    }
                }), 1000);
            }
        }
        catch (error) {
            console.error('Error in selectPill method', error);
        }
    };
    LibraryFiltersComponent.decorators = [
        { type: Component, args: [{
                    selector: 'sb-library-filters',
                    template: "<div class=\"fixed-container\">\r\n    <!-- Library medium filter -->\r\n    <div *ngIf=\"layout === LibraryFiltersLayout.SQUARE\" class=\"sb-slider-pills-container\">\r\n        <div class=\"sb-pills-container sb-medium-pills-container\" id=\"mediumScroll\">\r\n            <div class=\"pill\" *ngFor=\"let item of filterList; let i = index;\" [ngClass]=\"{'active': item?.selected}\"\r\n                attr.id=\"medium{{i}}\" (click)=\"selectPill($event, i)\">{{item.text}} medium\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <!-- Library class/grade filter -->\r\n    <div *ngIf=\"layout === LibraryFiltersLayout.ROUND\" class=\"sb-slider-pills-container\">\r\n        <div class=\"sb-pills-container sb-grade-pills-container\" id=\"gradeScroll\">\r\n            <div class=\"pill rounded\" *ngFor=\"let item of filterList; let i = index;\"\r\n                [ngClass]=\"{'active': item?.selected}\" attr.id=\"class{{i}}\" (click)=\"selectPill($event, i)\">\r\n                {{item.text}}</div>\r\n        </div>\r\n    </div>\r\n    <!-- Player page content filters -->\r\n    <div *ngIf=\"layout === LibraryFiltersLayout.ROUND_WITH_ICONS\" class=\"sb-slider-pills-container\">\r\n        <div class=\"sb-pills-container sb-grade-pills-container\" id=\"gradeScroll\">\r\n            <div class=\"pill rounded rounded-with-icon\" *ngFor=\"let item of filterList; let i = index;\"\r\n                [ngClass]=\"{'active': item?.selected}\" attr.id=\"mimeType{{i}}\" (click)=\"selectMimeFilter($event, i)\">\r\n                <ng-container *ngIf=\"item?.type === TocMimeTypes.VIDEO \">\r\n                    <i class=\"icon-svg icon-svg--xs icon-videos\" >\r\n                        <svg class=\"icon icon-svg--primary\">\r\n                            <use xlink:href=\"assets/common-consumption/images/sprite.svg#play\"></use>\r\n                        </svg>\r\n                    </i>\r\n                </ng-container>\r\n                <ng-container *ngIf=\"item?.type === TocMimeTypes.DOCS \">\r\n                    <i class=\"icon-svg icon-svg--xs icon-docs\" >\r\n                        <svg class=\"icon icon-svg--primary\">\r\n                            <use xlink:href=\"assets/common-consumption/images/sprite.svg#doc\"></use>\r\n                        </svg>\r\n                    </i>\r\n                </ng-container>\r\n                <ng-container *ngIf=\"item?.type === TocMimeTypes.INTERACTIVE \">\r\n                    <i class=\"icon-svg icon-svg--xs icon-touch\" >\r\n                        <svg class=\"icon icon-svg--primary\">\r\n                            <use xlink:href=\"assets/common-consumption/images/sprite.svg#touch\"></use>\r\n                        </svg>\r\n                    </i>\r\n                </ng-container>\r\n                <span class=\"name\">{{item.text}}</span>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>",
                    styles: [":host .fixed-container{width:100%;position:relative;z-index:2}:host .sb-slider-pills-container{overflow-x:auto}:host .sb-slider-pills-container .sb-pills-container{display:inline-flex;align-items:center;box-sizing:border-box}[dir=ltr] :host .sb-slider-pills-container .sb-pills-container,[dir=rtl] :host .sb-slider-pills-container .sb-pills-container{padding:1rem}:host .sb-slider-pills-container .sb-pills-container .pill{background-color:var(--white);white-space:nowrap;-webkit-appearance:none;text-overflow:ellipsis;min-height:2rem;cursor:pointer;transition:.25s ease-in-out;border-radius:.125rem;text-transform:capitalize;text-decoration:none;text-align:center;font-weight:400;font-style:normal;font-stretch:normal;font-size:.75rem;box-sizing:border-box;display:flex;align-items:center;line-height:1rem}[dir=ltr] :host .sb-slider-pills-container .sb-pills-container .pill{margin-right:.5rem}[dir=rtl] :host .sb-slider-pills-container .sb-pills-container .pill{margin-left:.5rem}[dir=ltr] :host .sb-slider-pills-container .sb-pills-container .pill,[dir=rtl] :host .sb-slider-pills-container .sb-pills-container .pill{padding:.25rem .5rem}[dir=ltr] :host .sb-slider-pills-container .sb-pills-container .pill:last-child{margin-right:.5rem}[dir=rtl] :host .sb-slider-pills-container .sb-pills-container .pill:last-child{margin-left:.5rem}:host .sb-slider-pills-container .sb-medium-pills-container{min-height:4rem;background:var(--white);min-width:100%}:host .sb-slider-pills-container .sb-medium-pills-container .pill{border:var(--secondary-color) .0625rem solid;color:var(--secondary-color)}:host .sb-slider-pills-container .sb-medium-pills-container .pill.active,:host .sb-slider-pills-container .sb-medium-pills-container .pill:active,:host .sb-slider-pills-container .sb-medium-pills-container .pill:hover{color:var(--white);background-color:var(--secondary-color);box-shadow:0 3px 4px 0 rgba(var(--rc-rgba-black),.19)}:host .sb-slider-pills-container .sb-grade-pills-container{min-height:3rem;background:var(--gray-0);min-width:100%}:host .sb-slider-pills-container .sb-grade-pills-container .pill{border-radius:1rem;color:var(--primary-color);min-height:2rem}[dir=ltr] :host .sb-slider-pills-container .sb-grade-pills-container .pill,[dir=rtl] :host .sb-slider-pills-container .sb-grade-pills-container .pill{padding:.25rem 1rem}:host .sb-slider-pills-container .sb-grade-pills-container .pill.active,:host .sb-slider-pills-container .sb-grade-pills-container .pill:active,:host .sb-slider-pills-container .sb-grade-pills-container .pill:hover{background-color:var(--primary-color);color:var(--white);box-shadow:0 3px 4px 0 rgba(var(--rc-rgba-black),.19)}:host .sb-slider-pills-container .sb-grade-pills-container .pill.active .icon-svg svg,:host .sb-slider-pills-container .sb-grade-pills-container .pill:active .icon-svg svg,:host .sb-slider-pills-container .sb-grade-pills-container .pill:hover .icon-svg svg{fill:var(--white)}:host .sb-slider-pills-container .sb-grade-pills-container .pill.rounded{font-size:.875rem}:host .sb-slider-pills-container .sb-grade-pills-container .pill.rounded-with-icon .icon-svg{margin-right:.25rem;top:0}html[dir=rtl] :host .sb-slider-pills-container .sb-grade-pills-container .pill.rounded-with-icon .icon-svg{margin-left:.25rem;margin-right:inherit}:host .sb-slider-pills-container .sb-grade-pills-container .pill.rounded-with-icon .name{-ms-grid-row-align:center;align-self:center;display:inline-block;line-height:1rem}"]
                }] }
    ];
    LibraryFiltersComponent.propDecorators = {
        list: [{ type: Input }],
        tocList: [{ type: Input }],
        selectedItems: [{ type: Input }],
        layout: [{ type: Input }],
        selectedFilter: [{ type: Output }],
        selectedMimeType: [{ type: Output }]
    };
    return LibraryFiltersComponent;
}());

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var LibraryFiltersModule = /** @class */ (function () {
    function LibraryFiltersModule() {
    }
    LibraryFiltersModule.decorators = [
        { type: NgModule, args: [{
                    declarations: [LibraryFiltersComponent],
                    imports: [
                        CommonModule
                    ],
                    exports: [LibraryFiltersComponent]
                },] }
    ];
    return LibraryFiltersModule;
}());

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/** @enum {string} */
var ActionButtonType = {
    DELETE: 'delete',
    DOWNLOAD: 'download',
    FULL_SCREEN: 'fullscreen',
    MINIMIZE_SCREEN: 'minimize',
    PRINT: 'print',
    RATE: 'rate',
    SHARE: 'share',
    UPDATE: 'update',
};

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/** @type {?} */
var IMAGE_PATH = 'assets/common-consumption/images/sprite.svg';
/** @type {?} */
var DEFAULT_BUTTON = {
    name: ActionButtonType.FULL_SCREEN,
    label: 'Fullscreen',
    iconPath: IMAGE_PATH + "#" + ActionButtonType.FULL_SCREEN,
    disabled: false
};
var PlayerActionsComponent = /** @class */ (function () {
    function PlayerActionsComponent() {
        this.actionButtons = [];
        this.buttonClick = new EventEmitter();
        this.showFullscreen = false;
        this.fullscreenButton = DEFAULT_BUTTON;
    }
    Object.defineProperty(PlayerActionsComponent.prototype, "ActionButtonType", {
        get: /**
         * @return {?}
         */
        function () { return ActionButtonType; },
        enumerable: true,
        configurable: true
    });
    /**
     * @return {?}
     */
    PlayerActionsComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        var _this = this;
        if (this.actionButtons) {
            this.actionButtons.forEach((/**
             * @param {?} item
             * @param {?} index
             * @param {?} object
             * @return {?}
             */
            function (item, index, object) {
                item.iconPath = item.iconPath ? item.iconPath : IMAGE_PATH + "#" + item.name;
                if (item.name === ActionButtonType.FULL_SCREEN) {
                    _this.showFullscreen = true;
                    _this.fullscreenButton = item;
                    object.splice(index, 1);
                }
            }));
        }
    };
    /**
     * Emits event when user clicks on the button
     * @param event Contains default mouse click event
     * @param actionButton Data for the clicked button
     */
    /**
     * Emits event when user clicks on the button
     * @param {?} event Contains default mouse click event
     * @param {?} actionButton Data for the clicked button
     * @return {?}
     */
    PlayerActionsComponent.prototype.onButtonClick = /**
     * Emits event when user clicks on the button
     * @param {?} event Contains default mouse click event
     * @param {?} actionButton Data for the clicked button
     * @return {?}
     */
    function (event, actionButton) {
        this.buttonClick.emit({ event: event, data: actionButton });
    };
    PlayerActionsComponent.decorators = [
        { type: Component, args: [{
                    selector: 'sb-player-actions',
                    template: "<div class=\"d-flex flex-w-wrap content-video__player__tools\">\r\n  <div *ngFor=\"let item of actionButtons\">\r\n    <button class=\"sb-btn sb-btn-link sb-btn-link-gray sb-btn-sm sb-btn-square\"\r\n      [class.sb-btn-link-disabled]=\"item?.disabled\" [hidden]=\"item?.disabled\" (click)=\"onButtonClick($event, item)\">\r\n      <i class=\"icon-svg icon-svg--sm icon-back\">\r\n        <svg class=\"icon icon-svg--primary\">\r\n          <use [attr.xlink:href]=\"item?.iconPath\"></use>\r\n        </svg>\r\n      </i>\r\n      <span class=\"fxsmall\">{{item?.label}}</span>\r\n    </button>\r\n  </div>\r\n\r\n  <div class=\"d-flex flex-ai-center content-video__player__screenpart\" *ngIf=\"showFullscreen\">\r\n    <div class=\"separator\"></div>\r\n    <button class=\"sb-btn sb-btn-link sb-btn-link-gray sb-btn-sm sb-btn-square\"\r\n      [class.sb-btn-link-disabled]=\"fullscreenButton?.disabled\" [hidden]=\"fullscreenButton?.disabled\"\r\n      (click)=\"onButtonClick($event, fullscreenButton)\">\r\n      <i class=\"icon-svg icon-svg--sm icon-back\">\r\n        <svg class=\"icon icon-svg--primary\">\r\n          <use [attr.xlink:href]=\"fullscreenButton?.iconPath\"></use>\r\n        </svg>\r\n      </i>\r\n      <span class=\"fxsmall\">{{fullscreenButton?.label}}</span>\r\n    </button>\r\n  </div>\r\n</div>",
                    styles: [":host .content-video__player__screenpart{padding-left:0}:host .content-video__player__screenpart .separator{border-left:.03125rem solid var(--gray-100);height:2.5rem;width:.0625rem}[dir=ltr] :host .content-video__player__screenpart .separator,[dir=rtl] :host .content-video__player__screenpart .separator{margin:0 .5rem}:host .sb-btn-link-disabled,:host .sb-btn-link-disabled[disabled]{opacity:.5;cursor:initial;background:0 0;color:var(--gray-200);border:none}:host .sb-btn-link-disabled:hover,:host .sb-btn-link-disabled[disabled]:hover{background:0 0;color:var(--gray-200);border:0 solid var(--gray-100);cursor:default;opacity:.5}:host .sb-btn-link-disabled:focus,:host .sb-btn-link-disabled[disabled]:focus{outline:0;background:0 0}"]
                }] }
    ];
    PlayerActionsComponent.propDecorators = {
        actionButtons: [{ type: Input }],
        buttonClick: [{ type: Output }]
    };
    return PlayerActionsComponent;
}());

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var TocItemComponent = /** @class */ (function () {
    function TocItemComponent() {
        var _this = this;
        this.accordianConfig = {
            expandMode: ExpandMode.MULTIPLE,
            expandBehavior: ExpandBehavior.NONE
        };
        this.activeMimeTypeFilter = ['all'];
        this.noContentMessage = 'No content available';
        this.contentStatus = [];
        this.trackableDefaultImage = '';
        this.type = "";
        this.recogniseCollection = false;
        this.tocCardClick = new EventEmitter();
        this.noContent = new EventEmitter();
        this.selectedItem = new EventEmitter();
        this.playButtonClick = new EventEmitter();
        this.resetActiveContent = false;
        this.isMimeTypeFilterChanged = false;
        this.isSameMimeTypeInChildren = ((/**
         * @param {?} mimeTypesCount
         * @param {?} activeMimeType
         * @return {?}
         */
        function (mimeTypesCount, activeMimeType) {
            /** @type {?} */
            var contentMimeType = Object.keys(JSON.parse(mimeTypesCount));
            return Boolean(activeMimeType.filter((/**
             * @param {?} value
             * @return {?}
             */
            function (value) { return contentMimeType.includes(value); })).length);
        }));
        this.isSameMimeType = (/**
         * @param {?} currentContent
         * @return {?}
         */
        function (currentContent) { return _this.activeMimeTypeFilter.find((/**
         * @param {?} mimeType
         * @return {?}
         */
        function (mimeType) { return mimeType === currentContent.mimeType; })); });
        this.isChildrenPresent = (/**
         * @param {?} currentContent
         * @return {?}
         */
        function (currentContent) { return Boolean(currentContent.children && currentContent.children.length); });
        this.subscriptions = [];
    }
    Object.defineProperty(TocItemComponent.prototype, "FlattenedType", {
        get: /**
         * @return {?}
         */
        function () { return FlattenedType; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TocItemComponent.prototype, "MimeTypeMasterData", {
        get: /**
         * @return {?}
         */
        function () { return MimeTypeMasterData; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TocItemComponent.prototype, "ExpandBehavior", {
        get: /**
         * @return {?}
         */
        function () { return ExpandBehavior; },
        enumerable: true,
        configurable: true
    });
    /**
     * @return {?}
     */
    TocItemComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        this.setActiveContent();
    };
    /**
     * @param {?} changes
     * @return {?}
     */
    TocItemComponent.prototype.ngOnChanges = /**
     * @param {?} changes
     * @return {?}
     */
    function (changes) {
        if (changes.activeMimeTypeFilter) {
            this.isMimeTypeFilterChanged = false;
            this.resetActiveContent = true;
        }
        else if (changes.tocData) {
            this.setActiveContent();
        }
        else if (changes.selectAll) {
            this.selectAllItems(this.selectAll);
        }
    };
    /**
     * @return {?}
     */
    TocItemComponent.prototype.ngAfterViewInit = /**
     * @return {?}
     */
    function () {
        var _this = this;
        /** @type {?} */
        var subscription = this.accordionItems.changes.subscribe((/**
         * @param {?} change
         * @return {?}
         */
        function (change) {
            if (_this.resetActiveContent && _this.accordionItems.length && _this.accordianConfig.expandBehavior === ExpandBehavior.EXPAND_FIRST) {
                _this.resetActiveContent = false;
                _this.accordionItems.first.collapsed = false;
                _this.collapsedChangeHandler(false, _this.accordionItems.first);
            }
        }));
        this.subscriptions.push(subscription);
    };
    /**
     * @return {?}
     */
    TocItemComponent.prototype.setActiveContent = /**
     * @return {?}
     */
    function () {
        if (this.tocData && this.tocData.children) {
            if ((this.tocData.children[0].contentData && this.tocData.children[0].contentData.trackable && this.tocData.children[0].contentData.trackable.enabled === 'Yes') ||
                (this.tocData.children[0].trackable && this.tocData.children[0].trackable.enabled === 'Yes')) {
                return;
            }
            /** @type {?} */
            var flattenDeepContents = this.flattenDeep(this.tocData.children);
            if (!this.activeContent) {
                this.activeContent = this.firstNonCollectionContent(flattenDeepContents);
            }
            if (!this.activeContent) {
                this.noContent.emit({ message: 'No Content Available' });
            }
        }
    };
    /**
     * @param {?} content
     * @return {?}
     */
    TocItemComponent.prototype.filterChildren = /**
     * @param {?} content
     * @return {?}
     */
    function (content) {
        // Check for the ActiveMimeType
        if (this.activeMimeTypeFilter.includes('all')) {
            if (content.mimeType === MimeTypeMasterData.COLLECTION) {
                return this.isShowContent(content, true);
            }
            return true; // Return true for all the content except collection mimeType
        }
        else if (content.mimeType && this.isSameMimeType(content)) {
            return true;
        }
        else if (content.mimeType === MimeTypeMasterData.COLLECTION) {
            return this.isShowContent(content, false);
        }
        else {
            return false;
        }
    };
    /**
     * @private
     * @param {?} content
     * @param {?} isActiveFilterAll
     * @return {?}
     */
    TocItemComponent.prototype.isShowContent = /**
     * @private
     * @param {?} content
     * @param {?} isActiveFilterAll
     * @return {?}
     */
    function (content, isActiveFilterAll) {
        var _this = this;
        if (content.mimeTypesCount && !isActiveFilterAll) {
            return this.isSameMimeTypeInChildren(content.mimeTypesCount, this.activeMimeTypeFilter);
        }
        else if (this.isChildrenPresent(content)) {
            /** @type {?} */
            var contentList = this.flattenDeep(content.children);
            return isActiveFilterAll ? contentList.some((/**
             * @param {?} c
             * @return {?}
             */
            function (c) { return c.mimeType !== MimeTypeMasterData.COLLECTION; })) :
                contentList.some((/**
                 * @param {?} c
                 * @return {?}
                 */
                function (c) { return _this.isSameMimeType(c); }));
        }
        else {
            return false;
        }
    };
    /**
     * @param {?} event
     * @return {?}
     */
    TocItemComponent.prototype.onTocCardClick = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        /** @type {?} */
        var rollup = this.getRollup(this.tocData, event.data.sbUniqueIdentifier);
        if (rollup.length) {
            rollup.pop();
        }
        this.tocCardClick.emit(__assign({}, event, { rollup: rollup }));
    };
    /**
     * @param {?} collapsed
     * @param {?} item
     * @return {?}
     */
    TocItemComponent.prototype.collapsedChangeHandler = /**
     * @param {?} collapsed
     * @param {?} item
     * @return {?}
     */
    function (collapsed, item) {
        if (this.accordianConfig.expandMode === ExpandMode.SINGLE && !collapsed) {
            this.accordionItems.filter((/**
             * @param {?} i
             * @return {?}
             */
            function (i) { return i !== item; })).forEach((/**
             * @param {?} i
             * @return {?}
             */
            function (i) {
                if (i.expanded) {
                    i.expanded = false;
                }
            }));
        }
    };
    /**
     * @private
     * @param {?} contents
     * @return {?}
     */
    TocItemComponent.prototype.firstNonCollectionContent = /**
     * @private
     * @param {?} contents
     * @return {?}
     */
    function (contents) {
        return contents.find((/**
         * @param {?} content
         * @return {?}
         */
        function (content) { return content.mimeType !== 'application/vnd.ekstep.content-collection'; }));
    };
    /**
     * @private
     * @param {?} contents
     * @return {?}
     */
    TocItemComponent.prototype.flattenDeep = /**
     * @private
     * @param {?} contents
     * @return {?}
     */
    function (contents) {
        var _this = this;
        if (contents) {
            return contents.reduce((/**
             * @param {?} acc
             * @param {?} val
             * @return {?}
             */
            function (acc, val) {
                if (val.children) {
                    acc.push(val);
                    return acc.concat(_this.flattenDeep(val.children));
                }
                else {
                    return acc.concat(val);
                }
            }), []);
        }
    };
    /**
     * @param {?} index
     * @param {?} item
     * @return {?}
     */
    TocItemComponent.prototype.isExpanded = /**
     * @param {?} index
     * @param {?} item
     * @return {?}
     */
    function (index, item) {
        var _this = this;
        /** @type {?} */
        var activeContent = item.children ? this.flattenDeep(item.children).find((/**
         * @param {?} child
         * @return {?}
         */
        function (child) {
            if (_this.activeContent && _this.activeContent.parent) {
                return child.identifier === _this.activeContent.identifier && child.parent === _this.activeContent.parent;
            }
            else {
                return child.identifier === _this.activeContent.identifier;
            }
        })) : undefined;
        return Boolean(activeContent || item && item.mimeType !== MimeTypeMasterData.COLLECTION);
    };
    /**
     * @param {?} item
     * @param {?} index
     * @return {?}
     */
    TocItemComponent.prototype.isShowBody = /**
     * @param {?} item
     * @param {?} index
     * @return {?}
     */
    function (item, index) {
        var _this = this;
        if (item) {
            /** @type {?} */
            var isShowAllMimeType = (/**
             * @return {?}
             */
            function () { return _this.activeMimeTypeFilter.indexOf('all') > -1; });
            /** @type {?} */
            var isCollection = (/**
             * @return {?}
             */
            function () { return item.mimeType === MimeTypeMasterData.COLLECTION; });
            /** @type {?} */
            var isMathchesMimeType = (/**
             * @return {?}
             */
            function () { return _this.activeMimeTypeFilter.indexOf(item.mimeType) > -1; });
            /** @type {?} */
            var isLastContent = (/**
             * @return {?}
             */
            function () { return _this.tocData.children.length === index + 1; });
            if (this.tocData && isShowAllMimeType() || (isCollection() || isMathchesMimeType())) {
                this.isMimeTypeFilterChanged = true;
                return true;
            }
            else if (this.activeMimeTypeFilter.indexOf(item.mimeType) < 0 && !isLastContent()) {
                return false;
            }
            else if (this.activeMimeTypeFilter.indexOf(item.mimeType) < 0 && isLastContent()) {
                if (this.isMimeTypeFilterChanged) {
                    return false;
                }
                this.isMimeTypeFilterChanged = false;
                return true;
            }
        }
        return false;
    };
    /**
     * @param {?} tree
     * @param {?} identifier
     * @return {?}
     */
    TocItemComponent.prototype.getRollup = /**
     * @param {?} tree
     * @param {?} identifier
     * @return {?}
     */
    function (tree, identifier) {
        /** @type {?} */
        var rollup = [tree.identifier];
        if (tree.sbUniqueIdentifier === identifier) {
            return rollup;
        }
        if (!tree.children || !tree.children.length) {
            return [];
        }
        /** @type {?} */
        var notDone = true;
        /** @type {?} */
        var childRollup;
        /** @type {?} */
        var index = 0;
        while (notDone && tree.children[index]) {
            childRollup = this.getRollup(tree.children[index], identifier);
            if (childRollup && childRollup.length) {
                notDone = false;
            }
            index++;
        }
        if (childRollup && childRollup.length) {
            rollup.push.apply(rollup, __spread(childRollup));
            return rollup;
        }
        else {
            return [];
        }
    };
    /**
     * @param {?} tocData
     * @param {?} item
     * @return {?}
     */
    TocItemComponent.prototype.createUniqueId = /**
     * @param {?} tocData
     * @param {?} item
     * @return {?}
     */
    function (tocData, item) {
        item['sbUniqueIdentifier'] = tocData.identifier + '_' + item.identifier;
    };
    /**
     * @since #SH-362
     * @param item - selected children data.
     * @description - It will despatch an event on individual checkbox click
     */
    /**
     * \@since #SH-362
     * \@description - It will despatch an event on individual checkbox click
     * @param {?} item - selected children data.
     * @return {?}
     */
    TocItemComponent.prototype.onItemSelect = /**
     * \@since #SH-362
     * \@description - It will despatch an event on individual checkbox click
     * @param {?} item - selected children data.
     * @return {?}
     */
    function (item) {
        this.selectedItem.emit({ data: item });
    };
    /**
     * @since #SH-362
     * @param isSelectAll - boolean, which will be true/false if 'Select all checkbox is checked/unchecked
     * @description - this method will mark every children of tocData object with an additional variable -
     *                selected: true/false based on the value of 'isSelectAll' and also despatch an event
     *                with the data.
     */
    /**
     * \@since #SH-362
     * \@description - this method will mark every children of tocData object with an additional variable -
     *                selected: true/false based on the value of 'isSelectAll' and also despatch an event
     *                with the data.
     * @param {?} isSelectAll - boolean, which will be true/false if 'Select all checkbox is checked/unchecked
     * @return {?}
     */
    TocItemComponent.prototype.selectAllItems = /**
     * \@since #SH-362
     * \@description - this method will mark every children of tocData object with an additional variable -
     *                selected: true/false based on the value of 'isSelectAll' and also despatch an event
     *                with the data.
     * @param {?} isSelectAll - boolean, which will be true/false if 'Select all checkbox is checked/unchecked
     * @return {?}
     */
    function (isSelectAll) {
        this.tocData['children'].forEach((/**
         * @param {?} item
         * @return {?}
         */
        function (item) {
            item.selected = isSelectAll;
        }));
        this.selectedItem.emit({ selectAll: isSelectAll, data: this.tocData['children'] });
    };
    /**
     * @param {?} event
     * @return {?}
     */
    TocItemComponent.prototype.onPlayButtonClick = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        /** @type {?} */
        var rollup = this.getRollup(this.tocData, event.data.sbUniqueIdentifier);
        if (rollup.length) {
            rollup.pop();
        }
        this.playButtonClick.emit(__assign({}, event, { rollup: rollup }));
    };
    /**
     * @param {?} content
     * @return {?}
     */
    TocItemComponent.prototype.isFlattenedType = /**
     * @param {?} content
     * @return {?}
     */
    function (content) {
        if (!(this.type === TocCardType.TRACKABLE) ||
            !((content.contentData && content.contentData.trackable && content.contentData.trackable.enabled === 'Yes') ||
                (content.trackable && content.trackable.enabled === 'Yes'))) {
            return FlattenedType.EXPAND;
        }
        else if (this.type === TocCardType.TRACKABLE &&
            ((content.contentData && content.contentData.trackable && content.contentData.trackable.enabled === 'Yes') ||
                (content.trackable && content.trackable.enabled === 'Yes'))) {
            return FlattenedType.COLLAPSE;
        }
        return '';
    };
    /**
     * @return {?}
     */
    TocItemComponent.prototype.ngOnDestroy = /**
     * @return {?}
     */
    function () {
        this.subscriptions.forEach((/**
         * @param {?} s
         * @return {?}
         */
        function (s) { return s.unsubscribe(); }));
    };
    TocItemComponent.decorators = [
        { type: Component, args: [{
                    selector: 'sb-toc-item',
                    template: "<div *ngFor=\"let item of tocData?.children; let index = index;\">\r\n  <ng-container *ngIf=\"(item | hasMimeType: activeMimeTypeFilter) || this.accordianConfig.expandBehavior === ExpandBehavior.NONE\">\r\n  <div *ngIf=\"item?.mimeType === MimeTypeMasterData?.COLLECTION && !(item?.contentData?.trackable?.enabled === 'Yes' || item?.trackable?.enabled === 'Yes')\">\r\n    <sb-accordion [multi]=\"false\" [id]=\"item.identifier\">\r\n      <sb-accordion-item #sbAccordionItem [expanded]=\"isExpanded(index, item)\" (collapsedChange)=\"collapsedChangeHandler($event, sbAccordionItem);\">\r\n        {{ createUniqueId(tocData, item) }}\r\n        <sb-accordion-header>\r\n            <div class=\"sb-checkbox sb-checkbox-primary\" *ngIf=\"selectMode\">\r\n                <input (change)=\"onItemSelect(item)\" [(ngModel)]=\"item.selected\" type=\"checkbox\" name=\"example\">\r\n                <label class=\"mb-0\"><span class=\"title font-weight-bold\">{{item?.name}}</span></label>\r\n            </div>\r\n            <span *ngIf=\"!selectMode\" class=\"title\">{{item?.name}}</span>\r\n        </sb-accordion-header>\r\n        <sb-accordion-body *ngIf=\"isShowBody(item, index)\">\r\n          <div *ngIf=\"item && (item | hasMimeType: activeMimeTypeFilter);else noContent\" #chapterContainer>\r\n            <ng-container *ngIf=\"item?.children?.length\">\r\n              <ng-container *ngFor=\"let child of item?.children; let j = index;\">\r\n                {{ createUniqueId(item, child) }}\r\n                <div class=\"sbchapter\"\r\n                  *ngIf=\"recogniseCollection && filterChildren(child) && child.item?.contentType === 'TextBook'\">\r\n                  <sb-my-course-card [type]=\"'recently_viewed'\"></sb-my-course-card>\r\n                </div>\r\n                <div class=\"sbchapter\"\r\n                  *ngIf=\"recogniseCollection && filterChildren(child) && child.item?.contentType === 'Course'\">\r\n                  <sb-my-course-card [type]=\"'recently_viewed'\"></sb-my-course-card>\r\n                </div>\r\n                <div class=\"sbchapter\" *ngIf=\"filterChildren(child)\" [id]=\"child.identifier\">\r\n                  <ng-container *ngIf=\"isFlattenedType(child) === FlattenedType.EXPAND\">\r\n                    <sb-toc-child-item *ngIf=\"type\" [type]=\"type\" [contentStatus]=\"contentStatus\" [childData]=\"child\"\r\n                      [activeMimeTypeFilter]=\"activeMimeTypeFilter\" [activeContent]=\"activeContent\" [platform]=\"platform\"\r\n                      (tocCardClick)=\"onTocCardClick($event)\" [playBtnConfig]=\"playBtnConfig\" (playButtonClick)=\"onPlayButtonClick($event)\"\r\n                      [trackableDefaultImage]=\"trackableDefaultImage\">\r\n                    </sb-toc-child-item>\r\n                    <sb-toc-child-item *ngIf=\"!type\" [childData]=\"child\" [activeMimeTypeFilter]=\"activeMimeTypeFilter\"\r\n                      [activeContent]=\"activeContent\" (tocCardClick)=\"onTocCardClick($event)\" [playBtnConfig]=\"playBtnConfig\"\r\n                      (playButtonClick)=\"onPlayButtonClick($event)\" [platform]=\"platform\" [trackableDefaultImage]=\"trackableDefaultImage\">\r\n                    </sb-toc-child-item>\r\n                  </ng-container>\r\n\r\n                  <ng-container *ngIf=\"isFlattenedType(child) === FlattenedType.COLLAPSE\">\r\n                    <sb-toc-card *ngIf=\"type\" [type]=\"type\" [content]=\"child\" (tocCardClick)=\"onTocCardClick($event)\"\r\n                      [activeContent]=\"activeContent\" [playBtnConfig]=\"playBtnConfig\" (playButtonClick)=\"onPlayButtonClick($event)\"\r\n                      [trackableDefaultImage]=\"trackableDefaultImage\" [platform]=\"platform\">\r\n                    </sb-toc-card>\r\n                    <sb-toc-card *ngIf=\"!type\" [content]=\"child\" (tocCardClick)=\"onTocCardClick($event)\"\r\n                      [activeContent]=\"activeContent\" [playBtnConfig]=\"playBtnConfig\" (playButtonClick)=\"onPlayButtonClick($event)\"\r\n                      [trackableDefaultImage]=\"trackableDefaultImage\" [platform]=\"platform\">\r\n                    </sb-toc-card>\r\n                  </ng-container>\r\n\r\n                </div>\r\n              </ng-container>\r\n            </ng-container>\r\n            <ng-container *ngIf=\"item?.mimeType === MimeTypeMasterData?.COLLECTION && !item?.children?.length\">\r\n              <div class=\"heading\">{{noContentMessage}}</div>\r\n            </ng-container>\r\n          </div>\r\n          <ng-template #noContent>\r\n            <div class=\"heading\">{{noContentMessage}}</div>\r\n          </ng-template>\r\n        </sb-accordion-body>\r\n      </sb-accordion-item>\r\n    </sb-accordion>\r\n  </div>\r\n  <div *ngIf=\"(item?.mimeType !== MimeTypeMasterData?.COLLECTION && !item?.children?.length) ||\r\n    item?.contentData?.trackable?.enabled === 'Yes' || item?.trackable?.enabled === 'Yes'\" class=\"sb-content__bar\">\r\n    <ng-container>\r\n    <div class=\"child-content-padding\">\r\n      <sb-toc-card *ngIf=\"type\" [type]=\"type\" [contentStatus]=\"contentStatus\" [content]=\"item\"\r\n        (tocCardClick)=\"onTocCardClick($event)\" [activeContent]=\"activeContent\" [playBtnConfig]=\"playBtnConfig\"\r\n        (playButtonClick)=\"onPlayButtonClick($event)\" [platform]=\"platform\" [trackableDefaultImage]=\"trackableDefaultImage\">\r\n      </sb-toc-card>\r\n      <sb-toc-card *ngIf=\"!type\" [content]=\"item\" (tocCardClick)=\"onTocCardClick($event)\" [platform]=\"platform\"\r\n        [activeContent]=\"activeContent\" [playBtnConfig]=\"playBtnConfig\" (playButtonClick)=\"onPlayButtonClick($event)\"\r\n        [trackableDefaultImage]=\"trackableDefaultImage\">\r\n      </sb-toc-card>\r\n    </div>\r\n    </ng-container>\r\n  </div>\r\n  </ng-container>\r\n</div>\r\n",
                    providers: [MimeTypePipe],
                    styles: [".sbchapter{border-bottom:.0625rem solid var(--gray-100);padding:0 0 1rem;margin-bottom:1rem}.sbchapter:last-child{border-bottom:0;margin-bottom:0;padding-bottom:0}.sbchapter h4{font-size:.625rem;line-height:1.125rem;color:var(--gray-800);margin-bottom:.5rem}.sbchapter__item{background:var(--white);box-shadow:0 .1875rem .25rem 0 rgba(var(--rc-rgba-primary),.1);border:.03125rem solid rgba(var(--rc-rgba-primary),.5);display:flex;align-items:center;justify-content:space-between;margin-bottom:.5rem;padding:.5rem;cursor:pointer;min-height:3.5rem}.sbchapter__item h4{font-size:.75rem;line-height:1.25rem;color:var(--primary-400);margin:0;padding:0}.sbchapter__item .sbchapter__img{width:1.5rem;height:1.5rem;flex:0 0 1.5rem}.sbchapter__item .sbchapter__img img{width:100%}.sbchapter__item .sbchapter__img .icon-svg svg.icon .icon-svg--primary{fill:#9cb9ff}.sbchapter__item:hover{background:var(--gray-0)}.sbchapter__item--active,.sbchapter__item--active:hover{background:var(--primary-100)}.sbchapter-open{border-bottom:.0625rem solid #e0e0e0;padding-bottom:var(--base-block-space)}.sbchapter-open__title{font-size:.875rem;font-weight:700;color:var(--primary-400);margin:0;padding:1rem;width:100%}.sbchapter-open__topics{padding:0}.sbchapter-open__topics__title{font-size:.875rem;line-height:1.375rem;margin:0 0 .5rem;color:var(--primary-400);padding:0 1rem}.sbchapter-open__topic{font-size:.75rem;line-height:1.25rem;padding:8px 2rem;margin:0;color:var(--primary-400)}.sbchapter-open__topic--active{background:var(--primary-100)}.sbchapter-open__topic:hover{background:var(--gray-0)}.sbsmartscroll-style::-webkit-scrollbar{width:.3125rem;height:.3125rem;background-color:var(--primary-400);-webkit-appearance:none}.sbsmartscroll-style::-webkit-scrollbar-thumb{background-color:var(--gray-400)}.sbsmartscroll-style::-webkit-scrollbar-track{-webkit-box-shadow:inset 0 0 .375rem rgba(var(--rc-rgba-black),0);background-color:var(--gray-0)}.heading{font-size:.875rem;line-height:1.375rem;font-weight:700;text-align:center;color:var(--gray-400);padding:1rem}.child-content-padding{padding:0}.sb-content__bar{margin:.5rem 0;background:var(--gray-0)}"]
                }] }
    ];
    /** @nocollapse */
    TocItemComponent.ctorParameters = function () { return []; };
    TocItemComponent.propDecorators = {
        accordianConfig: [{ type: Input }],
        accordionItems: [{ type: ViewChildren, args: ['sbAccordionItem',] }],
        tocData: [{ type: Input }],
        activeMimeTypeFilter: [{ type: Input }],
        noContentMessage: [{ type: Input }],
        contentStatus: [{ type: Input }],
        selectMode: [{ type: Input }],
        selectAll: [{ type: Input }],
        playBtnConfig: [{ type: Input }],
        platform: [{ type: Input }],
        trackableDefaultImage: [{ type: Input }],
        divs: [{ type: ViewChild, args: ['chapter', { static: false },] }],
        chapterContainer: [{ type: ViewChildren, args: ['chapterContainer',] }],
        type: [{ type: Input }],
        activeContent: [{ type: Input }],
        recogniseCollection: [{ type: Input }],
        tocCardClick: [{ type: Output }],
        noContent: [{ type: Output }],
        selectedItem: [{ type: Output }],
        playButtonClick: [{ type: Output }]
    };
    return TocItemComponent;
}());

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var AccordionComponent = /** @class */ (function () {
    function AccordionComponent() {
        this.openCloseItems = new Subject();
        this.isHiidden = true;
        this.cardClick = new EventEmitter();
        this.multiValue = false;
    }
    Object.defineProperty(AccordionComponent.prototype, "multi", {
        get: /**
         * @return {?}
         */
        function () {
            return this.multiValue;
        },
        set: /**
         * @param {?} val
         * @return {?}
         */
        function (val) {
            this.multiValue = convertToBoolProperty(val);
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @return {?}
     */
    AccordionComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
    };
    /**
     * Opens all enabled accordion items.
     */
    /**
     * Opens all enabled accordion items.
     * @return {?}
     */
    AccordionComponent.prototype.openAll = /**
     * Opens all enabled accordion items.
     * @return {?}
     */
    function () {
        if (this.multi) {
            this.openCloseItems.next(false);
        }
    };
    /**
     * Closes all enabled accordion items.
     */
    /**
     * Closes all enabled accordion items.
     * @return {?}
     */
    AccordionComponent.prototype.closeAll = /**
     * Closes all enabled accordion items.
     * @return {?}
     */
    function () {
        this.openCloseItems.next(true);
    };
    AccordionComponent.decorators = [
        { type: Component, args: [{
                    selector: 'sb-accordion',
                    template: "<div class=\"sb-accordion-item\">\r\n<ng-content select=\"sb-accordion-item\"></ng-content>\r\n</div>",
                    styles: ["::ng-deep .expanded .sbaccordion{margin-bottom:1.5rem}"]
                }] }
    ];
    /** @nocollapse */
    AccordionComponent.ctorParameters = function () { return []; };
    AccordionComponent.propDecorators = {
        multi: [{ type: Input, args: ['multi',] }],
        isHiidden: [{ type: Input }],
        cardClick: [{ type: Output }]
    };
    return AccordionComponent;
}());
/**
 * @param {?} val
 * @return {?}
 */
function convertToBoolProperty(val) {
    if (typeof val === 'string') {
        val = val.toLowerCase().trim();
        return (val === 'true' || val === '');
    }
    return !!val;
}

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var AccordionItemComponent = /** @class */ (function () {
    function AccordionItemComponent(accordion) {
        this.accordion = accordion;
        this.collapsedValue = true;
        this.collapsedChange = new EventEmitter();
    }
    Object.defineProperty(AccordionItemComponent.prototype, "collapsed", {
        /**
         * Item is collapse (`true` by default)
         * type {boolean}
         */
        get: /**
         * Item is collapse (`true` by default)
         * type {boolean}
         * @return {?}
         */
        function () {
            return this.collapsedValue;
        },
        set: /**
         * @param {?} val
         * @return {?}
         */
        function (val) {
            /** @type {?} */
            var newVal = convertToBoolProperty$1(val);
            if (this.collapsedValue === newVal) {
                return;
            }
            this.collapsedValue = newVal;
            this.collapsedChange.emit(this.collapsedValue);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AccordionItemComponent.prototype, "expanded", {
        /**
         * Item is expanded (`false` by default)
         * type {boolean}
         */
        get: /**
         * Item is expanded (`false` by default)
         * type {boolean}
         * @return {?}
         */
        function () {
            return !this.collapsed;
        },
        set: /**
         * @param {?} val
         * @return {?}
         */
        function (val) {
            this.collapsedValue = !convertToBoolProperty$1(val);
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @return {?}
     */
    AccordionItemComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        var _this = this;
        this.accordion.openCloseItems
            .subscribe((/**
         * @param {?} collapsed
         * @return {?}
         */
        function (collapsed) {
            _this.collapsed = collapsed;
        }));
    };
    /**
     * Open/close the item
     */
    /**
     * Open/close the item
     * @return {?}
     */
    AccordionItemComponent.prototype.toggle = /**
     * Open/close the item
     * @return {?}
     */
    function () {
        // we need this temporary variable as `openCloseItems.next` will change current value we need to save
        /** @type {?} */
        var willSet = !this.collapsed;
        if (!this.accordion.multi) {
            this.accordion.openCloseItems.next(true);
        }
        this.collapsed = willSet;
    };
    /**
     * @return {?}
     */
    AccordionItemComponent.prototype.open = /**
     * @return {?}
     */
    function () {
        this.collapsed = false;
    };
    /**
     * @return {?}
     */
    AccordionItemComponent.prototype.close = /**
     * @return {?}
     */
    function () {
        this.collapsed = true;
    };
    AccordionItemComponent.decorators = [
        { type: Component, args: [{
                    selector: 'sb-accordion-item',
                    template: "<div class=\"sbaccordion sbaccordion--toc\">\r\n  <div class=\"sbaccordion__panel\">\r\n    <ng-content select=\"sb-accordion-header\"></ng-content>\r\n    <ng-content select=\"sb-accordion-body\"></ng-content>\r\n  </div>\r\n</div>",
                    styles: [".sbaccordion{width:100%;box-shadow:0 .1875rem .25rem 0 rgba(var(--rc-rgba-primary),.1)!important}.sbaccordion__panel{margin-bottom:.5rem}.sbaccordion__panel-header{background:var(--white);padding:.5rem 1rem;display:flex;align-items:center;justify-content:space-between;cursor:pointer;height:3.5rem;border-radius:.25rem;border:1px solid var(--primary-300)}.accordion-item-header-collapsed .sbaccordion__panel-header__title{font-weight:400}"]
                }] }
    ];
    /** @nocollapse */
    AccordionItemComponent.ctorParameters = function () { return [
        { type: AccordionComponent, decorators: [{ type: Host }] }
    ]; };
    AccordionItemComponent.propDecorators = {
        collapsed: [{ type: Input, args: ['collapsed',] }, { type: HostBinding, args: ['class.collapsed',] }],
        expanded: [{ type: Input, args: ['expanded',] }, { type: HostBinding, args: ['class.expanded',] }],
        collapsedChange: [{ type: Output }]
    };
    return AccordionItemComponent;
}());
/**
 * @param {?} val
 * @return {?}
 */
function convertToBoolProperty$1(val) {
    if (typeof val === 'string') {
        val = val.toLowerCase().trim();
        return (val === 'true' || val === '');
    }
    return !!val;
}

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var AccordionHeaderComponent = /** @class */ (function () {
    function AccordionHeaderComponent(accordionItem) {
        this.accordionItem = accordionItem;
        this.title = '';
    }
    Object.defineProperty(AccordionHeaderComponent.prototype, "isCollapsed", {
        get: /**
         * @return {?}
         */
        function () {
            return this.accordionItem.collapsed;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AccordionHeaderComponent.prototype, "expanded", {
        get: /**
         * @return {?}
         */
        function () {
            return !this.accordionItem.collapsed;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @return {?}
     */
    AccordionHeaderComponent.prototype.toggle = /**
     * @return {?}
     */
    function () {
        this.accordionItem.toggle();
    };
    Object.defineProperty(AccordionHeaderComponent.prototype, "state", {
        get: /**
         * @return {?}
         */
        function () {
            if (this.isCollapsed) {
                return 'collapsed';
            }
            if (this.expanded) {
                return 'expanded';
            }
        },
        enumerable: true,
        configurable: true
    });
    AccordionHeaderComponent.decorators = [
        { type: Component, args: [{
                    selector: 'sb-accordion-header',
                    template: "<div class=\"sbaccordion__panel-header\" click=\"toggleHeader()\">\r\n  <h4 class=\"sbaccordion__panel-header__title text-left sb__ellipsis sb__ellipsis--two break-word mr-16 d-flex flex-ai-center\">\r\n    <div class=\"mr-8 progress-circle progress-circle--xs hide\" data-percentage=\"35\">\r\n      <svg class=\"progress-circle__svg\" viewport=\"0 0 2000 2000\">\r\n        <circle class=\"progress-circle__stroke\" r=\"50%\" cx=\"50%\" cy=\"50%\"></circle>\r\n        <circle class=\"progress-circle__stroke\" r=\"50%\" cx=\"50%\" cy=\"50%\"></circle>\r\n      </svg>\r\n      <span></span>\r\n    </div>\r\n    <ng-content></ng-content>\r\n  </h4>\r\n  <i class=\"icon-svg icon-svg--xs icon-arrow-up expansion-indicator\" [@expansionIndicator]=\"state\" >\r\n    <svg class=\"icon icon-svg--primary\">\r\n      <use xlink:href=\"assets/common-consumption/images/sprite.svg#arrow-down\"></use>\r\n    </svg>\r\n  </i>\r\n</div>\r\n",
                    animations: [
                        trigger('expansionIndicator', [
                            state('expanded', style({
                                transform: 'rotate(180deg)',
                            })),
                            transition('collapsed => expanded', animate('100ms ease-in')),
                            transition('expanded => collapsed', animate('100ms ease-out')),
                        ]),
                    ],
                    styles: [".sbaccordion__panel-header{background:var(--white);padding:.5rem 1rem;display:flex;align-items:center;justify-content:space-between;cursor:pointer;height:3.5rem;border-radius:.25rem;border:.5px solid var(--primary-300)}.sbaccordion__panel-header__title{font-size:.875rem;line-height:1.25rem;font-weight:700;color:var(--primary-400);margin:0;padding:0;width:100%}.accordion-item-header-collapsed .sbaccordion__panel-header__title{font-weight:400}::ng-deep .accordion-item-header-expanded .sbaccordion__panel-header{border-bottom-left-radius:0;border-bottom-right-radius:0}.progress-circle{height:2rem;width:2rem;position:relative}.progress-circle span{position:absolute;font-size:.5rem;font-weight:700;margin:0 auto;top:50%;left:50%;transform:translate(-50%,-50%)}.progress-circle__svg{border-radius:50%;height:100%;transform:scaleX(-1) rotate(-90deg);width:100%}.progress-circle__stroke{fill:none;stroke-width:.5rem}.progress-circle__stroke:nth-child(1){stroke:var(--secondary-200)}.progress-circle__stroke:nth-child(2){stroke:var(--gray-100);stroke-dasharray:314.1592%}.progress-circle--xs span{display:none}.progress-circle--xs{height:1.5rem;width:1.5rem}.progress-circle--xs .progress-circle__stroke{stroke-width:.25rem}.progress-circle--sm{height:2rem;width:2rem}.progress-circle--sm .progress-circle__stroke{stroke-width:.5rem}.progress-circle--md{height:3rem;width:3rem}.progress-circle--md .progress-circle__stroke{stroke-width:.75rem}.progress-circle--md span{font-size:.625rem}.progress-circle--lg{height:4rem;width:4rem}.progress-circle--lg .progress-circle__stroke{stroke-width:1rem}.progress-circle--lg span{font-size:.875rem}.progress-circle--xl{height:4.5rem;width:4.5rem}.progress-circle--xl .progress-circle__stroke{stroke-width:1.25rem}.progress-circle--xl span{font-size:1.125rem}.progress-circle--xxl{height:5.5rem;width:5.5rem}.progress-circle--xxl .progress-circle__stroke{stroke-width:1.5rem}.progress-circle--xxl span{font-size:1.25rem}.progress-circle[data-percentage=\"0\"] .progress-circle__stroke:nth-child(2){stroke-dashoffset:calc(314.1592% * (0 / 100))}.progress-circle[data-percentage=\"1\"] .progress-circle__stroke:nth-child(2){stroke-dashoffset:calc(314.1592% * (1 / 100))}.progress-circle[data-percentage=\"2\"] .progress-circle__stroke:nth-child(2){stroke-dashoffset:calc(314.1592% * (2 / 100))}.progress-circle[data-percentage=\"3\"] .progress-circle__stroke:nth-child(2){stroke-dashoffset:calc(314.1592% * (3 / 100))}.progress-circle[data-percentage=\"4\"] .progress-circle__stroke:nth-child(2){stroke-dashoffset:calc(314.1592% * (4 / 100))}.progress-circle[data-percentage=\"5\"] .progress-circle__stroke:nth-child(2){stroke-dashoffset:calc(314.1592% * (5 / 100))}.progress-circle[data-percentage=\"6\"] .progress-circle__stroke:nth-child(2){stroke-dashoffset:calc(314.1592% * (6 / 100))}.progress-circle[data-percentage=\"7\"] .progress-circle__stroke:nth-child(2){stroke-dashoffset:calc(314.1592% * (7 / 100))}.progress-circle[data-percentage=\"8\"] .progress-circle__stroke:nth-child(2){stroke-dashoffset:calc(314.1592% * (8 / 100))}.progress-circle[data-percentage=\"9\"] .progress-circle__stroke:nth-child(2){stroke-dashoffset:calc(314.1592% * (9 / 100))}.progress-circle[data-percentage=\"10\"] .progress-circle__stroke:nth-child(2){stroke-dashoffset:calc(314.1592% * (10 / 100))}.progress-circle[data-percentage=\"11\"] .progress-circle__stroke:nth-child(2){stroke-dashoffset:calc(314.1592% * (11 / 100))}.progress-circle[data-percentage=\"12\"] .progress-circle__stroke:nth-child(2){stroke-dashoffset:calc(314.1592% * (12 / 100))}.progress-circle[data-percentage=\"13\"] .progress-circle__stroke:nth-child(2){stroke-dashoffset:calc(314.1592% * (13 / 100))}.progress-circle[data-percentage=\"14\"] .progress-circle__stroke:nth-child(2){stroke-dashoffset:calc(314.1592% * (14 / 100))}.progress-circle[data-percentage=\"15\"] .progress-circle__stroke:nth-child(2){stroke-dashoffset:calc(314.1592% * (15 / 100))}.progress-circle[data-percentage=\"16\"] .progress-circle__stroke:nth-child(2){stroke-dashoffset:calc(314.1592% * (16 / 100))}.progress-circle[data-percentage=\"17\"] .progress-circle__stroke:nth-child(2){stroke-dashoffset:calc(314.1592% * (17 / 100))}.progress-circle[data-percentage=\"18\"] .progress-circle__stroke:nth-child(2){stroke-dashoffset:calc(314.1592% * (18 / 100))}.progress-circle[data-percentage=\"19\"] .progress-circle__stroke:nth-child(2){stroke-dashoffset:calc(314.1592% * (19 / 100))}.progress-circle[data-percentage=\"20\"] .progress-circle__stroke:nth-child(2){stroke-dashoffset:calc(314.1592% * (20 / 100))}.progress-circle[data-percentage=\"21\"] .progress-circle__stroke:nth-child(2){stroke-dashoffset:calc(314.1592% * (21 / 100))}.progress-circle[data-percentage=\"22\"] .progress-circle__stroke:nth-child(2){stroke-dashoffset:calc(314.1592% * (22 / 100))}.progress-circle[data-percentage=\"23\"] .progress-circle__stroke:nth-child(2){stroke-dashoffset:calc(314.1592% * (23 / 100))}.progress-circle[data-percentage=\"24\"] .progress-circle__stroke:nth-child(2){stroke-dashoffset:calc(314.1592% * (24 / 100))}.progress-circle[data-percentage=\"25\"] .progress-circle__stroke:nth-child(2){stroke-dashoffset:calc(314.1592% * (25 / 100))}.progress-circle[data-percentage=\"26\"] .progress-circle__stroke:nth-child(2){stroke-dashoffset:calc(314.1592% * (26 / 100))}.progress-circle[data-percentage=\"27\"] .progress-circle__stroke:nth-child(2){stroke-dashoffset:calc(314.1592% * (27 / 100))}.progress-circle[data-percentage=\"28\"] .progress-circle__stroke:nth-child(2){stroke-dashoffset:calc(314.1592% * (28 / 100))}.progress-circle[data-percentage=\"29\"] .progress-circle__stroke:nth-child(2){stroke-dashoffset:calc(314.1592% * (29 / 100))}.progress-circle[data-percentage=\"30\"] .progress-circle__stroke:nth-child(2){stroke-dashoffset:calc(314.1592% * (30 / 100))}.progress-circle[data-percentage=\"31\"] .progress-circle__stroke:nth-child(2){stroke-dashoffset:calc(314.1592% * (31 / 100))}.progress-circle[data-percentage=\"32\"] .progress-circle__stroke:nth-child(2){stroke-dashoffset:calc(314.1592% * (32 / 100))}.progress-circle[data-percentage=\"33\"] .progress-circle__stroke:nth-child(2){stroke-dashoffset:calc(314.1592% * (33 / 100))}.progress-circle[data-percentage=\"34\"] .progress-circle__stroke:nth-child(2){stroke-dashoffset:calc(314.1592% * (34 / 100))}.progress-circle[data-percentage=\"35\"] .progress-circle__stroke:nth-child(2){stroke-dashoffset:calc(314.1592% * (35 / 100))}.progress-circle[data-percentage=\"36\"] .progress-circle__stroke:nth-child(2){stroke-dashoffset:calc(314.1592% * (36 / 100))}.progress-circle[data-percentage=\"37\"] .progress-circle__stroke:nth-child(2){stroke-dashoffset:calc(314.1592% * (37 / 100))}.progress-circle[data-percentage=\"38\"] .progress-circle__stroke:nth-child(2){stroke-dashoffset:calc(314.1592% * (38 / 100))}.progress-circle[data-percentage=\"39\"] .progress-circle__stroke:nth-child(2){stroke-dashoffset:calc(314.1592% * (39 / 100))}.progress-circle[data-percentage=\"40\"] .progress-circle__stroke:nth-child(2){stroke-dashoffset:calc(314.1592% * (40 / 100))}.progress-circle[data-percentage=\"41\"] .progress-circle__stroke:nth-child(2){stroke-dashoffset:calc(314.1592% * (41 / 100))}.progress-circle[data-percentage=\"42\"] .progress-circle__stroke:nth-child(2){stroke-dashoffset:calc(314.1592% * (42 / 100))}.progress-circle[data-percentage=\"43\"] .progress-circle__stroke:nth-child(2){stroke-dashoffset:calc(314.1592% * (43 / 100))}.progress-circle[data-percentage=\"44\"] .progress-circle__stroke:nth-child(2){stroke-dashoffset:calc(314.1592% * (44 / 100))}.progress-circle[data-percentage=\"45\"] .progress-circle__stroke:nth-child(2){stroke-dashoffset:calc(314.1592% * (45 / 100))}.progress-circle[data-percentage=\"46\"] .progress-circle__stroke:nth-child(2){stroke-dashoffset:calc(314.1592% * (46 / 100))}.progress-circle[data-percentage=\"47\"] .progress-circle__stroke:nth-child(2){stroke-dashoffset:calc(314.1592% * (47 / 100))}.progress-circle[data-percentage=\"48\"] .progress-circle__stroke:nth-child(2){stroke-dashoffset:calc(314.1592% * (48 / 100))}.progress-circle[data-percentage=\"49\"] .progress-circle__stroke:nth-child(2){stroke-dashoffset:calc(314.1592% * (49 / 100))}.progress-circle[data-percentage=\"50\"] .progress-circle__stroke:nth-child(2){stroke-dashoffset:calc(314.1592% * (50 / 100))}.progress-circle[data-percentage=\"51\"] .progress-circle__stroke:nth-child(2){stroke-dashoffset:calc(314.1592% * (51 / 100))}.progress-circle[data-percentage=\"52\"] .progress-circle__stroke:nth-child(2){stroke-dashoffset:calc(314.1592% * (52 / 100))}.progress-circle[data-percentage=\"53\"] .progress-circle__stroke:nth-child(2){stroke-dashoffset:calc(314.1592% * (53 / 100))}.progress-circle[data-percentage=\"54\"] .progress-circle__stroke:nth-child(2){stroke-dashoffset:calc(314.1592% * (54 / 100))}.progress-circle[data-percentage=\"55\"] .progress-circle__stroke:nth-child(2){stroke-dashoffset:calc(314.1592% * (55 / 100))}.progress-circle[data-percentage=\"56\"] .progress-circle__stroke:nth-child(2){stroke-dashoffset:calc(314.1592% * (56 / 100))}.progress-circle[data-percentage=\"57\"] .progress-circle__stroke:nth-child(2){stroke-dashoffset:calc(314.1592% * (57 / 100))}.progress-circle[data-percentage=\"58\"] .progress-circle__stroke:nth-child(2){stroke-dashoffset:calc(314.1592% * (58 / 100))}.progress-circle[data-percentage=\"59\"] .progress-circle__stroke:nth-child(2){stroke-dashoffset:calc(314.1592% * (59 / 100))}.progress-circle[data-percentage=\"60\"] .progress-circle__stroke:nth-child(2){stroke-dashoffset:calc(314.1592% * (60 / 100))}.progress-circle[data-percentage=\"61\"] .progress-circle__stroke:nth-child(2){stroke-dashoffset:calc(314.1592% * (61 / 100))}.progress-circle[data-percentage=\"62\"] .progress-circle__stroke:nth-child(2){stroke-dashoffset:calc(314.1592% * (62 / 100))}.progress-circle[data-percentage=\"63\"] .progress-circle__stroke:nth-child(2){stroke-dashoffset:calc(314.1592% * (63 / 100))}.progress-circle[data-percentage=\"64\"] .progress-circle__stroke:nth-child(2){stroke-dashoffset:calc(314.1592% * (64 / 100))}.progress-circle[data-percentage=\"65\"] .progress-circle__stroke:nth-child(2){stroke-dashoffset:calc(314.1592% * (65 / 100))}.progress-circle[data-percentage=\"66\"] .progress-circle__stroke:nth-child(2){stroke-dashoffset:calc(314.1592% * (66 / 100))}.progress-circle[data-percentage=\"67\"] .progress-circle__stroke:nth-child(2){stroke-dashoffset:calc(314.1592% * (67 / 100))}.progress-circle[data-percentage=\"68\"] .progress-circle__stroke:nth-child(2){stroke-dashoffset:calc(314.1592% * (68 / 100))}.progress-circle[data-percentage=\"69\"] .progress-circle__stroke:nth-child(2){stroke-dashoffset:calc(314.1592% * (69 / 100))}.progress-circle[data-percentage=\"70\"] .progress-circle__stroke:nth-child(2){stroke-dashoffset:calc(314.1592% * (70 / 100))}.progress-circle[data-percentage=\"71\"] .progress-circle__stroke:nth-child(2){stroke-dashoffset:calc(314.1592% * (71 / 100))}.progress-circle[data-percentage=\"72\"] .progress-circle__stroke:nth-child(2){stroke-dashoffset:calc(314.1592% * (72 / 100))}.progress-circle[data-percentage=\"73\"] .progress-circle__stroke:nth-child(2){stroke-dashoffset:calc(314.1592% * (73 / 100))}.progress-circle[data-percentage=\"74\"] .progress-circle__stroke:nth-child(2){stroke-dashoffset:calc(314.1592% * (74 / 100))}.progress-circle[data-percentage=\"75\"] .progress-circle__stroke:nth-child(2){stroke-dashoffset:calc(314.1592% * (75 / 100))}.progress-circle[data-percentage=\"76\"] .progress-circle__stroke:nth-child(2){stroke-dashoffset:calc(314.1592% * (76 / 100))}.progress-circle[data-percentage=\"77\"] .progress-circle__stroke:nth-child(2){stroke-dashoffset:calc(314.1592% * (77 / 100))}.progress-circle[data-percentage=\"78\"] .progress-circle__stroke:nth-child(2){stroke-dashoffset:calc(314.1592% * (78 / 100))}.progress-circle[data-percentage=\"79\"] .progress-circle__stroke:nth-child(2){stroke-dashoffset:calc(314.1592% * (79 / 100))}.progress-circle[data-percentage=\"80\"] .progress-circle__stroke:nth-child(2){stroke-dashoffset:calc(314.1592% * (80 / 100))}.progress-circle[data-percentage=\"81\"] .progress-circle__stroke:nth-child(2){stroke-dashoffset:calc(314.1592% * (81 / 100))}.progress-circle[data-percentage=\"82\"] .progress-circle__stroke:nth-child(2){stroke-dashoffset:calc(314.1592% * (82 / 100))}.progress-circle[data-percentage=\"83\"] .progress-circle__stroke:nth-child(2){stroke-dashoffset:calc(314.1592% * (83 / 100))}.progress-circle[data-percentage=\"84\"] .progress-circle__stroke:nth-child(2){stroke-dashoffset:calc(314.1592% * (84 / 100))}.progress-circle[data-percentage=\"85\"] .progress-circle__stroke:nth-child(2){stroke-dashoffset:calc(314.1592% * (85 / 100))}.progress-circle[data-percentage=\"86\"] .progress-circle__stroke:nth-child(2){stroke-dashoffset:calc(314.1592% * (86 / 100))}.progress-circle[data-percentage=\"87\"] .progress-circle__stroke:nth-child(2){stroke-dashoffset:calc(314.1592% * (87 / 100))}.progress-circle[data-percentage=\"88\"] .progress-circle__stroke:nth-child(2){stroke-dashoffset:calc(314.1592% * (88 / 100))}.progress-circle[data-percentage=\"89\"] .progress-circle__stroke:nth-child(2){stroke-dashoffset:calc(314.1592% * (89 / 100))}.progress-circle[data-percentage=\"90\"] .progress-circle__stroke:nth-child(2){stroke-dashoffset:calc(314.1592% * (90 / 100))}.progress-circle[data-percentage=\"91\"] .progress-circle__stroke:nth-child(2){stroke-dashoffset:calc(314.1592% * (91 / 100))}.progress-circle[data-percentage=\"92\"] .progress-circle__stroke:nth-child(2){stroke-dashoffset:calc(314.1592% * (92 / 100))}.progress-circle[data-percentage=\"93\"] .progress-circle__stroke:nth-child(2){stroke-dashoffset:calc(314.1592% * (93 / 100))}.progress-circle[data-percentage=\"94\"] .progress-circle__stroke:nth-child(2){stroke-dashoffset:calc(314.1592% * (94 / 100))}.progress-circle[data-percentage=\"95\"] .progress-circle__stroke:nth-child(2){stroke-dashoffset:calc(314.1592% * (95 / 100))}.progress-circle[data-percentage=\"96\"] .progress-circle__stroke:nth-child(2){stroke-dashoffset:calc(314.1592% * (96 / 100))}.progress-circle[data-percentage=\"97\"] .progress-circle__stroke:nth-child(2){stroke-dashoffset:calc(314.1592% * (97 / 100))}.progress-circle[data-percentage=\"98\"] .progress-circle__stroke:nth-child(2){stroke-dashoffset:calc(314.1592% * (98 / 100))}.progress-circle[data-percentage=\"99\"] .progress-circle__stroke:nth-child(2){stroke-dashoffset:calc(314.1592% * (99 / 100))}.progress-circle--success img.icon_progress_check{width:100%}"]
                }] }
    ];
    /** @nocollapse */
    AccordionHeaderComponent.ctorParameters = function () { return [
        { type: AccordionItemComponent, decorators: [{ type: Host }] }
    ]; };
    AccordionHeaderComponent.propDecorators = {
        title: [{ type: Input }],
        isCollapsed: [{ type: HostBinding, args: ['class.accordion-item-header-collapsed',] }],
        expanded: [{ type: HostBinding, args: ['class.accordion-item-header-expanded',] }, { type: HostBinding, args: ['attr.aria-expanded',] }],
        toggle: [{ type: HostListener, args: ['click',] }, { type: HostListener, args: ['keydown.space',] }, { type: HostListener, args: ['keydown.enter',] }]
    };
    return AccordionHeaderComponent;
}());

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/** @type {?} */
var accordionItemBodyTrigger = trigger('accordionItemBody', [
    state('collapsed', style({
        overflow: 'hidden',
        visibility: 'hidden',
        height: 0,
    })),
    state('expanded', style({
        overflow: 'hidden',
        visibility: 'visible',
    })),
    transition('collapsed => expanded', animate('100ms ease-in')),
    transition('expanded => collapsed', animate('100ms ease-out')),
]);
var AccordionBodyComponent = /** @class */ (function () {
    function AccordionBodyComponent(accordionItem) {
        this.accordionItem = accordionItem;
    }
    Object.defineProperty(AccordionBodyComponent.prototype, "state", {
        get: /**
         * @return {?}
         */
        function () {
            return this.accordionItem.collapsed ? 'collapsed' : 'expanded';
        },
        enumerable: true,
        configurable: true
    });
    AccordionBodyComponent.decorators = [
        { type: Component, args: [{
                    selector: 'sb-accordion-body',
                    template: "<div [@accordionItemBody]=\"{ value: state }\">\r\n  <div class=\"sbaccordion__panel-content\">\r\n    <ng-content></ng-content>\r\n  </div>\r\n</div>",
                    animations: [accordionItemBodyTrigger],
                    styles: [".sbaccordion__panel-content{border:.0625rem solid var(--primary-300);background:var(--gray-0);min-height:2rem;padding:1rem;overflow:hidden;overflow-y:auto;max-height:60vh;margin-top:-1px;border-bottom-left-radius:.125rem;border-bottom-right-radius:.125rem}.accordion-item-header-collapsed .sbaccordion__panel-header__title{font-weight:400}"]
                }] }
    ];
    /** @nocollapse */
    AccordionBodyComponent.ctorParameters = function () { return [
        { type: AccordionItemComponent, decorators: [{ type: Host }] }
    ]; };
    return AccordionBodyComponent;
}());

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var AccordionModule = /** @class */ (function () {
    function AccordionModule() {
    }
    AccordionModule.decorators = [
        { type: NgModule, args: [{
                    declarations: [
                        AccordionComponent,
                        AccordionItemComponent,
                        AccordionHeaderComponent,
                        AccordionBodyComponent
                    ],
                    imports: [
                        CommonModule
                    ],
                    exports: [
                        AccordionComponent,
                        AccordionItemComponent,
                        AccordionHeaderComponent,
                        AccordionBodyComponent
                    ]
                },] }
    ];
    return AccordionModule;
}());

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var TocChildItemComponent = /** @class */ (function () {
    function TocChildItemComponent() {
        this.activeMimeTypeFilter = ['all'];
        this.type = TocCardType.TEXTBOOK;
        this.contentStatus = [];
        this.disabled = '';
        this.scoreLabel = '';
        this.tocCardClick = new EventEmitter();
        this.playButtonClick = new EventEmitter();
    }
    /**
     * @return {?}
     */
    TocChildItemComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
    };
    /**
     * @param {?} activeMimeType
     * @param {?} mimeType
     * @param {?} content
     * @return {?}
     */
    TocChildItemComponent.prototype.hasMimeType = /**
     * @param {?} activeMimeType
     * @param {?} mimeType
     * @param {?} content
     * @return {?}
     */
    function (activeMimeType, mimeType, content) {
        if (!activeMimeType) {
            return true;
        }
        else {
            if (activeMimeType.indexOf('all') > -1) {
                // if (content.contentData.mimeType === MimeType.COLLECTION && !content.children) {
                //     return false;
                // }
                return true;
            }
            return !!activeMimeType.find((/**
             * @param {?} m
             * @return {?}
             */
            function (m) { return m === mimeType; }));
        }
    };
    /**
     * @param {?} event
     * @return {?}
     */
    TocChildItemComponent.prototype.tocCardClickHandler = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        this.tocCardClick.emit(__assign({}, event));
    };
    /**
     * @param {?} tocData
     * @param {?} item
     * @return {?}
     */
    TocChildItemComponent.prototype.createUniqueId = /**
     * @param {?} tocData
     * @param {?} item
     * @return {?}
     */
    function (tocData, item) {
        item['sbUniqueIdentifier'] = tocData.identifier + '_' + item.identifier;
    };
    /**
     * @param {?} event
     * @return {?}
     */
    TocChildItemComponent.prototype.onPlayButtonClick = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        this.playButtonClick.emit(__assign({}, event));
    };
    TocChildItemComponent.decorators = [
        { type: Component, args: [{
                    selector: 'sb-toc-child-item',
                    template: "<ng-container *ngIf=\"childData | hasMimeType: activeMimeTypeFilter\">\r\n  <div *ngIf=\"childData?.mimeType === 'application/vnd.ekstep.content-collection' && childData?.children\">\r\n    <h4 class=\"sbchapter__title text-left sb__ellipsis sb__ellipsis--two ml-16 mb-8\" title=\"{{childData?.name}}\">{{childData?.name}}</h4>\r\n  </div>\r\n</ng-container>\r\n\r\n<ng-container *ngIf=\"childData?.mimeType !== 'application/vnd.ekstep.content-collection' && hasMimeType(activeMimeTypeFilter, childData?.mimeType, childData) ||\r\n  (childData?.contentData?.trackable?.enabled === 'Yes' || childData?.trackable?.enabled === 'Yes')\">\r\n  <sb-toc-card [content]=\"childData\" (tocCardClick)=\"tocCardClickHandler($event)\" [activeContent]=\"activeContent\"\r\n    [type]=\"type\" [contentStatus]=\"contentStatus\" [playBtnConfig]=\"playBtnConfig\" (playButtonClick)=\"onPlayButtonClick($event)\"\r\n    [platform]=\"platform\" [trackableDefaultImage]=\"trackableDefaultImage\" [maxAttempts]=\"maxAttempts\" [disabled]=\"disabled\" [scoreLabel]=\"scoreLabel\">\r\n  </sb-toc-card>\r\n</ng-container>\r\n\r\n<div *ngIf=\"childData?.children && !(childData?.contentData?.trackable?.enabled === 'Yes' || childData?.trackable?.enabled === 'Yes')\">\r\n  <div *ngFor=\"let child of childData?.children; let j = index;\" [id]=\"child.identifier\">\r\n    {{ createUniqueId(childData, child) }}\r\n    <sb-toc-child-item [childData]=\"child\" [activeContent]=\"activeContent\" (tocCardClick)=\"tocCardClickHandler($event)\"\r\n      [activeMimeTypeFilter]=\"activeMimeTypeFilter\" [type]=\"type\" [contentStatus]=\"contentStatus\" [playBtnConfig]=\"playBtnConfig\" \r\n      (playButtonClick)=\"onPlayButtonClick($event)\" [platform]=\"platform\" [trackableDefaultImage]=\"trackableDefaultImage\">\r\n    </sb-toc-child-item>\r\n  </div>\r\n</div>",
                    styles: [".sbchapter__title{font-size:.875rem;line-height:1.375rem}"]
                }] }
    ];
    /** @nocollapse */
    TocChildItemComponent.ctorParameters = function () { return []; };
    TocChildItemComponent.propDecorators = {
        childData: [{ type: Input }],
        activeContent: [{ type: Input }],
        activeMimeTypeFilter: [{ type: Input }],
        type: [{ type: Input }],
        contentStatus: [{ type: Input }],
        playBtnConfig: [{ type: Input }],
        platform: [{ type: Input }],
        trackableDefaultImage: [{ type: Input }],
        maxAttempts: [{ type: Input }],
        disabled: [{ type: Input }],
        scoreLabel: [{ type: Input }],
        tocCardClick: [{ type: Output }],
        playButtonClick: [{ type: Output }]
    };
    return TocChildItemComponent;
}());

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var PipesModule = /** @class */ (function () {
    function PipesModule() {
    }
    PipesModule.decorators = [
        { type: NgModule, args: [{
                    declarations: [MimeTypePipe],
                    imports: [
                        CommonModule
                    ],
                    exports: [MimeTypePipe]
                },] }
    ];
    return PipesModule;
}());

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/** @type {?} */
var staticData = {
    "content": {
        "organisation": [
            "ZPHS PALASAMUDRAM",
            "APEKX"
        ],
        "children": [
            {
                "parent": "do_31298113330674073617",
                "identifier": "do_3129811497340272641185",
                "lastStatusChangedOn": "2020-03-19T10:16:44.642+0000",
                "code": "do_3129811497340272641185",
                "keywords": [
                    "biology",
                    "APBSTF"
                ],
                "visibility": "Parent",
                "purpose": "LEARN THE NEW PATTERN ONE WORD ANSWER QUESTIONS",
                "description": "It includes the bit bank for all the lessons of biology in 10th class",
                "index": 1,
                "mimeType": "application/vnd.ekstep.content-collection",
                "createdOn": "2020-03-19T10:16:44.642+0000",
                "versionKey": "1584613004642",
                "framework": "ap_k-12_1",
                "depth": 1,
                "children": [
                    {
                        "parent": "do_3129811497340272641185",
                        "identifier": "do_3129811497340272641186",
                        "code": "do_3129811497340272641186",
                        "visibility": "Parent",
                        "description": "BIT BANK OF NUTRITION",
                        "index": 1,
                        "depth": 2,
                        "children": [
                            {
                                "subject": [
                                    "Biology"
                                ],
                                "mimeType": "application/pdf",
                                "appIcon": "https://ntpproductionall.blob.core.windows.net/ntp-content-production/content/do_312957752291999744156/artifact/apbstf-logo_1581756068016.thumb.jpg",
                                "contentType": "Resource",
                                "lastUpdatedBy": "1d75fc50-792d-4e0f-a1a3-e967768c6df2",
                                "identifier": "do_312957752291999744156",
                                "audience": [
                                    "Learner"
                                ],
                                "visibility": "Default",
                                "name": "APBSTF_BIT BANK_EM_1.NUTRITION",
                                "topic": [
                                    "Nutrition In Plants, Nutrition In Animals"
                                ],
                                "creator": "KIRIMANJESWARA MANJULA",
                            }
                        ],
                        "name": "NUTRITION",
                        "lastUpdatedOn": "2020-03-20T16:15:13.472+0000",
                        "dialcodeRequired": "No",
                        "contentType": "TextBookUnit",
                        "status": "Live",
                        "compatibilityLevel": 1,
                        "lastPublishedOn": "2020-03-20T16:15:13.673+0000",
                        "pkgVersion": 1,
                        "leafNodesCount": 1
                    }
                ],
                "name": "APBSTF_BIT BANK_EM",
                "lastUpdatedOn": "2020-03-20T16:15:13.472+0000",
                "contentType": "TextBookUnit",
                "dialcodeRequired": "No",
                "status": "Live",
                "compatibilityLevel": 1,
                "lastPublishedOn": "2020-03-20T16:15:13.673+0000",
                "pkgVersion": 1,
                "leafNodesCount": 10,
                "downloadUrl": "https://ntpproductionall.blob.core.windows.net/ntp-content-production/ecar_files/do_31298113330674073617/apbstf-bit-bank_1584720913805_do_31298113330674073617_1.0_spine.ecar",
                "variants": "{\"online\":{\"ecarUrl\":\"https://ntpproductionall.blob.core.windows.net/ntp-content-production/ecar_files/do_31298113330674073617/apbstf-bit-bank_1584720914064_do_31298113330674073617_1.0_online.ecar\",\"size\":11419.0},\"spine\":{\"ecarUrl\":\"https://ntpproductionall.blob.core.windows.net/ntp-content-production/ecar_files/do_31298113330674073617/apbstf-bit-bank_1584720913805_do_31298113330674073617_1.0_spine.ecar\",\"size\":507919.0}}"
            }
        ],
        "mediaType": "content",
        "name": "APBSTF BIT BANK",
        "subject": [
            "Biology"
        ],
        "identifier": "do_31298113330674073617",
        "description": "It is a book bank written by a group of state resource persons as per the new blue print and pattern of question paper",
        "resourceType": "Book",
        "gradeLevel": [
            "Class 10"
        ],
        "ownershipType": [
            "createdBy"
        ],
        "appIcon": "https://ntpproductionall.blob.core.windows.net/ntp-content-production/content/do_31298113330674073617/artifact/apbstf-logo_1581756068016.thumb.jpg",
        "medium": [
            "English"
        ],
        "board": "State (Andhra Pradesh)",
        "objectType": "Content"
    }
};

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var TocCurriculumComponent = /** @class */ (function () {
    function TocCurriculumComponent() {
        var _this = this;
        this.tocData = staticData;
        this.activeMimeTypeFilter = ['all'];
        this.noContentMessage = 'No content available';
        this.isAccordion = false;
        this.isChapterListing = false;
        this.type = undefined;
        this.contentStatus = [];
        this.shadowColor = "hsl(0, 0%, 80%)";
        this.progressColor = "#024f9d";
        this.layoutConfig = {};
        this.disabled = '';
        this.tocCardClick = new EventEmitter();
        this.noContent = new EventEmitter();
        this.scoreLabel = '';
        this.isMimeTypeFilterChanged = false;
        this.isSameMimeTypeInChildren = ((/**
         * @param {?} mimeTypesCount
         * @param {?} activeMimeType
         * @return {?}
         */
        function (mimeTypesCount, activeMimeType) {
            /** @type {?} */
            var contentMimeType = Object.keys(JSON.parse(mimeTypesCount));
            return Boolean(activeMimeType.filter((/**
             * @param {?} value
             * @return {?}
             */
            function (value) { return contentMimeType.includes(value); })).length);
        }));
        this.isSameMimeType = (/**
         * @param {?} currentContent
         * @return {?}
         */
        function (currentContent) { return _this.activeMimeTypeFilter.find((/**
         * @param {?} mimeType
         * @return {?}
         */
        function (mimeType) { return mimeType === currentContent.mimeType; })); });
        this.isChildrenPresent = (/**
         * @param {?} currentContent
         * @return {?}
         */
        function (currentContent) { return Boolean(currentContent.children && currentContent.children.length); });
    }
    Object.defineProperty(TocCurriculumComponent.prototype, "MimeTypeMasterData", {
        get: /**
         * @return {?}
         */
        function () { return MimeTypeMasterData; },
        enumerable: true,
        configurable: true
    });
    /**
     * @return {?}
     */
    TocCurriculumComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        this.setActiveContent();
    };
    /**
     * @param {?} changes
     * @return {?}
     */
    TocCurriculumComponent.prototype.ngOnChanges = /**
     * @param {?} changes
     * @return {?}
     */
    function (changes) {
        if (changes.activeMimeTypeFilter) {
            this.isMimeTypeFilterChanged = false;
        }
        else if (changes.tocData) {
            this.setActiveContent();
        }
    };
    /**
     * @return {?}
     */
    TocCurriculumComponent.prototype.setActiveContent = /**
     * @return {?}
     */
    function () {
        if (this.tocData && this.tocData.children) {
            /** @type {?} */
            var flattenDeepContents = this.flattenDeep(this.tocData.children);
            this.activeContent = this.firstNonCollectionContent(flattenDeepContents);
            if (!this.activeContent) {
                this.noContent.emit({ message: 'No Content Available' });
            }
        }
    };
    /**
     * @param {?} content
     * @return {?}
     */
    TocCurriculumComponent.prototype.filterChildren = /**
     * @param {?} content
     * @return {?}
     */
    function (content) {
        // Check for the ActiveMimeType
        if (this.activeMimeTypeFilter.includes('all')) {
            if (content.mimeType === MimeTypeMasterData.COLLECTION) {
                return this.isShowContent(content, true);
            }
            return true; // Return true for all the content except collection mimeType
        }
        else if (content.mimeType && this.isSameMimeType(content)) {
            return true;
        }
        else if (content.mimeType === MimeTypeMasterData.COLLECTION) {
            return this.isShowContent(content, false);
        }
        else {
            return false;
        }
    };
    /**
     * @private
     * @param {?} content
     * @param {?} isActiveFilterAll
     * @return {?}
     */
    TocCurriculumComponent.prototype.isShowContent = /**
     * @private
     * @param {?} content
     * @param {?} isActiveFilterAll
     * @return {?}
     */
    function (content, isActiveFilterAll) {
        var _this = this;
        if (content.mimeTypesCount && !isActiveFilterAll) {
            return this.isSameMimeTypeInChildren(content.mimeTypesCount, this.activeMimeTypeFilter);
        }
        else if (this.isChildrenPresent(content)) {
            /** @type {?} */
            var contentList = this.flattenDeep(content.children);
            return isActiveFilterAll ? contentList.some((/**
             * @param {?} c
             * @return {?}
             */
            function (c) { return c.mimeType !== MimeTypeMasterData.COLLECTION; })) :
                contentList.some((/**
                 * @param {?} c
                 * @return {?}
                 */
                function (c) { return _this.isSameMimeType(c); }));
        }
        else {
            return false;
        }
    };
    /**
     * @param {?} event
     * @param {?} item
     * @return {?}
     */
    TocCurriculumComponent.prototype.onTocChapterClick = /**
     * @param {?} event
     * @param {?} item
     * @return {?}
     */
    function (event, item) {
        /*const rollup = this.getRollup(this.tocData, event.data.sbUniqueIdentifier);
        if (rollup.length) {
          rollup.pop();
        }*/
        this.tocCardClick.emit(__assign({}, event, { item: item }));
    };
    /**
     * @param {?} event
     * @return {?}
     */
    TocCurriculumComponent.prototype.onTocCardClick = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        /** @type {?} */
        var rollup = this.getRollup(this.tocData, event.data.sbUniqueIdentifier);
        if (rollup.length) {
            rollup.pop();
        }
        this.tocCardClick.emit(__assign({}, event, { rollup: rollup }));
    };
    /**
     * @param {?} event
     * @return {?}
     */
    TocCurriculumComponent.prototype.collapsedChangeHandler = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
    };
    /**
     * @private
     * @param {?} contents
     * @return {?}
     */
    TocCurriculumComponent.prototype.firstNonCollectionContent = /**
     * @private
     * @param {?} contents
     * @return {?}
     */
    function (contents) {
        return contents.find((/**
         * @param {?} content
         * @return {?}
         */
        function (content) { return content.mimeType !== 'application/vnd.ekstep.content-collection'; }));
    };
    /**
     * @private
     * @param {?} contents
     * @return {?}
     */
    TocCurriculumComponent.prototype.flattenDeep = /**
     * @private
     * @param {?} contents
     * @return {?}
     */
    function (contents) {
        var _this = this;
        if (contents) {
            return contents.reduce((/**
             * @param {?} acc
             * @param {?} val
             * @return {?}
             */
            function (acc, val) {
                if (val.children) {
                    acc.push(val);
                    return acc.concat(_this.flattenDeep(val.children));
                }
                else {
                    return acc.concat(val);
                }
            }), []);
        }
    };
    /**
     * @param {?} index
     * @param {?} item
     * @return {?}
     */
    TocCurriculumComponent.prototype.isExpanded = /**
     * @param {?} index
     * @param {?} item
     * @return {?}
     */
    function (index, item) {
        return Boolean(index === 0 || item && item.mimeType !== MimeTypeMasterData.COLLECTION);
    };
    /**
     * @param {?} item
     * @param {?} index
     * @return {?}
     */
    TocCurriculumComponent.prototype.isShowBody = /**
     * @param {?} item
     * @param {?} index
     * @return {?}
     */
    function (item, index) {
        var _this = this;
        if (item) {
            /** @type {?} */
            var isShowAllMimeType = (/**
             * @return {?}
             */
            function () { return _this.activeMimeTypeFilter.indexOf('all') > -1; });
            /** @type {?} */
            var isCollection = (/**
             * @return {?}
             */
            function () { return item.mimeType === MimeTypeMasterData.COLLECTION; });
            /** @type {?} */
            var isMathchesMimeType = (/**
             * @return {?}
             */
            function () { return _this.activeMimeTypeFilter.indexOf(item.mimeType) > -1; });
            /** @type {?} */
            var isLastContent = (/**
             * @return {?}
             */
            function () { return _this.tocData.children.length === index + 1; });
            if (this.tocData && isShowAllMimeType() || (isCollection() || isMathchesMimeType())) {
                this.isMimeTypeFilterChanged = true;
                return true;
            }
            else if (this.activeMimeTypeFilter.indexOf(item.mimeType) < 0 && !isLastContent()) {
                return false;
            }
            else if (this.activeMimeTypeFilter.indexOf(item.mimeType) < 0 && isLastContent()) {
                if (this.isMimeTypeFilterChanged) {
                    return false;
                }
                this.isMimeTypeFilterChanged = false;
                return true;
            }
        }
        return false;
    };
    /**
     * @param {?} tree
     * @param {?} identifier
     * @return {?}
     */
    TocCurriculumComponent.prototype.getRollup = /**
     * @param {?} tree
     * @param {?} identifier
     * @return {?}
     */
    function (tree, identifier) {
        /** @type {?} */
        var rollup = [tree.identifier];
        if (tree.sbUniqueIdentifier === identifier) {
            return rollup;
        }
        if (!tree.children || !tree.children.length) {
            return [];
        }
        /** @type {?} */
        var notDone = true;
        /** @type {?} */
        var childRollup;
        /** @type {?} */
        var index = 0;
        while (notDone && tree.children[index]) {
            childRollup = this.getRollup(tree.children[index], identifier);
            if (childRollup && childRollup.length) {
                notDone = false;
            }
            index++;
        }
        if (childRollup && childRollup.length) {
            rollup.push.apply(rollup, __spread(childRollup));
            return rollup;
        }
        else {
            return [];
        }
    };
    /**
     * @param {?} tocData
     * @param {?} item
     * @return {?}
     */
    TocCurriculumComponent.prototype.createUniqueId = /**
     * @param {?} tocData
     * @param {?} item
     * @return {?}
     */
    function (tocData, item) {
        item['sbUniqueIdentifier'] = tocData.identifier + '_' + item.identifier;
    };
    /**
     * @param {?=} item
     * @return {?}
     */
    TocCurriculumComponent.prototype.fetchProgress = /**
     * @param {?=} item
     * @return {?}
     */
    function (item) {
        /** @type {?} */
        var bgColor = this.progressColor;
        /** @type {?} */
        var widthStyle = item.progressPercentage != null ? item.progressPercentage + "%" : "2%";
        return {
            width: widthStyle,
            'background-color': bgColor
        };
    };
    /**
     * @param {?=} item
     * @return {?}
     */
    TocCurriculumComponent.prototype.showCompleted = /**
     * @param {?=} item
     * @return {?}
     */
    function (item) {
        if (item != null && item.progressPercentage != null && item.progressPercentage === 100) {
            return true;
        }
        return false;
    };
    /**
     * @param {?} item
     * @return {?}
     */
    TocCurriculumComponent.prototype.fetchProgressShadow = /**
     * @param {?} item
     * @return {?}
     */
    function (item) {
        /** @type {?} */
        var bgColor = this.shadowColor;
        /** @type {?} */
        var displayStatus = item.progressPercentage != null && item.progressPercentage != "0" ? 'block' : 'none';
        return {
            'background': bgColor,
            display: displayStatus
        };
    };
    /**
     * @param {?} event
     * @return {?}
     */
    TocCurriculumComponent.prototype.onPlayButtonClick = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        /** @type {?} */
        var rollup = this.getRollup(this.tocData, event.data.sbUniqueIdentifier);
        if (rollup.length) {
            rollup.pop();
        }
        this.tocCardClick.emit(__assign({}, event, { rollup: rollup }));
    };
    TocCurriculumComponent.decorators = [
        { type: Component, args: [{
                    selector: 'sb-toc-curriculum',
                    template: "<div *ngIf=\"isAccordion\">\r\n    <div class=\"\" *ngIf=\"tocData?.mimeType === MimeTypeMasterData?.COLLECTION\">\r\n      <sb-toc-item *ngIf=\"type\" [tocData]=\"tocData\" [type]=\"type\" [recogniseCollection]=\"true\"\r\n       (tocCardClick)=\"onTocCardClick($event)\" [contentStatus]=\"contentStatus\" (playButtonClick)=\"onPlayButtonClick($event)\">\r\n      </sb-toc-item>\r\n      <sb-toc-item *ngIf=\"!type\" [tocData]=\"tocData\" [recogniseCollection]=\"true\"></sb-toc-item>\r\n    </div>\r\n    <div class=\"\" *ngIf=\"tocData?.mimeType !== MimeTypeMasterData?.COLLECTION\">\r\n        <sb-toc-card *ngIf=\"type\" [content]=\"tocData\" [type]=\"type\" (tocCardClick)=\"onTocCardClick($event)\"[platform]=\"platform\"\r\n         [activeContent]=\"activeContent\" [contentStatus]=\"contentStatus\" [playBtnConfig]=\"playBtnConfig\" (playButtonClick)=\"onPlayButtonClick($event)\"\r\n         [trackableDefaultImage]=\"trackableDefaultImage\" [scoreLabel]=\"scoreLabel\" [maxAttempts]=\"maxAttempts\" [disabled]=\"disabled\">\r\n          </sb-toc-card>\r\n          <sb-toc-card *ngIf=\"!type\" [content]=\"tocData\"  (tocCardClick)=\"onTocCardClick($event)\" [platform]=\"platform\"\r\n            [activeContent]=\"activeContent\" [playBtnConfig]=\"playBtnConfig\" (playButtonClick)=\"onPlayButtonClick($event)\"\r\n            [trackableDefaultImage]=\"trackableDefaultImage\" [scoreLabel]=\"scoreLabel\" [maxAttempts]=\"maxAttempts\" [disabled]=\"disabled\">\r\n          </sb-toc-card>\r\n    </div>\r\n</div>\r\n<div  *ngIf=\"isChapterListing\">\r\n  <div class=\"sb-curiculum-responsive-grid\">\r\n    <div class=\"sb-curiculum__border\" *ngFor=\"let item of tocData?.children; let index = index;\" (click)=\"onTocChapterClick($event,item)\">\r\n      {{ createUniqueId(tocData, item) }}\r\n      <div class=\"sb-curiculum\" style=\"border:none;\">\r\n      <div class=\"sb--completed\" *ngIf=\"showCompleted(item)\">\r\n          <img alt=\"\" src=\"assets/common-consumption/images/completed.svg\" />\r\n      </div>\r\n      <div class=\"sb-curiculum__chapter\">\r\n        <div class=\"title\">{{item?.name}}</div>\r\n      </div>\r\n      </div>\r\n      <div class=\"sb--card__progressbar\" [ngStyle]=\"fetchProgressShadow(item)\">\r\n        <span [ngStyle]=\"fetchProgress(item)\"></span>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"\" *ngIf=\"!isAccordion && !isChapterListing\">\r\n  \r\n  <div class=\"\">\r\n      <div class=\"sb-curiculum\" *ngFor=\"let item of tocData?.children; let index = index;\">\r\n      {{ createUniqueId(tocData, item) }}\r\n      <div class=\"sb-curiculum__chapter\" *ngIf=\"item?.mimeType === MimeTypeMasterData?.COLLECTION && item?.contentType !== 'TextBook' && item?.contentType !== 'Course'\" \r\n         (click)=\"onTocChapterClick($event,item)\">\r\n        <div class=\"title\">{{item?.name}}</div>\r\n        <div *ngIf=\"item && (item | hasMimeType: activeMimeTypeFilter);else noContent\" #chapterContainer>\r\n          <ng-container *ngIf=\"item?.mimeType !== MimeTypeMasterData?.COLLECTION && !item?.children?.length\" >\r\n            <div class=\"child-content-padding\">\r\n              <sb-toc-card *ngIf=\"type\" [content]=\"item\" [type]=\"type\" (tocCardClick)=\"onTocCardClick($event)\" [platform]=\"platform\"\r\n               [activeContent]=\"activeContent\" [contentStatus]=\"contentStatus\" [playBtnConfig]=\"playBtnConfig\" (playButtonClick)=\"onPlayButtonClick($event)\"\r\n               [trackableDefaultImage]=\"trackableDefaultImage\" [scoreLabel]=\"scoreLabel\" [maxAttempts]=\"maxAttempts\" [disabled]=\"disabled\">\r\n              </sb-toc-card>\r\n              <sb-toc-card *ngIf=\"!type\" [content]=\"item\" (tocCardClick)=\"onTocCardClick($event)\" [platform]=\"platform\"\r\n                [activeContent]=\"activeContent\" [playBtnConfig]=\"playBtnConfig\" (playButtonClick)=\"onPlayButtonClick($event)\"\r\n                [trackableDefaultImage]=\"trackableDefaultImage\" [scoreLabel]=\"scoreLabel\" [maxAttempts]=\"maxAttempts\" [disabled]=\"disabled\">\r\n              </sb-toc-card>\r\n            </div>\r\n          </ng-container>\r\n          <ng-container *ngIf=\"item?.children?.length\">\r\n            <ng-container *ngFor=\"let child of item?.children; let j = index;\">\r\n              {{ createUniqueId(item, child) }}\r\n              <div class=\"sbchapter\" *ngIf=\"filterChildren(child) && child.item?.contentType === 'TextBook'\">\r\n                <sb-library-card></sb-library-card>\r\n              </div>\r\n              <div class=\"sbchapter\" *ngIf=\"filterChildren(child) && child.item?.contentType === 'Course'\">\r\n                <sb-course-card></sb-course-card>\r\n              </div>\r\n              <div class=\"sbchapter\" *ngIf=\"filterChildren(child)\">\r\n                <sb-toc-child-item *ngIf=\"type\" [childData]=\"child\" [type]=\"type\" [activeMimeTypeFilter]=\"activeMimeTypeFilter\"\r\n                  [activeContent]=\"activeContent\" [contentStatus]=\"contentStatus\" (tocCardClick)=\"onTocCardClick($event)\" \r\n                  [playBtnConfig]=\"playBtnConfig\" (playButtonClick)=\"onPlayButtonClick($event)\" [platform]=\"platform\"\r\n                  [trackableDefaultImage]=\"trackableDefaultImage\">\r\n                </sb-toc-child-item>\r\n                <sb-toc-child-item *ngIf=\"!type\" [childData]=\"child\" [activeMimeTypeFilter]=\"activeMimeTypeFilter\"\r\n                  [activeContent]=\"activeContent\" (tocCardClick)=\"onTocCardClick($event)\" [playBtnConfig]=\"playBtnConfig\"\r\n                  (playButtonClick)=\"onPlayButtonClick($event)\" [platform]=\"platform\" [trackableDefaultImage]=\"trackableDefaultImage\">\r\n                </sb-toc-child-item>\r\n              </div>\r\n            </ng-container>\r\n          </ng-container>\r\n        </div>\r\n        <ng-template #noContent>\r\n          <div class=\"heading\">{{noContentMessage}}</div>\r\n        </ng-template>\r\n      </div>\r\n      <div class=\"sb-curiculum__chapter\" *ngIf=\"item?.mimeType !== MimeTypeMasterData?.COLLECTION\">\r\n          <sb-toc-card *ngIf=\"type\" [content]=\"item\" [type]=\"type\" (tocCardClick)=\"onTocCardClick($event)\" [platform]=\"platform\"\r\n          [activeContent]=\"activeContent\" [contentStatus]=\"contentStatus\" [playBtnConfig]=\"playBtnConfig\" (playButtonClick)=\"onPlayButtonClick($event)\"\r\n          [trackableDefaultImage]=\"trackableDefaultImage\" [scoreLabel]=\"scoreLabel\" [maxAttempts]=\"maxAttempts\" [disabled]=\"disabled\">\r\n            </sb-toc-card>\r\n      </div>\r\n      <div class=\"sb-curiculum__chapter\" *ngIf=\"item?.mimeType === MimeTypeMasterData?.COLLECTION && item?.contentType === 'TextBook'\">\r\n          <sb-library-card [content]=\"item\"></sb-library-card>\r\n      </div>\r\n      <div class=\"sb-curiculum__chapter\" *ngIf=\"item?.mimeType === MimeTypeMasterData?.COLLECTION && item?.contentType === 'Course'\">\r\n          <sb-course-card [course]=\"item\"></sb-course-card>\r\n        </div>\r\n    </div>\r\n    </div>\r\n</div>",
                    styles: [".sb--card__progressbar{margin:1rem!important;width:unset!important}.sb-curiculum-responsive-grid{padding:.5rem .5rem 1rem;display:block}.sb-curiculum-responsive-grid .sb-curiculum__border{background:var(--white);box-shadow:0 2px 7px rgba(var(--rc-rgba-black),.16);margin:.5rem 0;padding:.125rem 0}.sb-curiculum-responsive-grid .sb-curiculum__border.active,.sb-curiculum-responsive-grid .sb-curiculum__border:active,.sb-curiculum-responsive-grid .sb-curiculum__border:hover{box-shadow:0 2px 7px rgba(var(--rc-009D53),.65)}.sb-curiculum-responsive-grid .sb-curiculum__border .sb-curiculum.active,.sb-curiculum-responsive-grid .sb-curiculum__border .sb-curiculum:active,.sb-curiculum-responsive-grid .sb-curiculum__border .sb-curiculum:hover{box-shadow:none}.sb-curiculum-responsive-grid .sb-curiculum{position:relative;border-radius:.5rem;padding:.5rem 2.125rem 0 1rem;border:1px solid var(--primary-200);background:var(--white);font-weight:700;display:flex;min-height:48px;flex-direction:column}.sb-curiculum-responsive-grid .sb-curiculum.active,.sb-curiculum-responsive-grid .sb-curiculum:active,.sb-curiculum-responsive-grid .sb-curiculum:hover{box-shadow:0 2px 7px rgba(var(--rc-009D53),.65)}.sb-curiculum-responsive-grid .sb-curiculum__chapter{display:flex;align-items:flex-start;flex:1}.sb-curiculum-responsive-grid .sb-curiculum__chapter .title{font-size:.875rem;color:#3a3a3a;line-height:1.25rem;display:-webkit-box;-webkit-line-clamp:3;overflow:hidden;text-overflow:ellipsis;word-break:break-all}.sb-curiculum-responsive-grid .sb--completed{position:absolute;top:.875rem;right:.5rem}", ".loading-animation{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-fill-mode:forwards;animation-fill-mode:forwards;-webkit-animation-iteration-count:infinite;animation-iteration-count:infinite;-webkit-animation-name:placeload;animation-name:placeload;-webkit-animation-timing-function:linear;animation-timing-function:linear;background:var(--lazyload-bg);background:var(--grey-nuance-lighter);background:linear-gradient(to right,var(--grey-nuance-lighter) 8%,var(--grey-nuance-darker) 18%,var(--grey-nuance-lighter) 33%);background-size:75rem 6.5rem;position:relative}@-webkit-keyframes placeload{0%{background-position:-29.25rem 0}100%{background-position:29.25rem 0}}@keyframes placeload{0%{background-position:-29.25rem 0}100%{background-position:29.25rem 0}}.sb--card--highlighter{height:.75rem;width:100%;margin-top:.3125rem}:host .layout-library{display:flex;flex-direction:column}:host .header{display:flex;flex-direction:row;padding:0;align-items:center}[dir=ltr] :host .header,[dir=rtl] :host .header{margin:1.5rem 0 1rem}:host .header .title{font-family:inherit;text-overflow:ellipsis;overflow:hidden;flex:1;height:1.5rem;color:var(--primary-color);font-size:1.125rem;font-weight:700;text-transform:capitalize;line-height:1.625rem;display:flex;align-items:center}:host .header .title i{vertical-align:middle;height:1.0625rem;width:.875rem;top:0}[dir=ltr] :host .header .title i{margin-right:.5rem}[dir=rtl] :host .header .title i{margin-left:.5rem}:host .header .title .badge{display:inline-block;background:var(--rc-d4d3d3);color:var(--gray-800);text-align:center;padding:0 .75rem;border-radius:.25rem;height:1.5rem;line-height:1.5rem;font-size:1rem;font-weight:400}[dir=ltr] :host .header .title .badge{margin-left:.5rem}[dir=rtl] :host .header .title .badge{margin-right:.5rem}:host .cards-containers{display:-ms-grid;display:grid;grid-template-columns:repeat(auto-fill,minmax(292px,1fr));grid-gap:1rem;grid-row-gap:1.5rem}:host .cards-containers--show-1{grid-template-columns:repeat(auto-fill,minmax(calc(100% / 1.5),1fr))}:host .cards-containers--show-2{grid-template-columns:repeat(auto-fill,minmax(calc(100% / 2.5),1fr))}:host .cards-containers--show-3{grid-template-columns:repeat(auto-fill,minmax(calc(100% / 3.5),1fr))}:host .cards-containers--show-4{grid-template-columns:repeat(auto-fill,minmax(calc(100% / 4.5),1fr))}:host .cards-containers--show-5{grid-template-columns:repeat(auto-fill,minmax(calc(100% / 5.5),1fr))}:host .cards-container{display:flex;flex-direction:row;flex-wrap:wrap;margin:-1.5rem -.5rem 0}:host .cards-container .item{box-sizing:border-box;margin-top:1.5rem}[dir=ltr] :host .cards-container .item,[dir=rtl] :host .cards-container .item{padding:0 .5rem}@media (max-width:767px){:host .cards-container .item{margin-top:1rem}}:host .cards-container .item.show-1{max-width:100%}:host .cards-container .item.show-2{flex:0 0 50%;max-width:50%}:host .cards-container .item.show-3{flex:0 0 33.33%;max-width:33.33%}:host .cards-container .item.show-4{flex:0 0 25%;max-width:25%}:host .cards-container .item.show-5{flex:0 0 20%;max-width:20%}@media (max-width:991px){:host .cards-containers--show-3,:host .cards-containers--show-4,:host .cards-containers--show-5{grid-template-columns:repeat(auto-fill,minmax(calc(100% / 2.5),1fr))}:host .cards-container .item.show-2,:host .cards-container .item.show-3,:host .cards-container .item.show-4,:host .cards-container .item.show-5{flex:0 0 50%;max-width:50%}}@media (max-width:575px){:host .cards-containers--show-2,:host .cards-containers--show-3,:host .cards-containers--show-4,:host .cards-containers--show-5{grid-template-columns:repeat(auto-fill,minmax(calc(100% / 1.5),1fr))}:host .cards-container .item.show-2,:host .cards-container .item.show-3,:host .cards-container .item.show-4,:host .cards-container .item.show-5{flex:0 0 100%;max-width:100%}}@media (min-width:992px) and (max-width:1279px){:host .cards-containers--show-4,:host .cards-containers--show-5{grid-template-columns:repeat(auto-fill,minmax(calc(100% / 3.5),1fr))}:host .cards-container .item.show-4,:host .cards-container .item.show-5{flex:0 0 33.33%;max-width:33.33%}}", ".loading-animation{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-fill-mode:forwards;animation-fill-mode:forwards;-webkit-animation-iteration-count:infinite;animation-iteration-count:infinite;-webkit-animation-name:placeload;animation-name:placeload;-webkit-animation-timing-function:linear;animation-timing-function:linear;background:var(--lazyload-bg);background:var(--grey-nuance-lighter);background:linear-gradient(to right,var(--grey-nuance-lighter) 8%,var(--grey-nuance-darker) 18%,var(--grey-nuance-lighter) 33%);background-size:75rem 6.5rem;position:relative}@-webkit-keyframes placeload{0%{background-position:-29.25rem 0}100%{background-position:29.25rem 0}}@keyframes placeload{0%{background-position:-29.25rem 0}100%{background-position:29.25rem 0}}.sb--card--highlighter{height:.75rem;width:100%;margin-top:.3125rem}:host .sb--card{width:100%;background-color:var(--white);display:flex;flex-direction:column;cursor:pointer;position:relative;margin-top:0;border:0;contain:content;border-radius:.125rem}:host .sb--card:hover{transform:translate(0,0);box-shadow:0 .125rem .4375rem 0 rgba(var(--rc-rgba-black),.16)}@media (max-width:767px){:host .sb--card{box-shadow:0 .125rem .4375rem rgba(var(--rc-rgba-black),.16)}}:host .sb--card__main-area{display:flex;flex-direction:row;align-items:center;height:5.5rem}:host .sb--card__img{height:4.5rem;width:4.5rem;overflow:hidden;flex:0 0 4.5rem;margin:.5rem}:host .sb--card__img .img-container{display:flex;align-items:center;background-color:var(--gray-100);height:4.5rem;width:4.5rem;justify-content:center}:host .sb--card__img .img-container img{max-width:100%}:host .sb--card__info{flex:1;overflow:hidden}[dir=ltr] :host .sb--card__info{padding-right:.5rem}[dir=rtl] :host .sb--card__info{padding-left:.5rem}:host .sb--card__title{color:var(--primary-color);font-size:.875rem;margin:0;line-height:1.25rem}:host .sb--card__meta1{color:var(--gray-800);font-size:.75rem;display:flex;flex-direction:row;align-items:center;flex:1;line-height:1.25rem;margin-top:.25rem}:host .sb--card .data_1{max-width:50%}:host .sb--card .data_2{flex:1}:host .sb--card .dot-divider{width:.25rem;height:.25rem;min-width:.25rem;max-width:.25rem;min-height:.25rem;max-height:.25rem;border-radius:100%;background-color:var(--gray-200);display:inline-block;margin:0 .5rem}:host .sb--card__moreinfo{border-radius:0 0 .125rem .125rem;background-color:var(--rc-FAFAFA);display:flex;flex-direction:row;align-items:stretch;justify-content:space-between;min-height:3.5rem;border-top:0 solid #cacbce}:host .sb--card__meta2{color:var(--gray-800);font-size:.75rem;line-height:.875rem;display:flex;flex-direction:column;flex-wrap:wrap;justify-content:space-around;padding:.5rem}:host .sb--card__meta2_data .label{font-weight:400}:host .sb--card__meta2_data .value{font-weight:700}:host .sb--card__org{color:var(--gray-200)}:host .sb--card__tags{display:flex;flex-direction:row;align-items:center;justify-content:flex-end;flex:1}:host .sb--card__badge{display:flex}:host .sb--card__badge img{width:1.25rem;height:1.25rem}:host .sb--card__type{background:var(--gray-200);position:relative;height:1.25rem;color:var(--white);font-size:.625rem;display:flex;align-items:center}[dir=ltr] :host .sb--card__type{padding-left:.25rem;padding-right:.5rem;margin-left:1rem}[dir=rtl] :host .sb--card__type{padding-left:.5rem;padding-right:.25rem;margin-right:1rem}:host .sb--card__type:before{content:\"\";width:0;height:0;border-width:.625rem .3125rem;border-style:solid;border-color:var(--gray-200) var(--gray-200) var(--gray-200) transparent;position:absolute;left:-10px}html[dir=rtl] :host .sb--card__type:before{right:-.625rem;left:inherit;border-color:var(--gray-200) transparent var(--gray-200) var(--gray-200)}:host .sb--card--recently-viewed .sb--card__img{height:5.5rem;width:5.5rem;flex:0 0 5.5rem;margin:0}:host .sb--card--recently-viewed .sb--card__img .img-container{display:flex;align-items:center;background-color:var(--gray-100);height:5.5rem;width:5.5rem}:host .sb--card--recently-viewed .sb--card__info{padding:.5rem;flex:1}:host .sb--card.selected{border:1px solid #024f9d;border-radius:4px;background-color:rgba(2,79,157,.2)}:host .sb--card.offline .sb--card__img .img-container{display:flex;align-items:center;background-color:var(--tertiary-color);opacity:.5}:host .sb--card.offline .sb--card__img .img-container img{margin:auto;font-size:1.5rem;color:var(--white)}:host .sb--card.offline .sb--card__info,:host .sb--card.offline .sb--card__moreinfo{opacity:.5}:host .sb--card__progressbar{height:.25rem;margin:0;border-radius:0;box-shadow:inset 0 -.0625rem .0625rem rgba(var(--rc-rgba-white),.3);width:100%;background:var(--gray-100)}:host .sb--card__progressbar>span{display:block;height:100%;background-color:var(--secondary-200);background-image:-webkit-gradient(center bottom,var(--secondary-400),var(--secondary-200));box-shadow:inset 0 .125rem .5625rem var(--gray-100),inset 0 -.125rem .375rem rgba(var(--rc-rgba-black),.4);position:relative;overflow:hidden}:host .animate>span:after{content:\"\";position:absolute;top:0;left:0;bottom:0;right:0;background-image:-webkit-gradient(linear,0 0,100% 100%,color-stop(.25,rgba(var(--rc-rgba-white),.2)),color-stop(.25,transparent),color-stop(.5,transparent),color-stop(.5,rgba(var(--rc-rgba-white),.2)),color-stop(.75,rgba(var(--rc-rgba-white),.2)),color-stop(.75,transparent),to(transparent));z-index:1;background-size:3.125rem 3.125rem;overflow:hidden;-webkit-animation:2s linear infinite move;border-radius:1.25rem .5rem .5rem 1.25rem}@-webkit-keyframes move{0%{background-position:0 0}100%{background-position:3.125rem 3.125rem}}:host .completed>span{background-color:var(--secondary-color);background-image:-webkit-linear-gradient(var(--secondary-100),var(--secondary-400))}:host .inprogress>span{background-color:var(--tertiary-color);background-image:-webkit-linear-gradient(var(--tertiary-100),var(--tertiary-400))}:host .notcompleted>span{background-color:var(--red-100);background-image:-webkit-linear-gradient(var(--red-100),var(--red-400))}:host .nostripes>span,:host .nostripes>span:after{-webkit-animation:none;-moz-animation:none;background-image:none}:host .border-top-r-left-right{border-top-left-radius:0;border-top-right-radius:0}::ng-deep .card-hover{display:none;transition:.2s ease-in}::ng-deep .sb--card:hover .card-hover{display:block;z-index:1001}::ng-deep .sb--card:hover .card-hover .child-content{color:var(--white);position:absolute;left:0;right:0;top:0;bottom:0;opacity:.95;border-radius:.125rem;background-color:var(--primary-color);z-index:1;display:flex;align-items:center;transition:.2s ease-in;flex-direction:column;justify-content:space-evenly}::ng-deep .sb--card:hover .card-hover .action-container{display:flex;width:100%;justify-content:center;align-self:center;justify-self:center;flex:1;align-items:center}::ng-deep .sb--card:hover .card-hover .action-item{padding:0 1rem;flex:1;text-align:center}::ng-deep .sb--card:hover .card-hover .action-item .sb-btn.sb-btn-primary[disabled]{background-color:transparent;opacity:.5;border:0;color:var(--white)}::ng-deep .sb--card:hover .card-hover .action-item:not(:last-child){border-right:.0625rem solid rgba(var(--rc-rgba-white),.5)}::ng-deep .sb--card:hover .card-hover .hover-meta-info{font-size:.625rem;opacity:.8;color:var(--white);line-height:.75rem;flex:0 0 25%}.menu::after{content:'\\2807';font-size:1.5rem;color:var(--gray-200);text-align:center;align-items:center;display:flex;justify-content:center;border-radius:50%;padding-left:.375rem;cursor:pointer;width:2rem;height:2rem}.menu:hover::after{background:var(--gray-0)}"]
                }] }
    ];
    /** @nocollapse */
    TocCurriculumComponent.ctorParameters = function () { return []; };
    TocCurriculumComponent.propDecorators = {
        tocData: [{ type: Input }],
        activeMimeTypeFilter: [{ type: Input }],
        noContentMessage: [{ type: Input }],
        isAccordion: [{ type: Input }],
        isChapterListing: [{ type: Input }],
        type: [{ type: Input }],
        contentStatus: [{ type: Input }],
        shadowColor: [{ type: Input }],
        progressColor: [{ type: Input }],
        refresh: [{ type: Input }],
        layoutConfig: [{ type: Input }],
        playBtnConfig: [{ type: Input }],
        platform: [{ type: Input }],
        trackableDefaultImage: [{ type: Input }],
        maxAttempts: [{ type: Input }],
        disabled: [{ type: Input }],
        divs: [{ type: ViewChild, args: ['chapter', { static: false },] }],
        chapterContainer: [{ type: ViewChildren, args: ['chapterContainer',] }],
        activeContent: [{ type: Input }],
        tocCardClick: [{ type: Output }],
        noContent: [{ type: Output }],
        scoreLabel: [{ type: Input }]
    };
    return TocCurriculumComponent;
}());

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var ContentDetailsModule = /** @class */ (function () {
    function ContentDetailsModule() {
    }
    ContentDetailsModule.decorators = [
        { type: NgModule, args: [{
                    declarations: [
                        PlayerActionsComponent,
                        TocItemComponent,
                        TocChildItemComponent,
                        TocCurriculumComponent
                    ],
                    imports: [
                        CommonModule,
                        AccordionModule,
                        CardModule,
                        PipesModule,
                        FormsModule
                    ],
                    exports: [
                        PlayerActionsComponent,
                        TocItemComponent,
                        TocChildItemComponent,
                        TocCurriculumComponent
                    ]
                },] }
    ];
    return ContentDetailsModule;
}());

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/** @type {?} */
var staticData$1 = {
    "faqs": [
        {
            "topic": "A message \"Content Coming Soon\" is displayed on my screen and I cannot see any content for the QR code scanned",
            "description": "Your State is currently creating content for this QR code. The delay is because there is a large number of textbooks for many classes, mediums and subjects. You will see the content  as soon as the State has created it."
        },
        {
            "topic": "I have an Android 4.4 device, I cannot play content on it",
            "description": "Android version 4.4 does not support html5 and thus all content cannot be played. To play content on a device with Android version 4.4, try the following:\n<ul>\n<li>Update the Android version to the latest, preferably to a version greater than 5.1</li>\n<li>Update the {{APP_NAME}} mobile app to the latest version</li>\n</ul>\nThe app prompts to download and install Crosswalk when playing content on Android 4.4.version. Using Crosswalk enables playing most content on Android 4.4 version\n\n"
        }
    ],
    "constants": {
        "charactersLeft": "characters left",
        "explainMsg": "Could you explain the problem?",
        "faqMsg": "Frequently asked questions",
        "help": "Help",
        "helpMsg": "Did this answer help you?",
        "initiateEmailButton": "Initiate email",
        "knowMoreMsg": "What more would you like to know?",
        "noMsg": "No",
        "reportIssue": "Report an issue",
        "reportIssueMsg": "Report other issue",
        "resolveMsg": "Look through the list to resolve your issue",
        "sorryMsg": "Sorry about that!",
        "submitButton": "Submit",
        "tellMoreMsg": "Tell us more about the problem you faced",
        "thanksMsg": "Thank you for your response!",
        "triggerEmailMsg": "After you add details in the text box and tap the Initiate email button, we will trigger an email on your behalf. You can add further details and/or attach files there.",
        "typeHere": "Type Here...",
        "yesMsg": "Yes"
    }
};

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var FaqComponent = /** @class */ (function () {
    function FaqComponent() {
        this.data = staticData$1;
        this.toggleGroupEvent = new EventEmitter();
        this.yesClickedEvent = new EventEmitter();
        this.noClickedEvent = new EventEmitter();
        this.submitClickedEvent = new EventEmitter();
    }
    /**
     * @return {?}
     */
    FaqComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        this.constants = this.data.constants;
        this.faqs = this.data.faqs;
        // tslint:disable-next-line:prefer-for-of
        for (var i = 0; i < this.data.faqs.length; i++) {
            if (this.data.faqs[i].topic.includes('{{APP_NAME}}')) {
                this.data.faqs[i].topic = this.data.faqs[i].topic.replace('{{APP_NAME}}', this.appName);
            }
            else {
                this.data.faqs[i].topic = this.data.faqs[i].topic;
            }
            if (this.data.faqs[i].description.includes('{{APP_NAME}}')) {
                this.data.faqs[i].description = this.data.faqs[i].description.replace('{{APP_NAME}}', this.appName);
            }
            else {
                this.data.faqs[i].description = this.data.faqs[i].description;
            }
        }
    };
    /**
     * @param {?} i
     * @param {?} event
     * @return {?}
     */
    FaqComponent.prototype.toggleGroup = /**
     * @param {?} i
     * @param {?} event
     * @return {?}
     */
    function (i, event) {
        this.isNoClicked = false;
        this.isYesClicked = false;
        this.isSubmitted = false;
        this.value = {};
        this.value.action = 'toggle-clicked';
        this.value.position = i;
        this.value.value = {};
        this.value.value.topic = this.data.faqs[i].topic;
        this.value.value.description = this.data.faqs[i].description;
        if (this.isGroupShown(i)) {
            this.shownGroup = null;
            this.value.isOpened = false;
        }
        else {
            this.shownGroup = i;
            this.value.isOpened = true;
        }
        this.toggleGroupEvent.emit({ event: event, data: this.value });
    };
    // to check whether the card is toggled or not
    // to check whether the card is toggled or not
    /**
     * @param {?} group
     * @return {?}
     */
    FaqComponent.prototype.isGroupShown = 
    // to check whether the card is toggled or not
    /**
     * @param {?} group
     * @return {?}
     */
    function (group) {
        return this.shownGroup === group;
    };
    /**
     * @param {?} i
     * @param {?} event
     * @return {?}
     */
    FaqComponent.prototype.noClicked = /**
     * @param {?} i
     * @param {?} event
     * @return {?}
     */
    function (i, event) {
        this.value = {};
        if (!this.isNoClicked) {
            this.isNoClicked = true;
        }
        this.value.action = 'no-clicked';
        this.value.position = i;
        this.value.value = {};
        this.value.value.topic = this.data.faqs[i].topic;
        this.value.value.description = this.data.faqs[i].description;
        window.parent.postMessage(this.value, '*');
        this.noClickedEvent.emit({ event: event, data: this.value });
    };
    /**
     * @param {?} i
     * @param {?} event
     * @return {?}
     */
    FaqComponent.prototype.yesClicked = /**
     * @param {?} i
     * @param {?} event
     * @return {?}
     */
    function (i, event) {
        this.value = {};
        if (!this.isYesClicked) {
            this.isYesClicked = true;
        }
        this.value.action = 'yes-clicked';
        this.value.position = i;
        this.value.value = {};
        this.value.value.topic = this.data.faqs[i].topic;
        this.value.value.description = this.data.faqs[i].description;
        window.parent.postMessage(this.value, '*');
        this.yesClickedEvent.emit({ event: event, data: this.value });
    };
    /**
     * @param {?} textValue
     * @param {?} i
     * @param {?} event
     * @return {?}
     */
    FaqComponent.prototype.submitClicked = /**
     * @param {?} textValue
     * @param {?} i
     * @param {?} event
     * @return {?}
     */
    function (textValue, i, event) {
        this.isSubmitted = true;
        this.value = {};
        this.value.action = 'submit-clicked';
        this.value.position = i;
        this.value.value = {};
        this.value.value.topic = this.data.faqs[i].topic;
        this.value.value.description = this.data.faqs[i].description;
        this.value.value.knowMoreText = textValue;
        window.parent.postMessage(this.value, '*');
        this.submitClickedEvent.emit({ event: event, data: this.value });
        this.textValue = '';
    };
    FaqComponent.decorators = [
        { type: Component, args: [{
                    selector: 'sb-faq',
                    template: "<div class=\"panel panel-default\" *ngFor=\"let faq of faqs; let i = index\">\r\n  <div data-toggle=\"collapse\" (click)=\"toggleGroup(i,$event)\">\r\n    <div class=\"panel-heading\">\r\n      <div class=\"text-left\" [ngClass]=\"{'panel-title': !isGroupShown(i), 'panel-title-blue': isGroupShown(i)}\">\r\n        {{ faq?.topic}}\r\n        <span>\r\n          <i class=\"icon-svg icon-svg--xs ml-4\" *ngIf=\"!isGroupShown(i)\">\r\n            <svg class=\"icon icon-svg--primary\">\r\n              <use xlink:href=\"assets/common-consumption/images/sprite.svg#arrow-down\"></use>\r\n            </svg>\r\n          </i>\r\n          <i class=\"icon-svg icon-svg--xs ml-4\" *ngIf=\"isGroupShown(i)\">\r\n            <svg class=\"icon icon-svg--primary\">\r\n              <use xlink:href=\"assets/common-consumption/images/sprite.svg#arrow-up\"></use>\r\n            </svg>\r\n          </i>\r\n        </span>\r\n        <!--<img class=\"btn-arrow\" src=\"../../assets/faq/resources/images/Arrow.png\" *ngIf=\"!isGroupShown(i)\">\r\n        <img class=\"btn-arrow\" src=\"../../assets/faq/resources/images/UpArrow.png\" *ngIf=\"isGroupShown(i)\">-->\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div id=\"collapse' + key + '\" class=\"panel-collapse collapse\" *ngIf=\"isGroupShown(i)\">\r\n    <div class=\"panel-body\">\r\n      <p class=\"panelText text-left\" [innerHtml]=\"faq.description\"></p>\r\n    </div>\r\n    <div class=\"panel-interact\" *ngIf=\"!isNoClicked && !isYesClicked\">\r\n      <p class=\"panelText\">{{data?.constants?.helpMsg}}&lrm;</p>\r\n      <div class=\"d-flex flex-jc-center\">\r\n        <button type=\"button\" class=\"sb-btn sb-btn-normal sb-btn-success mr-8\" id=\"btn-yes\"\r\n          (click)=\"yesClicked(i,$event)\">{{data?.constants?.yesMsg}}</button>\r\n      <button type=\"button\" class=\"sb-btn sb-btn-normal sb-btn-outline-primary\" id=\"btn-no\"\r\n        (click)=\"noClicked(i,$event)\">{{data?.constants?.noMsg}}</button>\r\n        </div>\r\n    </div>\r\n    <div class=\"panel-interact\" *ngIf=\"isYesClicked || isSubmitted\">\r\n      <p class=\"yes-clicked\"> {{data?.constants?.thanksMsg}}</p>\r\n      <div *ngIf=\"isNoClicked && isSubmitted && extraTemplate\" class=\"extraTemplate\">\r\n        <ng-container *ngTemplateOutlet=\"extraTemplate\">\r\n        </ng-container>\r\n      </div>\r\n    </div>\r\n    <div class=\"panel-info\" *ngIf=\"!isSubmitted && isNoClicked\">\r\n      <h6>{{data?.constants?.sorryMsg}}</h6>\r\n      <p>{{data?.constants?.knowMoreMsg}}</p>\r\n      <form action=\"#\" id=\"know-more-form\" class=\"know-more-form\" *ngIf=\"!isSubmitted\">\r\n        <textarea type=\"text\" name=\"moreInfo\" placeholder=\"{{constants?.typeHere}}\" class=\"input-text\" maxlength=\"1000\"\r\n          [(ngModel)]=\"textValue\"></textarea>\r\n        <input type=\"submit\" value=\"{{constants?.submitButton}}\" class=\"submit-button\"\r\n          (click)=\"submitClicked(textValue,i,$event)\">\r\n      </form>\r\n      <p class=\"no-clicked\" hidden=\"true\" *ngIf=\"isSubmitted\"> {{data?.constants?.thanksMsg}} </p>\r\n    </div>\r\n  </div>\r\n</div>",
                    styles: [".contentPadding{padding-bottom:0}.scroll-content{padding:0!important}iframe{transform:scale(1,1);height:100%;width:100%}body{background-color:var(--primary-100);font-family:var(--font-stack-en)}.panelText{font-size:.875rem;padding:1rem}.rotate{transform:rotate(180deg)}.btn-arrow{padding:.25rem;margin-top:.25rem;margin-left:.3125rem}.yesBtn{color:var(--secondary-color)}.btn{cursor:pointer}p{font-size:.875rem}.help-header,.help-header-send-email{background:var(--primary-color);color:var(--white);padding:1rem}.help-header-send-email>h4,.help-header>h4{padding:0;font-weight:700;max-width:64rem;margin:0 auto}.help-header-send-email>p,.help-header>p{font-weight:100;max-width:64rem;margin:0 auto}.panel-title{display:flex;align-items:flex-start;justify-content:space-between}.panel-title-blue{display:flex;align-items:flex-start;justify-content:space-between;color:var(--primary-color)}.info-msg{background-color:var(--primary-0)}.report-text{padding-left:.375rem}.icon-svg{position:relative;top:.0625rem;display:inline-block;font-style:normal;font-weight:400;line-height:1;-webkit-font-smoothing:antialiased;opacity:1}.icon-svg svg.icon{width:100%;height:inherit}.icon-svg--xs{width:var(--icon-svg-xs);height:var(--icon-svg-xs)}.icon-svg--sm{width:var(--icon-svg-sm);height:var(--icon-svg-sm)}.icon-svg--md{width:var(--icon-svg-md);height:var(--icon-svg-md)}.icon-svg--lg{width:var(--icon-svg-lg);height:var(--icon-svg-lg)}.icon-svg--xl{width:var(--icon-svg-xl);height:var(--icon-svg-xl)}.icon-svg--white{fill:var(--white)}.icon-svg--primary{fill:var(--primary-color)}.icon-svg--secondary{fill:var(--secondary-color)}.icon-svg--tertiary{fill:var(--tertiary-color)}.icon-svg--red{fill:var(--red-400)}.icon-svg--gray{fill:var(--gray-800)}@media only screen and (max-width:768px){.info-msg-send-email>p,.info-msg>p{padding:.5rem 1rem;max-width:64rem;margin:0 auto}}@media only screen and (min-width:768px){.info-msg-send-email>p,.info-msg>p{padding:1rem 0;max-width:64rem;margin:0 auto}}.icon{color:var(--primary-color);float:right}.panel{border-radius:0!important;border-top:0;border-left:0;border-right:0;box-shadow:none!important;border-bottom:.0625rem solid #d3d3d3;font-size:1rem}.panel-heading{padding:1rem;cursor:pointer}.panel-group{margin:0 auto;max-width:64rem}.panel-group .panel+.panel{border-radius:0;margin-top:0}.panel-default>.panel-heading{background-color:var(--white);border-radius:0!important}.panel-body{background-color:transparent}.panel-interact{text-align:center;padding:1.25rem}.panel-interact>button{margin:.625rem .3125rem 0}.panel-interact>p{margin:0}.no-clicked,.yes-clicked{padding:.625rem!important;margin:.625rem auto auto!important;background:var(--primary-0);width:12.5rem;border-radius:.25rem;color:var(--secondary-color);text-align:center}.panel-info{text-align:center;max-width:64rem;margin:0 auto}.panel-info>h6{font-weight:700;margin-top:1.25rem;margin-bottom:0}.input-text{width:100%;height:4.375rem;border-radius:.3125rem;box-shadow:none;border-width:.0625rem;border-style:solid;border-color:var(--rc-c3c3c3);padding:.5rem 0 0 .5rem;resize:none}.submit-button{width:100%;color:var(--white);background:var(--primary-color);height:2.5rem;border-radius:.25rem;border-style:solid;border-color:var(--primary-color);margin:.625rem 0 1rem;outline:0}@media only screen and (max-width:768px){.report-button{min-width:90vw;color:var(--white);background:var(--primary-color);height:2.5rem;border-radius:.25rem;border-style:solid;border-color:var(--primary-color);outline:0}p{margin:0;font-weight:400}.panel-body{padding:.5rem 1rem}#textareainfo{opacity:.5;position:absolute;bottom:-.8125rem;right:0;font-weight:400;font-size:.75rem}.initiate-email-info-button{left:0;right:0;position:fixed;top:80vh;padding:0 1rem}}@media only screen and (min-width:768px){.report-button{min-width:64rem;color:var(--white);background:var(--primary-color);height:2.5rem;border-radius:.25rem;border-style:solid;border-color:var(--primary-color);outline:0}}img>.report-button{padding-bottom:.25rem;padding-right:.0625rem}.send-email{text-align:center;padding:.9375rem;background:#f0f8ff;--padding-bottom:0px}.send-email-form{text-align:center;margin:0 1rem}#send-email-form{height:40vh;position:relative}.send-email-info{padding:.625rem 0;font-weight:400;font-size:.75rem;text-align:justify}#know-more-form{margin:0 1rem}@media only screen and (min-width:768px){.send-email-form{max-width:64.0625rem;margin:auto}.send-email-info{max-width:35.625rem;padding:.625rem 0!important;margin:left;float:left}.submit-button{width:9.375rem;float:right;color:var(--white);background:var(--primary-color);border-radius:0;border-style:solid;border-color:var(--primary-color);margin:.625rem 0 1rem;height:2rem;outline:0}.panel-info{overflow:hidden;text-align:left}.panel-info>h6,.panel-info>p{margin:0 0 0 .9375rem}#initiate-email{margin-top:.625rem}}.input-text-form{width:100%;height:8rem;border-radius:.3125rem;box-shadow:none;border-width:.0625rem;border-style:solid;border-color:var(--rc-c3c3c3);padding:.9375rem;resize:none}::-webkit-input-placeholder{color:var(--gray-200);font-size:.875rem;font-weight:400}::-moz-placeholder{color:var(--gray-200);font-size:.875rem;font-weight:400}:-ms-input-placeholder{color:var(--gray-200);font-size:.875rem;font-weight:400}::-ms-input-placeholder{color:var(--gray-200);font-size:.875rem;font-weight:400}::placeholder{color:var(--gray-200);font-size:.875rem;font-weight:400}a{color:var(--gray)}a:active,a:hover{text-decoration:none;color:none}.extraTemplate{display:flex;align-items:center;justify-content:center;margin-top:18px}"]
                }] }
    ];
    /** @nocollapse */
    FaqComponent.ctorParameters = function () { return []; };
    FaqComponent.propDecorators = {
        data: [{ type: Input }],
        appName: [{ type: Input }],
        extraTemplate: [{ type: Input }],
        toggleGroupEvent: [{ type: Output }],
        yesClickedEvent: [{ type: Output }],
        noClickedEvent: [{ type: Output }],
        submitClickedEvent: [{ type: Output }]
    };
    return FaqComponent;
}());

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var FaqModule = /** @class */ (function () {
    function FaqModule() {
    }
    FaqModule.decorators = [
        { type: NgModule, args: [{
                    declarations: [FaqComponent],
                    imports: [
                        CommonModule,
                        FormsModule
                    ],
                    exports: [FaqComponent]
                },] }
    ];
    return FaqModule;
}());

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var InfoComponent = /** @class */ (function () {
    function InfoComponent() {
    }
    /**
     * @return {?}
     */
    InfoComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
    };
    InfoComponent.decorators = [
        { type: Component, args: [{
                    selector: 'sb-info',
                    template: "<!-- close button -->\r\n  <a class=\"close\" ><i class=\"icon-svg icon-svg--xs icon-close\"><svg class=\"icon icon-svg--primary\">\r\n    <use xlink:href=\"assets/common-consumption/images/sprite.svg#close\"></use>\r\n  </svg></i></a>\r\n\r\n  <!-- section title -->\r\n  <h4 class=\"sb-group-container__title\">Section Title Comes here</h4>\r\n\r\n    <!-- section image -->\r\n  <img alt=\"\" src=\"assets/common-consumption/images/welcome-group-img.svg\" class=\"sb-group-container__img\" />\r\n\r\n    <!-- section description -->\r\n  <p class=\"sb-group-container__description\">Section para Comes here</p>\r\n\r\n  <!-- section action -->\r\n  <button type=\"button\" class=\"sb-btn sb-btn-sm sb-btn-primary text-uppercase w-100\">Action button<span\r\n    class='arrow-icon pull-right'><i class=\"icon-svg icon-svg--xxs icon-back\">\r\n      <svg class=\"icon icon-svg--white\">\r\n        <use xlink:href=\"assets/common-consumption/images/sprite.svg#arrow-long-right\"></use>\r\n</svg></i></span></button>",
                    styles: [".close{width:2rem;height:2rem;border-radius:50%;position:absolute;right:.5rem;top:.5rem;display:flex;justify-content:center;align-items:center;cursor:pointer}.sb-group-container__title{color:var(--gray-800);font-size:1.25rem;font-weight:700;letter-spacing:0;line-height:1.75rem;text-align:center}.sb-group-container__img{width:13.75rem}.sb-group-container__description{color:var(--gray-800);font-size:.875rem;line-height:1.375rem}"]
                }] }
    ];
    /** @nocollapse */
    InfoComponent.ctorParameters = function () { return []; };
    return InfoComponent;
}());

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var PagesModule = /** @class */ (function () {
    function PagesModule() {
    }
    PagesModule.decorators = [
        { type: NgModule, args: [{
                    declarations: [InfoComponent],
                    imports: [
                        CommonModule
                    ]
                },] }
    ];
    return PagesModule;
}());

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var CertificateActionsComponent = /** @class */ (function () {
    function CertificateActionsComponent(domSanitizer) {
        this.domSanitizer = domSanitizer;
        this.select = { show: false, label: 'Select', name: 'select' };
        this.preview = { show: false, label: 'Preview', name: 'preview' };
        this.remove = { show: false, label: 'Remove', name: 'remove' };
        this.isSelectedTemplate = false;
        this.actionButtons = [];
        this.buttonClick = new EventEmitter();
        this.showOverlay = true;
        this.templateUrl = '';
    }
    /**
     * @param {?} event
     * @param {?} name
     * @return {?}
     */
    CertificateActionsComponent.prototype.onButtonClick = /**
     * @param {?} event
     * @param {?} name
     * @return {?}
     */
    function (event, name) {
        if (name === 'select') {
            this.isSelectedTemplate = true;
            this.showOverlay = false;
        }
        this.buttonClick.emit({ event: event, name: name });
    };
    /**
     * @return {?}
     */
    CertificateActionsComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        if (this.template) {
            this.templateUrl = this.domSanitizer.bypassSecurityTrustResourceUrl(this.template);
        }
    };
    CertificateActionsComponent.decorators = [
        { type: Component, args: [{
                    selector: 'sb-certificate-actions',
                    template: "<div class=\"select-template-container d-flex flex-ai-center flex-jc-center flex-dc mb-16\">\r\n  <div class=\"select-template-container__content\">\r\n    <div class=\"template-checkbox\">\r\n      <img *ngIf=\"isSelectedTemplate\" src=\"assets/common-consumption/images/checked-icon.svg\" width=\"18px\" height=\"18px\" alt=\"\">\r\n    </div>\r\n    <div class=\"template-image\">\r\n      <embed [src]=\"templateUrl\" class=\"template-img\" type=\"image/svg+xml\" /></div>\r\n  </div>\r\n  <div [ngClass]=\"{'overlay-container': showOverlay}\">\r\n    <div class=\"d-flex flex-ai-center flex-jc-center flex-dc overlay-buttons\">\r\n      <button type=\"button\" *ngIf=\"select?.show\" (click)=\"onButtonClick($event, select?.name)\"\r\n        class=\"d-flex sb-btn sb-btn-normal sb-btn-no-border mb-16\">\r\n        <img src=\"assets/common-consumption/images/select-icon.svg\" width=\"16px\" height=\"16px\" class=\"mr-8\" alt=\"\">\r\n        <span class=\"sb-color-primary font-weight-bold\">{{select?.label}}</span>\r\n      </button>\r\n\r\n      <button type=\"button\" *ngIf=\"remove?.show\" (click)=\"onButtonClick($event, remove?.name)\"\r\n        class=\"d-flex sb-btn sb-btn-normal sb-btn-no-border mb-16\">\r\n        <img src=\"assets/common-consumption/images/bin.svg\" width=\"16px\" height=\"16px\" class=\"mr-8\" alt=\"\">\r\n        <span class=\"sb-color-error font-weight-bold\">{{remove?.label}}</span>\r\n      </button>\r\n\r\n      <button type=\"button\" *ngIf=\"preview?.show\" (click)=\"onButtonClick($event, preview?.name)\"\r\n        class=\"d-flex sb-btn sb-btn-normal sb-btn-no-border\">\r\n        <img src=\"assets/common-consumption/images/preview-icon.svg\" width=\"14px\" height=\"14px\" class=\"mr-8\" alt=\"\">\r\n        <span class=\"sb-color-primary font-weight-bold\">{{preview?.label}}</span></button>\r\n    </div>\r\n  </div>\r\n</div>\r\n",
                    styles: [".select-template-container{position:relative}.select-template-container__content{display:block;width:100%;height:auto}.select-template-container__content .template-checkbox{position:absolute;top:.25rem;right:.25rem}.select-template-container__content .template-image{border-radius:.25rem;width:100%}.select-template-container__content .template-image .template-img{max-width:100%;border-radius:.25rem;width:100%;background:var(--white)}.overlay-container{position:absolute;top:0;bottom:0;left:0;right:0;height:100%;width:100%;opacity:0;transition:.5s;background-color:rgba(0,0,0,.2)}.select-template-container:hover .overlay-container{opacity:1}.overlay-buttons{position:absolute;width:100%;height:100%}.overlay-buttons .sb-btn-no-border{box-shadow:0 1.25rem 2.5rem -.625rem rgba(2,79,157,.3);background:var(--white);border:0}.sb-btn-select{padding:.5rem 1.3rem}.sb-btn-content{max-width:200px;white-space:normal;word-break:break-word;overflow:hidden;text-overflow:ellipsis;-webkit-line-clamp:2;display:-webkit-box;-webkit-box-orient:vertical}"]
                }] }
    ];
    /** @nocollapse */
    CertificateActionsComponent.ctorParameters = function () { return [
        { type: DomSanitizer }
    ]; };
    CertificateActionsComponent.propDecorators = {
        select: [{ type: Input }],
        preview: [{ type: Input }],
        remove: [{ type: Input }],
        template: [{ type: Input }],
        isSelectedTemplate: [{ type: Input }],
        actionButtons: [{ type: Input }],
        buttonClick: [{ type: Output }]
    };
    return CertificateActionsComponent;
}());

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var CertificateActionsModule = /** @class */ (function () {
    function CertificateActionsModule() {
    }
    CertificateActionsModule.decorators = [
        { type: NgModule, args: [{
                    declarations: [CertificateActionsComponent],
                    imports: [
                        CommonModule
                    ],
                    exports: [CertificateActionsComponent]
                },] }
    ];
    return CertificateActionsModule;
}());

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/** @enum {string} */
var PillShape = {
    CIRCLE: 'circle',
    BOX: 'box',
    IMAGE_OVERLAP: 'image_overlap',
    DEFAULT: 'default',
};
/** @enum {string} */
var PillsViewType = {
    SCROLL: 'scroll',
    NONE: 'none',
};
/** @enum {string} */
var PillBorder = {
    ROUNDED: 'rounded',
    NONE: 'none',
};
/** @enum {string} */
var SelectMode = {
    SINGLE: 'single',
    MULTIPLE: 'multiple',
};
/** @enum {string} */
var PillsMultiRow = {
    DEFAULT: 'default',
    SINGLE: 'single',
    DOUBLE_VIEW_ROW: 'double_view_row',
    DOUBLE_VIEW_COLUMN: 'double_view_column',
};
/** @enum {string} */
var ShowMoreViewType = {
    EXPAND: 'expand',
    NEW_SCREEN: 'new_screen',
};

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var PillItemComponent = /** @class */ (function () {
    function PillItemComponent() {
        this.click = new EventEmitter();
    }
    /**
     * @param {?} event
     * @return {?}
     */
    PillItemComponent.prototype.onClick = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        this.click.emit(event);
        this.selected = !this.selected;
        if (this.onSelect) {
            this.onSelect(this, event);
        }
    };
    PillItemComponent.decorators = [
        { type: Component, args: [{
                    selector: 'sb-pill-item',
                    template: "<ng-template>\r\n  <div class=\"item\" [ngStyle]=\"{'background-color':theme?.pillBgColor}\" (click)=\"onClick($event)\">\r\n    <span *ngIf=\"icon\" class=\"img\" [ngStyle]=\"{'background-color':theme?.iconBgColor}\">\r\n      <img src=\"{{icon}}\" class=\"sb-icon-img sb-icon-img-sm\" />\r\n    </span>\r\n    <label *ngIf=\"name\">{{name}}</label>\r\n  </div>\r\n</ng-template>",
                    styles: ["::ng-deep .sb-label-grid{display:-ms-grid;display:grid;gap:.5rem}::ng-deep .sb-label-grid .sb-icon-img{display:none;margin-right:.5rem}::ng-deep .sb-label-grid .item{display:flex;border:1px solid #ddd;background:#fff;border-radius:4px;box-shadow:0 0 .5rem .25rem rgba(155,155,155,.2);transition:.3s ease-in-out}::ng-deep .sb-label-grid .item:hover{box-shadow:none;transform:translate(0,0) scale(.95);z-index:99;background:#f2f2f2}::ng-deep .sb-label-grid.show-icon .sb-icon-img{display:block}html[dir=rtl] ::ng-deep .sb-label-grid.show-icon .sb-icon-img{margin-left:.5rem;margin-right:0}::ng-deep .sb-label-grid.show-icon .sb-icon-img.sb-icon-img-sm{width:1.5rem}::ng-deep .sb-label-grid.show-icon .sb-icon-img.sb-icon-img-md{width:2rem}::ng-deep .sb-label-grid.show-icon .sb-icon-img.sb-icon-img-lg{width:2.5rem}::ng-deep .sb-label-grid.show-icon .sb-icon-img.sb-icon-img-xl{width:3rem}::ng-deep .sb-label-grid.show-icon .sb-icon-img.sb-icon-img-xxxl{width:4rem}::ng-deep .sb-label-grid.border-radius .item{border-radius:2.5rem;padding:.5rem 1rem!important}::ng-deep .sb-label-grid.sb-box-grid{grid-template-columns:repeat(auto-fill,minmax(7.5rem,1fr));grid-auto-rows:minmax(7.5rem,auto)}::ng-deep .sb-label-grid.sb-box-grid.show-icon{align-items:center}::ng-deep .sb-label-grid.sb-box-grid .item{flex-direction:column;align-items:center;justify-content:flex-end;font-weight:700;padding:.5rem .5rem 1rem;height:7.5rem;text-align:center}::ng-deep .sb-label-grid.sb-box-grid .item .sb-icon-img{margin-bottom:.5rem}::ng-deep .sb-label-grid.sb-box-grid .item label{-webkit-box-orient:vertical;display:-webkit-box;-webkit-line-clamp:1;overflow:hidden;text-overflow:ellipsis;word-break:break-word;-webkit-line-clamp:2}::ng-deep .sb-label-grid.sb-box-grid.show-circle .item{border-radius:100%;justify-content:center;width:7.5rem;height:7.5rem;padding:.5rem}::ng-deep .sb-label-grid.sb-box-grid.show-circle .item .sb-icon-img{margin-right:0;margin-bottom:.5rem}::ng-deep .sb-label-grid.sb-box-grid.hscroll{grid-auto-flow:column;grid-auto-columns:minmax(7.5rem,1fr)}::ng-deep .sb-label-grid.sb-pills-grid{display:flex;flex-direction:row;flex-wrap:wrap}::ng-deep .sb-label-grid.sb-pills-grid .item{display:flex;align-items:center;justify-content:flex-start;padding:.5rem;height:2.5rem;flex:none}::ng-deep .sb-label-grid.sb-pills-grid .item label{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;cursor:pointer}::ng-deep .sb-label-grid.sb-pills-grid.hscroll{flex-wrap:nowrap}::ng-deep .sb-label-grid.hscroll{overflow-x:auto;overflow-y:hidden;padding:.75rem 5px}::ng-deep .sb-label-grid.icon-header{display:flex;padding:1.75rem .5rem 0}::ng-deep .sb-label-grid.icon-header .item{justify-content:space-around;height:6rem;width:5.5rem;font-size:.75rem;font-weight:400;overflow:initial;border:0;flex:none;margin-right:.5rem}::ng-deep .sb-label-grid.icon-header .item .img{padding:8px;background:#fff;display:flex;justify-content:center;align-items:center;border-radius:.25rem;width:2.5rem;height:2.5rem;margin-top:-32px;box-shadow:-2px 8px 5px -2px rgba(0,0,0,.1)}::ng-deep .sb-label-grid.icon-header .item .img img{margin:0}::ng-deep .sb-label-grid.two-rows-grid{display:-ms-grid;display:grid;-ms-grid-columns:(minmax(16.375rem,1fr))[5];grid-template-columns:repeat(5,minmax(16.375rem,1fr))}::ng-deep .sb-label-grid.two-rows-grid.row-sequence{grid-auto-flow:row!important}::ng-deep .sb-label-grid.two-rows-grid.column-sequence{grid-auto-flow:column!important;-ms-grid-rows:(4.5rem)[2];grid-template-rows:repeat(2,4.5rem)}::ng-deep .sb-label-grid.two-rows-grid.one-row-grid{-ms-grid-columns:none;grid-template-columns:none}::ng-deep .sb-label-grid.two-rows-grid .item{height:4.5rem;border-radius:1.5rem;border:0}::ng-deep .sb-label-grid.two-rows-grid .item .img{width:3rem;height:3rem;background:#f2f2f2;border-radius:1rem;display:flex;align-items:center;justify-content:center;margin-right:.5rem}::ng-deep .sb-label-grid.two-rows-grid .item .img img{margin:0}"]
                }] }
    ];
    PillItemComponent.propDecorators = {
        template: [{ type: ViewChild, args: [TemplateRef, { static: false },] }],
        name: [{ type: Input }],
        icon: [{ type: Input }],
        value: [{ type: Input }],
        theme: [{ type: Input }],
        click: [{ type: Output }]
    };
    return PillItemComponent;
}());

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var PillsGridComponent = /** @class */ (function () {
    function PillsGridComponent() {
        this.visiblePillItems = [];
        this.visiblePillTemplateRefs = [];
        this.pillShape = PillShape.DEFAULT;
        this.pillsViewType = PillsViewType.NONE;
        this.pillBorder = PillBorder.NONE;
        this.selectMode = SelectMode.SINGLE;
        this.pillsMultiRow = PillsMultiRow.DEFAULT;
        this.showMoreViewType = ShowMoreViewType.EXPAND;
        this.select = new EventEmitter();
        this.viewMorePillList = new EventEmitter();
    }
    Object.defineProperty(PillsGridComponent.prototype, "PillShape", {
        get: /**
         * @return {?}
         */
        function () { return PillShape; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PillsGridComponent.prototype, "PillsViewType", {
        get: /**
         * @return {?}
         */
        function () { return PillsViewType; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PillsGridComponent.prototype, "PillBorder", {
        get: /**
         * @return {?}
         */
        function () { return PillBorder; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PillsGridComponent.prototype, "PillsMultiRow", {
        get: /**
         * @return {?}
         */
        function () { return PillsMultiRow; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PillsGridComponent.prototype, "ShowMoreViewType", {
        get: /**
         * @return {?}
         */
        function () { return ShowMoreViewType; },
        enumerable: true,
        configurable: true
    });
    /**
     * @return {?}
     */
    PillsGridComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        this.assignDefaultPillsConfig();
    };
    /**
     * @return {?}
     */
    PillsGridComponent.prototype.assignDefaultPillsConfig = /**
     * @return {?}
     */
    function () {
        this.pillShape = this.pillShape || PillShape.DEFAULT;
        this.pillsViewType = this.pillsViewType || PillsViewType.NONE;
        this.pillBorder = this.pillBorder || PillBorder.NONE;
        this.selectMode = this.selectMode || SelectMode.SINGLE;
        this.pillsMultiRow = this.pillsMultiRow || PillsMultiRow.DEFAULT;
        if (this.minDisplayCount !== null && this.minDisplayCount !== undefined) {
            this.viewMoreText = this.viewMoreText || 'View More';
            this.viewLessText = this.viewLessText || 'View Less';
            this.showMoreViewType = this.showMoreViewType || ShowMoreViewType.EXPAND;
        }
    };
    /**
     * @return {?}
     */
    PillsGridComponent.prototype.ngAfterContentInit = /**
     * @return {?}
     */
    function () {
        var _this = this;
        this.viewCount = (this.minDisplayCount) ? this.minDisplayCount : this.pillItems.length;
        this.visiblePillItems = this.pillItems.toArray().slice(0, this.viewCount);
        this.visiblePillTemplateRefs = this.visiblePillItems.map((/**
         * @param {?} p
         * @return {?}
         */
        function (p) { return p.template; }));
        /** @type {?} */
        var onSelect = (/**
         * @param {?} pill
         * @param {?} event
         * @return {?}
         */
        function (pill, event) {
            if (_this.selectMode === SelectMode.SINGLE && pill.selected) {
                _this.visiblePillItems.forEach((/**
                 * @param {?} e
                 * @return {?}
                 */
                function (e) {
                    if (e !== pill) {
                        e.selected = false;
                    }
                }));
                pill.selected = false;
                _this.select.emit({ event: event, data: [{ name: pill.name, value: pill.value }] });
            }
            else {
                _this.select.emit({
                    event: event,
                    data: _this.visiblePillItems
                        .filter((/**
                     * @param {?} p
                     * @return {?}
                     */
                    function (p) { return p.selected; }))
                        .map((/**
                     * @param {?} p
                     * @return {?}
                     */
                    function (p) { return ({ name: p.name, value: p.value }); }))
                });
            }
        });
        this.visiblePillItems.forEach((/**
         * @param {?} e
         * @return {?}
         */
        function (e) { return e.onSelect = onSelect; }));
    };
    /**
     * @return {?}
     */
    PillsGridComponent.prototype.viewMore = /**
     * @return {?}
     */
    function () {
        this.viewCount = this.pillItems.length;
        this.visiblePillItems = this.pillItems.toArray().slice(0, this.viewCount);
        this.visiblePillTemplateRefs = this.visiblePillItems.map((/**
         * @param {?} p
         * @return {?}
         */
        function (p) { return p.template; }));
    };
    /**
     * @return {?}
     */
    PillsGridComponent.prototype.viewLess = /**
     * @return {?}
     */
    function () {
        this.viewCount = this.minDisplayCount;
        this.visiblePillItems = this.pillItems.toArray().slice(0, this.viewCount);
        this.visiblePillTemplateRefs = this.visiblePillItems.map((/**
         * @param {?} p
         * @return {?}
         */
        function (p) { return p.template; }));
    };
    /**
     * @param {?} event
     * @return {?}
     */
    PillsGridComponent.prototype.viewMoreInNewScreen = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        this.viewMorePillList.emit({ event: event, data: (this.pillItems && this.pillItems.toArray()) });
    };
    PillsGridComponent.decorators = [
        { type: Component, args: [{
                    selector: 'sb-pills-grid',
                    template: "<div class=\"sb-label-grid show-icon\" [ngClass]=\"{\r\n  'sb-box-grid':((pillShape === PillShape.BOX)||(pillShape === PillShape.CIRCLE)||(pillShape === PillShape.IMAGE_OVERLAP)), \r\n  'sb-pills-grid':(pillShape === PillShape.DEFAULT), \r\n  'show-circle':(pillShape === PillShape.CIRCLE), \r\n  'icon-header':(pillShape === PillShape.IMAGE_OVERLAP),\r\n  'hscroll': (pillsViewType === PillsViewType.SCROLL), \r\n  'border-radius':(pillBorder === PillBorder.ROUNDED),\r\n  'two-rows-grid':(pillsMultiRow === PillsMultiRow.DOUBLE_VIEW_COLUMN) || (pillsMultiRow === PillsMultiRow.DOUBLE_VIEW_ROW) || (pillsMultiRow === PillsMultiRow.SINGLE),\r\n  'one-row-grid':(pillsMultiRow === PillsMultiRow.SINGLE),\r\n  'column-sequence':(pillsMultiRow === PillsMultiRow.DOUBLE_VIEW_COLUMN),\r\n  'row-sequence':(pillsMultiRow === PillsMultiRow.DOUBLE_VIEW_ROW)\r\n}\">\r\n  <ng-container *ngFor=\"let ref of visiblePillTemplateRefs\">\r\n    <ng-container *ngTemplateOutlet=\"ref\"></ng-container>\r\n  </ng-container>\r\n</div>\r\n\r\n<div class=\"sb-view-more-less pb-16\" *ngIf=\"minDisplayCount && (pillItems?.length > minDisplayCount)\">\r\n  <div *ngIf=\"showMoreViewType===ShowMoreViewType.EXPAND\">\r\n    <button class=\"sb-btn sb-btn-normal view-more\" *ngIf=\"viewCount < pillItems?.length\" (click)=\"viewMore()\">{{viewMoreText}}</button>\r\n    <button class=\"sb-btn sb-btn-normal view-less\" *ngIf=\"viewCount === pillItems?.length\"  (click)=\"viewLess()\">{{viewLessText}}</button>\r\n  </div>\r\n\r\n  <div *ngIf=\"showMoreViewType===ShowMoreViewType.NEW_SCREEN\">\r\n    <button class=\"sb-btn sb-btn-normal view-all\" (click)=\"viewMoreInNewScreen($event)\">{{viewMoreText}}</button>\r\n  </div>\r\n</div>\r\n",
                    styles: [".sb-view-more-less{text-align:center}"]
                }] }
    ];
    PillsGridComponent.propDecorators = {
        pillItems: [{ type: ContentChildren, args: [PillItemComponent,] }],
        pillShape: [{ type: Input }],
        pillsViewType: [{ type: Input }],
        pillBorder: [{ type: Input }],
        selectMode: [{ type: Input }],
        pillsMultiRow: [{ type: Input }],
        minDisplayCount: [{ type: Input }],
        viewMoreText: [{ type: Input }],
        viewLessText: [{ type: Input }],
        showMoreViewType: [{ type: Input }],
        select: [{ type: Output }],
        viewMorePillList: [{ type: Output }]
    };
    return PillsGridComponent;
}());

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var PillsGridModule = /** @class */ (function () {
    function PillsGridModule() {
    }
    PillsGridModule.decorators = [
        { type: NgModule, args: [{
                    declarations: [
                        PillsGridComponent,
                        PillItemComponent
                    ],
                    imports: [
                        CommonModule
                    ],
                    exports: [
                        PillsGridComponent,
                        PillItemComponent
                    ]
                },] }
    ];
    return PillsGridModule;
}());

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var CommonConsumptionModule = /** @class */ (function () {
    function CommonConsumptionModule() {
    }
    CommonConsumptionModule.decorators = [
        { type: NgModule, args: [{
                    declarations: [],
                    imports: [
                        CardModule,
                        ModalModule,
                        LayoutModule,
                        LibraryFiltersModule,
                        ContentDetailsModule,
                        FaqModule,
                        AccordionModule,
                        PipesModule,
                        PagesModule,
                        CertificateActionsModule,
                        PillsGridModule
                    ],
                    exports: [
                        CardModule,
                        ModalModule,
                        LayoutModule,
                        LibraryFiltersModule,
                        ContentDetailsModule,
                        FaqModule,
                        AccordionModule,
                        PipesModule,
                        PagesModule,
                        CertificateActionsModule,
                        PillsGridModule
                    ]
                },] }
    ];
    return CommonConsumptionModule;
}());

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */

export { CommonConsumptionService, CommonConsumptionModule, LibraryFiltersComponent, LibraryFiltersLayout, TocMimeTypes, LibraryCardTypes, CourseCardGridTypes, CardGridTypes, CourseCardTypes, LibraryCardGridTypes, LibraryCardStackTypes, TocCardType, FlattenedType, PlatformType, NotificationStatus, ExpandMode, ExpandBehavior, ButtonPosition, ActionButtonType, COMMON_CONSUMPTION_CONSTANTS, PillsGridModule, PillShape, PillsViewType, PillBorder, SelectMode, PillsMultiRow, ShowMoreViewType, AccordionBodyComponent as ɵbg, AccordionHeaderComponent as ɵbf, AccordionItemComponent as ɵbe, AccordionComponent as ɵbd, AccordionModule as ɵbc, CardHoverComponent as ɵd, CardModule as ɵa, CourseCardComponent as ɵc, CourseCuriculumCardComponent as ɵg, GroupCardComponent as ɵh, LibraryCardV2Component as ɵj, LibraryCardComponent as ɵb, MemberCardComponent as ɵi, MyCourseCardComponent as ɵf, NotificationCardComponent as ɵk, TocCardComponent as ɵe, CertificateActionsModule as ɵbm, CertificateActionsComponent as ɵbn, ContentDetailsModule as ɵw, PlayerActionsComponent as ɵx, TocChildItemComponent as ɵba, TocCurriculumComponent as ɵbb, TocItemComponent as ɵy, FaqModule as ɵbi, FaqComponent as ɵbj, CardsGridComponent as ɵs, CourseCardsHlistComponent as ɵq, InAppNotificationComponent as ɵt, LayoutModule as ɵn, LibraryCardsGridComponent as ɵp, LibraryCardsHlistComponent as ɵu, LibraryCardsStackComponent as ɵo, MemberListComponent as ɵr, LibraryFiltersModule as ɵv, ConfirmationModalComponent as ɵm, ModalModule as ɵl, InfoComponent as ɵbl, PagesModule as ɵbk, PillItemComponent as ɵbp, PillsGridComponent as ɵbo, MimeTypePipe as ɵz, PipesModule as ɵbh };

//# sourceMappingURL=project-sunbird-common-consumption-v8.js.map