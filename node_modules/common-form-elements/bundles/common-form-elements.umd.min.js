!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@angular/common"),require("@angular/forms"),require("immutable"),require("@angular/core"),require("rxjs"),require("rxjs/operators"),require("lodash-es"),require("ngx-chips")):"function"==typeof define&&define.amd?define("common-form-elements",["exports","@angular/common","@angular/forms","immutable","@angular/core","rxjs","rxjs/operators","lodash-es","ngx-chips"],t):t(e["common-form-elements"]={},e.ng.common,e.ng.forms,e.immutable,e.ng.core,e.rxjs,e.rxjs.operators,e._,e.ngxChips)}(this,function(e,t,a,o,n,i,r,l,s){"use strict";var p=(d.prototype.ngOnInit=function(){},d.decorators=[{type:n.Component,args:[{selector:"sb-common-form-elements",template:"\n    <p>\n      common-form-elements works!\n    </p>\n  "}]}],d.ctorParameters=function(){return[]},d);function d(){}var c=(u.valueComparator=function(e,t){return"object"==typeof e&&"object"==typeof t?f.equals(e,t):e===t||!e&&!t},u);function u(){}var f=(m.equals=function(e,t){var o=function(e){var t,n=0;for(t in e)e.hasOwnProperty(t)&&n++;return n},i=function(e,t){if(typeof e!=typeof t)return!1;if("function"==typeof e)return e.toString()===t.toString();if(e instanceof Object&&t instanceof Object){if(o(e)!==o(t))return!1;for(var n in e)if(!i(e[n],t[n]))return!1;return!0}return e===t};return i(e,t)},m.getPropDiff=function(n,o){return Object.keys(n).reduce(function(e,t){return m.equals(n[t],o[t])||e.push(t),e},[])},m.getTruthyProps=function(t){return Object.keys(t).filter(function(e){return!!t[e]})},m.toOrderedString=function(n){return JSON.stringify(Object.keys(n).sort().reduce(function(e,t){return e[t]=n[t],e},{}))},m);function m(){}var g=(h.prototype.ngOnChanges=function(e){var t=this;this.options||(this.options=[]),this.isOptionsClosure(this.options)&&(this.options$=this.options(this.formControlRef,this.context,function(){return t.dataLoadStatusDelegate.next("LOADING")},function(){return t.dataLoadStatusDelegate.next("LOADED")}))},h.prototype.ngOnInit=function(){var e=this;this.context&&(this.contextValueChangesSubscription=this.context.valueChanges.pipe(r.tap(function(){e.formControlRef.patchValue(null)})).subscribe())},h.prototype.ngOnDestroy=function(){},h.prototype.isOptionsArray=function(e){return Array.isArray(e)},h.prototype.isOptionsClosure=function(e){return"function"==typeof e},h.prototype.isOptionsMap=function(e){return!Array.isArray(e)&&"object"==typeof e},h.prototype.onChangeFacet=function(e){var t=this.options.data[e.currentTarget.options.selectedIndex-1],e=JSON.parse(JSON.stringify(this.options));e.data=t,e.selectedLabel=t.label,e.selectedValue=t.value,this.onChangeFilter.emit(e)},h.decorators=[{type:n.Component,args:[{selector:"sb-dropdown",template:'<div class="sb-dropdown" *ngIf="!type">\n  <label>{{label}}</label>\n  <ng-container *ngIf="options">\n    <div class="dropdown-container">\n      <sb-icon-dropdown class="dropdown-icon"></sb-icon-dropdown>\n      <select [attr.disabled]="disabled ? true : ( context ? (context.invalid ? true : null) : null )"\n              [formControl]="formControlRef"\n              [compareWith]="ValueComparator.valueComparator" class="sb-dropdown-select" id="sb-dropdown"\n              name="sb-dropdown">\n        <option [defaultSelected]="!default" [ngValue]="null" disabled>{{placeHolder}}\n        </option>\n        <ng-container *ngIf="isOptionsArray(options)">\n          <option *ngFor="let option of options" [ngValue]="option.value">{{option.label}}</option>\n        </ng-container>\n\n        <ng-container *ngIf="isOptionsClosure(options)">\n          <option *ngFor="let option of options$ | async" [ngValue]="option.value">{{option.label}}</option>\n        </ng-container>\n\n        <ng-container *ngIf="isOptionsMap(options) && context && context.value">\n          <option *ngFor="let option of options[context.value]" [ngValue]="option.value">{{option.label}}</option>\n        </ng-container>\n      </select>\n    </div>\n  </ng-container>\n</div>\n\n\x3c!-- Dropdown for filters component --\x3e\n<div class="sb-dropdown" *ngIf="type === \'facet\'">\n  <label>{{label}}</label>\n  <ng-container *ngIf="options && options.data">\n    <div class="dropdown-container">\n      <sb-icon-dropdown class="dropdown-icon"></sb-icon-dropdown>\n      <select [attr.disabled]="disabled ? true : ( context ? (context.invalid ? true : null) : null )"\n        class="sb-dropdown-select" [ngClass]="(styleClass ? styleClass : \'default-dropdown\')" id="sb-dropdown" name="sb-dropdown"\n        (change)="onChangeFacet($event)" placeholder="placeHolder">\n        <option *ngIf="!default" [disabled]="true" selected>{{placeHolder}}</option>\n        <option *ngFor="let option of options.data" [ngValue]="option" [selected]="options.default === option.value">{{option.label}}</option>\n      </select>\n    </div>\n  </ng-container>\n</div>\n\n\x3c!-- Dropdown for filters component --\x3e\n',styles:["label{display:block;padding:10px;font-size:1rem}.dropdown-icon{position:absolute;top:.5rem;right:18px;z-index:1}.dropdown-container{position:relative}select[disabled]{opacity:.3}select{-webkit-appearance:none;-moz-appearance:none;text-indent:1px;text-overflow:''}.sb-dropdown-select{opacity:.99;color:#333;font-family:\"Noto Sans\";font-size:12px;font-weight:700;letter-spacing:0;line-height:17px}.sb-dropdown{margin-bottom:8px}.placeholder select option:first-child{color:#999}.option-default{color:#333;font-weight:700;font-size:12px}.sb-dropdown select{background-color:#fff;padding:10px 20px;font-size:14px;width:100%;border:.5px solid #333}"]}]}],h.ctorParameters=function(){return[]},h.propDecorators={disabled:[{type:n.Input}],options:[{type:n.Input}],label:[{type:n.Input}],placeHolder:[{type:n.Input}],isMultiple:[{type:n.Input}],context:[{type:n.Input}],formControlRef:[{type:n.Input}],"default":[{type:n.Input}],contextData:[{type:n.Input}],dataLoadStatusDelegate:[{type:n.Input}],type:[{type:n.Input}],styleClass:[{type:n.Input}],onChangeFilter:[{type:n.Output}]},h);function h(){this.ValueComparator=c,this.options=[],this.onChangeFilter=new n.EventEmitter}var b=(y.prototype.ngOnInit=function(){},y.prototype.ngOnChanges=function(){},y.prototype.ngAfterViewInit=function(){this.asyncValidation&&this.asyncValidation.asyncValidatorFactory&&this.formControlRef&&(this.formControlRef.asyncValidator||this.formControlRef.setAsyncValidators(this.asyncValidation.asyncValidatorFactory(this.asyncValidation.marker,this.validationTrigger.nativeElement)))},y.decorators=[{type:n.Component,args:[{selector:"sb-textbox",template:'<div class="sb-input">\n  <label *ngIf="label">{{label}}</label>\n  <div *ngIf="labelHtml" [innerHTML]="labelHtml | transposeHtml"></div>\n\n  <div [ngClass]="{\'async-text\': (asyncValidation && asyncValidation?.trigger), \'\': (!asyncValidation || !asyncValidation?.trigger)}">\n    <div class="prefix" *ngIf="prefix">\n      <span>{{prefix}}</span>\n    </div>\n    <input [formControl]="formControlRef" class="sb-textbox" placeholder={{placeholder}} type="text">\n    <div class="async-icons" *ngIf="asyncValidation && asyncValidation?.trigger">\n      <sb-green-tick *ngIf="formControlRef.value && formControlRef.status === \'VALID\'"></sb-green-tick>\n      <sb-red-exclamation *ngIf="formControlRef.value && formControlRef.status !== \'VALID\'"></sb-red-exclamation>\n      <sb-empty-circle *ngIf="!formControlRef.value"></sb-empty-circle>\n    </div>\n  </div>\n  \n  <ng-container *ngFor="let validation of validations">\n    <div class="cf-error"\n      *ngIf="(validation.type && (validation.type).toLowerCase && validation.message && formControlRef.errors && formControlRef.errors[(validation.type).toLowerCase()] && (formControlRef.dirty || formControlRef.touched))">\n      {{ validation.message }}\n    </div>\n  </ng-container>\n  \n  <ng-container *ngIf="asyncValidation?.trigger">\n    <div class="async-validator"\n      [hidden]="formControlRef.status === \'VALID\' || formControlRef.status !== \'PENDING\' || !formControlRef.value">\n      <div class="cf-error" *ngIf="asyncValidation?.message">\n        {{ asyncValidation.message }}\n      </div>\n      <div class="async-container">\n        <button class="async-btn" #validationTrigger [attr.data-marker]="asyncValidation.marker">\n          {{asyncValidation.trigger}}\n        </button>\n      </div>\n    </div>\n  </ng-container>\n\n</div>\n',styles:['label{display:block;font-size:1rem;margin:0}.sb-textbox{width:100%;padding:8px 16px;border:.5px solid #333;box-sizing:border-box}::-webkit-input-placeholder{padding:.25rem;opacity:.99;color:#999;font-family:"Noto Sans";font-size:12px;font-weight:700}::-moz-placeholder{padding:.25rem;opacity:.99;color:#999;font-family:"Noto Sans";font-size:12px;font-weight:700}:-ms-input-placeholder{padding:.25rem;opacity:.99;color:#999;font-family:"Noto Sans";font-size:12px;font-weight:700}::-ms-input-placeholder{padding:.25rem;opacity:.99;color:#999;font-family:"Noto Sans";font-size:12px;font-weight:700}::placeholder{padding:.25rem;opacity:.99;color:#999;font-family:"Noto Sans";font-size:12px;font-weight:700}.sb-input{margin:1rem 0}.cf-error{color:red;font-family:"Noto Sans";font-size:12px}.async-container{text-align:center}.async-btn{padding:12px 16px;background-color:#008840;color:#fff;border-radius:20px!important}.async-text{display:-webkit-box;display:flex;-webkit-box-align:center;align-items:center;border:.5px solid #333}.async-text>input{border:none}.normal-text>.async-icons>sb-empty-circle,.normal-text>.async-icons>sb-green-tick,.normal-text>.async-icons>sb-red-exclamation{display:none}.prefix{white-space:nowrap;padding:0 4px}.async-icons{margin:auto;padding:0 4px}']}]}],y.ctorParameters=function(){return[]},y.propDecorators={asyncValidation:[{type:n.Input}],label:[{type:n.Input}],labelHtml:[{type:n.Input}],placeholder:[{type:n.Input}],validations:[{type:n.Input}],formControlRef:[{type:n.Input}],prefix:[{type:n.Input}],validationTrigger:[{type:n.ViewChild,args:["validationTrigger",{"static":!1}]}]},y);function y(){}var v={INPUT:"input",CHECKBOX:"checkbox",SELECT:"select",LABEL:"label",TEXTAREA:"textarea",NESTED_SELECT:"nested_select",NESTED_GROUP:"nested_group",MULTIPLE_SELECT:"multiple_select"},x={REQUIRED:"required",MAXLENGTH:"maxLength",REQUIRED_TRUE:"required_true",MINLENGTH:"minLength",PATTERN:"pattern"},C={FACET:"facet"},w=(I.prototype.ngOnInit=function(){var t=this.config.validations&&this.config.validations.find(function(e){return e.type===x.MAXLENGTH});t&&(this.remainderValidLength$=this.formControlRef.valueChanges.pipe(r.startWith(""),r.map(function(e){return("number"==typeof t.value?t.value:0)-(e||"").length})))},I.decorators=[{type:n.Component,args:[{selector:"sb-textarea",template:'<div class="sb-textarea-container">\n  <label>{{label}}</label>\n  <textarea class="sb-textarea" [formControl]="formControlRef" rows="5" name="sb-textarea" placeholder={{placeholder}}>\n  </textarea>\n  <div class="remaining-length" *ngIf="remainderValidLength$">\n     {{remainderValidLength$ | async}} Characters left\n  </div>\n</div>\n',styles:['label{display:block;padding:8px 0 0;font-size:14px}.sb-textarea{width:100%;padding:8px;box-sizing:border-box;border:1px solid #ccc;border-radius:.25rem;resize:vertical}.sb-textarea-container{margin-bottom:10px;position:relative}.remaining-length{position:absolute;bottom:.5rem;right:1rem;font-size:10px;color:#999}::-webkit-input-placeholder{padding:.25rem;color:#999;font-family:"Noto Sans";font-size:14px;letter-spacing:0;line-height:20px}::-moz-placeholder{padding:.25rem;color:#999;font-family:"Noto Sans";font-size:14px;letter-spacing:0;line-height:20px}:-ms-input-placeholder{padding:.25rem;color:#999;font-family:"Noto Sans";font-size:14px;letter-spacing:0;line-height:20px}::-ms-input-placeholder{padding:.25rem;color:#999;font-family:"Noto Sans";font-size:14px;letter-spacing:0;line-height:20px}::placeholder{padding:.25rem;color:#999;font-family:"Noto Sans";font-size:14px;letter-spacing:0;line-height:20px}']}]}],I.ctorParameters=function(){return[]},I.propDecorators={label:[{type:n.Input}],placeholder:[{type:n.Input}],formControlRef:[{type:n.Input}],config:[{type:n.Input}]},I);function I(){}var k=(O.prototype.ngOnInit=function(){console.log("label",this.label),console.log("labelHtml",this.labelHtml)},O.prototype.handleLinkClick=function(e){e.target&&e.target.hasAttribute&&e.target.hasAttribute("href")&&this.clickedLink.emit(e.target.getAttribute("href"))},O.decorators=[{type:n.Component,args:[{selector:"sb-checkbox",template:'<div class="sb-checkbox">\n    <div class="checkbox-row">\n        <label class="container">\n            <input type="checkbox" [formControl]="formControlRef" name="checkbox" value="value">\n            <span class="checkmark"></span>\n        </label>\n        <label *ngIf="label" class="checkbox-label">{{label}}</label>\n        <label class="label-html" *ngIf="labelHtml">\n            <div [innerHTML]="labelHtml | transposeHtml" (click)="handleLinkClick($event)"></div>\n        </label>\n    </div>\n</div>',styles:['label{font-size:16px}.sb-checkbox{padding:0 0 0 8px}.container{position:relative;cursor:pointer;font-size:22px;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.container input{position:absolute;opacity:0;cursor:pointer;height:0;width:0}.container .checkmark{position:absolute;top:0;left:0;height:22px;width:22px;border:2px solid #000;border-radius:4px}.container input:checked~.checkmark{background-color:#2196f3}.checkmark:after{content:"";position:absolute;display:none}.container input:checked~.checkmark:after{display:block}.container .checkmark:after{left:7px;top:4px;width:5px;height:9px;border:solid #fff;border-width:0 3px 3px 0;-webkit-transform:rotate(45deg);transform:rotate(45deg)}.checkbox-label{padding:2px 0 0 32px}.checkbox-row{display:-ms-grid;display:grid;-ms-grid-columns:10% 90%;grid-template-columns:10% 90%;grid-gap:0}.label-html{font-size:14px}']}]}],O.ctorParameters=function(){return[]},O.propDecorators={label:[{type:n.Input}],code:[{type:n.Input}],value:[{type:n.Input}],formControlRef:[{type:n.Input}],labelHtml:[{type:n.Input}],clickedLink:[{type:n.Output}]},O);function O(){this.clickedLink=new n.EventEmitter}var V=(S.prototype.ngOnDestroy=function(){this.finalize.emit(),this.statusChangesSubscription&&this.statusChangesSubscription.unsubscribe(),this.valueChangesSubscription&&this.valueChangesSubscription.unsubscribe(),this.dataLoadStatusSinkSubscription&&this.dataLoadStatusSinkSubscription.unsubscribe()},S.prototype.ngOnInit=function(){},S.prototype.ngOnChanges=function(e){var t=this;e.config&&(e.config.currentValue&&e.config.firstChange||e.config.previousValue!==e.config.currentValue)&&this.initializeForm(),this.dataLoadStatusSinkSubscription&&this.dataLoadStatusSinkSubscription.unsubscribe(),this.statusChangesSubscription&&this.statusChangesSubscription.unsubscribe(),this.valueChangesSubscription&&this.valueChangesSubscription.unsubscribe(),this.dataLoadStatusSinkSubscription=this.dataLoadStatusDelegate.pipe(r.scan(function(e,t){return"LOADED"===t?e.loadedCount++:e.loadingCount++,e},{loadingCount:0,loadedCount:0}),r.map(function(e){return e.loadingCount!==e.loadedCount?"LOADING":"LOADED"}),r.distinctUntilChanged(),r.tap(function(e){"LOADING"===e?t.dataLoadStatus.emit("LOADING"):t.dataLoadStatus.emit("LOADED")})).subscribe(),this.statusChangesSubscription=this.formGroup.statusChanges.pipe(r.tap(function(e){t.statusChanges.emit({isPristine:t.formGroup.pristine,isDirty:t.formGroup.dirty,isInvalid:t.formGroup.invalid,isValid:t.formGroup.valid})})).subscribe(),this.valueChangesSubscription=this.formGroup.valueChanges.pipe(r.tap(function(e){t.valueChanges.emit(e)})).subscribe()},S.prototype.onNestedFormFinalize=function(e,t){this.formGroup.get("children")&&this.formGroup.get("children."+t.code)&&(this.formGroup.get("children").removeControl(t.code),Object.keys(this.formGroup.get("children").controls).length||this.formGroup.removeControl("children"))},S.prototype.onNestedFormInitialize=function(e,t){this.formGroup.get("children")||this.formGroup.addControl("children",new a.FormGroup({})),this.formGroup.get("children").removeControl(t.code),this.formGroup.get("children").addControl(t.code,e)},S.prototype.initializeForm=function(){var n,o=this;this.config.length?(n={},this.config.forEach(function(e,t){e.type!==v.LABEL&&(t=o.prepareFormValidationData(e,t),n[e.code]=t)}),this.formGroup=this.formBuilder.group(n),this.initialize.emit(this.formGroup)):console.error("FORM LIST IS EMPTY")},S.prototype.prepareFormValidationData=function(n,e){var t=[],o=[],i="";switch(n.type){case v.INPUT:i="number"===n.templateOptions.type?n["default"]&&Number.isInteger(n["default"])?n["default"]:0:n["default"]&&"string"==typeof n["default"]?n["default"]:"";break;case v.SELECT:case v.NESTED_SELECT:i=n.templateOptions.multiple?n["default"]&&Array.isArray(n["default"])?n["default"]:[]:n["default"]||null;break;case v.CHECKBOX:i=!!n["default"]}return t.push(i),n.validations&&n.validations.length&&n.validations.forEach(function(e,t){switch(e.type){case x.REQUIRED:n.type===v.CHECKBOX?o.push(a.Validators.requiredTrue):n.type===v.SELECT||n.type===v.NESTED_SELECT?o.push(function(e){return n.templateOptions.multiple?e.value&&e.value.length?null:"error":e.value?null:"error"}):o.push(a.Validators.required);break;case x.PATTERN:o.push(a.Validators.pattern(n.validations[t].value));break;case x.MINLENGTH:o.push(a.Validators.minLength(n.validations[t].value));break;case x.MAXLENGTH:o.push(a.Validators.maxLength(n.validations[t].value))}}),t.push(a.Validators.compose(o)),t},S.prototype.clickedLink=function(e){this.linkClicked.emit(e)},S.decorators=[{type:n.Component,args:[{selector:"sb-form",template:'<div [formGroup]="formGroup">\n  <ng-container *ngFor="let field of config; let index = i">\n      \x3c!-- <div *ngIf="field.type === FieldConfigInputType.SELECT && !field.templateOptions.multiple" [hidden]="field.templateOptions?.hidden || null">\n        <sb-dropdown [context]="field.context ? formGroup.get(field.context) : null " [default]="field.default"\n          [formControlRef]="formGroup.get(field.code)" [label]="field.templateOptions.label"\n          [dataLoadStatusDelegate]="dataLoadStatusDelegate" [options]="field.templateOptions?.options"\n          [disabled]="field.templateOptions?.disabled" [placeHolder]="field?.templateOptions?.placeHolder">\n        </sb-dropdown>\n      </div>\n    <div *ngIf="field.type === FieldConfigInputType.NESTED_SELECT" [hidden]="field.templateOptions?.hidden || null">\n      <sb-dropdown [context]="field.context ? formGroup.get(field.context) : null " [default]="field.default"\n        [formControlRef]="formGroup.get(field.code)" [label]="field.templateOptions.label"\n        [dataLoadStatusDelegate]="dataLoadStatusDelegate" [options]="field.templateOptions?.options"\n        [disabled]="field.templateOptions?.disabled" [placeHolder]="field?.templateOptions?.placeHolder">\n      </sb-dropdown>\n    </div> --\x3e\n    <div *ngIf="field.type === FieldConfigInputType.SELECT || field.type === FieldConfigInputType.NESTED_SELECT" [hidden]="field.templateOptions?.hidden || null">\n      <sb-multiple-dropdown [context]="field.context ? formGroup.get(field.context) : null " [default]="field.default"\n        [formControlRef]="formGroup.get(field.code)" [options]="field.templateOptions?.options"\n        [label]="field.templateOptions.label" [dataLoadStatusDelegate]="dataLoadStatusDelegate"\n        [disabled]="field.templateOptions?.disabled" [placeHolder]="field?.templateOptions?.placeHolder" \n        [isMultiple]="field.templateOptions.multiple" [labelHtml]="field.templateOptions.labelHtml">\n      </sb-multiple-dropdown>\n    </div>\n    <div *ngIf="field.type === FieldConfigInputType.INPUT" [hidden]="field.templateOptions?.hidden || null">\n      <sb-textbox [formControlRef]="formGroup.get(field.code)" [asyncValidation]="field.asyncValidation" [label]="field.templateOptions.label"\n        [placeholder]="field.templateOptions.placeHolder" [validations]="field.validations" [prefix]="field.templateOptions.prefix"\n        [labelHtml]="field.templateOptions.labelHtml">\n      </sb-textbox>\n    </div>\n    <div *ngIf="field.type === FieldConfigInputType.TEXTAREA" [hidden]="field.templateOptions?.hidden || null">\n      <sb-textarea [config]="field" [formControlRef]="formGroup.get(field.code)" [label]="field.templateOptions.label"\n        [placeholder]="field.templateOptions.placeHolder">\n      </sb-textarea>\n    </div>\n    <div *ngIf="field.type === FieldConfigInputType.CHECKBOX" [hidden]="field.templateOptions?.hidden || null">\n      <sb-checkbox [code]="field.code" [formControlRef]="formGroup.get(field.code)"\n        [label]="field.templateOptions.label" [labelHtml]="field.templateOptions.labelHtml" [value]="field.default"\n        (clickedLink)="clickedLink($event)"></sb-checkbox>\n    </div>\n    <div *ngIf="asyncValidatorFactory && field.asyncValidation?.trigger">\n      <button #validationTrigger [attr.data-marker]="field.asyncValidation.marker">\n        {{field.asyncValidation.trigger}}\n      </button>\n    </div>\n    <ng-container *ngIf="formGroup.get(field.code) as ref">\n      <div *ngIf="field.type === FieldConfigInputType.NESTED_SELECT && ref && ref.value && field.children && field.children[ref.value]">\n        <sb-form (initialize)="onNestedFormInitialize($event, field)" (finalize)="onNestedFormFinalize($event, field)"\n          [dataLoadStatusDelegate]="dataLoadStatusDelegate" [config]="field.children[ref.value]"></sb-form>\n      </div>\n\n      <div *ngIf="field.type === FieldConfigInputType.NESTED_GROUP && field.children">\n        <sb-form (initialize)="onNestedFormInitialize($event, field)" (finalize)="onNestedFormFinalize($event, field)"\n          [dataLoadStatusDelegate]="dataLoadStatusDelegate" [config]="field.children"></sb-form>\n      </div>\n    </ng-container>\n\n    <ng-container *ngIf="field.type === FieldConfigInputType.LABEL">\n      <label *ngIf="field.templateOptions?.label">{{field.templateOptions?.label}}</label>\n      <div *ngIf="field.templateOptions?.labelHtml" [innerHTML]="field.templateOptions?.labelHtml | transposeHtml"></div>\n    </ng-container>\n    \n  </ng-container>\n</div>',styles:[""]}]}],S.ctorParameters=function(){return[{type:a.FormBuilder}]},S.propDecorators={initialize:[{type:n.Output}],finalize:[{type:n.Output}],linkClicked:[{type:n.Output}],valueChanges:[{type:n.Output}],statusChanges:[{type:n.Output}],platform:[{type:n.Input}],dataLoadStatus:[{type:n.Output}],config:[{type:n.Input}],dataLoadStatusDelegate:[{type:n.Input}],asyncValidatorFactory:[{type:n.Input}]},S);function S(e){this.formBuilder=e,this.initialize=new n.EventEmitter,this.finalize=new n.EventEmitter,this.linkClicked=new n.EventEmitter,this.valueChanges=new n.EventEmitter,this.statusChanges=new n.EventEmitter,this.platform="web",this.dataLoadStatus=new n.EventEmitter,this.dataLoadStatusDelegate=new i.Subject,this.FieldConfigInputType=v,window.forms||(window.forms=[]),window.forms.push(this)}var D=(T.prototype.ngOnInit=function(){},T.decorators=[{type:n.Component,args:[{selector:"sb-option-group",template:"<p>\n  option-group works!\n</p>\n",changeDetection:n.ChangeDetectionStrategy.OnPush,styles:[""]}]}],T.ctorParameters=function(){return[]},T);function T(){}var E=(R.prototype.ngOnInit=function(){},R.decorators=[{type:n.Component,args:[{selector:"sb-icon-dropdown",template:'<svg width="14px" height="8px" viewBox="0 0 14 8" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">\n    \x3c!-- Generator: sketchtool 63.1 (101010) - https://sketch.com --\x3e\n    <title>BE94B3C8-E695-41FA-A0FC-2CE95714B444@1.5x</title>\n    <desc>Created with sketchtool.</desc>\n    <g id="Schooling-@-home" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">\n        <g id="My-classes-Copy" transform="translate(-316.000000, -248.000000)" fill="#333333">\n            <g id="Group" transform="translate(16.000000, 205.000000)">\n                <polygon id="Path" transform="translate(306.894756, 47.000000) rotate(-270.000000) translate(-306.894756, -47.000000) " points="304.599756 40.7073171 303.189756 42.1860976 307.769756 47 303.189756 51.8139024 304.599756 53.2926829 310.599756 47"></polygon>\n            </g>\n        </g>\n    </g>\n</svg>\n',styles:[""]}]}],R.ctorParameters=function(){return[]},R);function R(){}var L=(F.prototype.ngOnInit=function(){var t=this;this.context&&this.context.valueChanges.pipe(r.tap(function(){t.formControlRef.patchValue(null),t.tempValue=t.tempValue.clear(),t.setupOptions()}),r.takeUntil(this.dispose$)).subscribe(),this.formControlRef.valueChanges.pipe(r.tap(function(e){t.setTempValue(e),t.changeDetectionRef.detectChanges()}),r.takeUntil(this.dispose$)).subscribe()},F.prototype.ngOnChanges=function(e){e.options&&e.options.currentValue&&this.setupOptions()},F.prototype.onSubmit=function(){var e=this.tempValue.toList().toJS();this.formControlRef.patchValue(this.isMultiple?e:e[0]),this.formControlRef.markAsDirty(),this.showModal=!1},F.prototype.openModal=function(){this.context&&this.context.invalid||(this.setTempValue(this.formControlRef.value),this.showModal=!0)},F.prototype.addSelected=function(e){this.isMultiple?this.tempValue.includes(e.get("value"))?this.tempValue=this.tempValue.remove(e.get("value")):this.tempValue=this.tempValue.add(e.get("value")):(this.tempValue=this.tempValue.clear(),this.tempValue=this.tempValue.add(e.get("value")))},F.prototype.onCancel=function(){this.formControlRef.markAsDirty(),this.showModal=!1},F.prototype.ngOnDestroy=function(){this.dispose$.next(null),this.dispose$.complete()},F.prototype.isOptionsArray=function(){return Array.isArray(this.options)},F.prototype.isOptionsClosure=function(){return"function"==typeof this.options},F.prototype.isOptionsMap=function(){return!Array.isArray(this.options)&&"object"==typeof this.options},F.prototype.setTempValue=function(e){e&&(Array.isArray(e)?this.tempValue=o.Set(o.fromJS(e)):this.tempValue=o.Set(o.fromJS([e])))},F.prototype.setupOptions=function(){var t=this;this.options||(this.options=[],this.resolvedOptions=this.resolvedOptions.clear()),this.isOptionsArray()?this.resolvedOptions=o.fromJS(this.options):this.isOptionsMap()?this.resolvedOptions=this.context&&this.context.value?o.fromJS(this.options[this.context.value]):this.resolvedOptions:this.isOptionsClosure()&&i.from(this.options(this.formControlRef,this.context,function(){return t.dataLoadStatusDelegate.next("LOADING")},function(){return t.dataLoadStatusDelegate.next("LOADED")})).pipe(r.tap(function(e){void 0===e&&(e=[]),t.resolvedOptions=o.fromJS(e),t.resolvedOptions.forEach(function(e){t.optionValueToOptionLabelMap=t.optionValueToOptionLabelMap.set(e.get("value"),e.get("label"))}),t.setTempValue(t["default"]),t.changeDetectionRef.detectChanges()}),r.takeUntil(this.dispose$)).subscribe(),this.resolvedOptions.forEach(function(e){t.optionValueToOptionLabelMap=t.optionValueToOptionLabelMap.set(e.get("value"),e.get("label"))}),this.setTempValue(this["default"])},F.decorators=[{type:n.Component,args:[{selector:"sb-multiple-dropdown",template:'<div class="multi-select-section">\n  <label class="input-label" *ngIf="label">{{label}}</label>\n  <div *ngIf="labelHtml" [innerHTML]="labelHtml | transposeHtml"></div>\n  <div class="multi-select-container">\n    <sb-caret-down class="caret-down"\n      [attr.disabled]="disabled ? true : ( context ? (context.invalid ? true : null) : null )" (click)="openModal()">\n    </sb-caret-down>\n    <div class="list-border" (click)="openModal()">\n      <ul [attr.disabled]="disabled ? true : ( context ? (context.invalid ? true : null) : null )">\n        <ng-container *ngIf="isMultiple">\n          <li *ngIf="!formControlRef.value || !formControlRef.value.length" class="placeholder">{{placeHolder}}</li>\n\n          <ng-container *ngIf="formControlRef.value?.length">\n            <span *ngFor="let value of formControlRef.value; let index=index">\n              {{optionValueToOptionLabelMap.get(fromJS(value))}}<span\n            *ngIf="index < formControlRef.value.length - 1">, </span>\n            </span>\n          </ng-container>\n        </ng-container>\n\n        <ng-container *ngIf="!isMultiple">\n          <li *ngIf="!formControlRef.value" class="placeholder">{{placeHolder}}</li>\n\n          <span *ngIf="formControlRef.value">{{optionValueToOptionLabelMap.get(fromJS(formControlRef.value))}}</span>\n        </ng-container>\n      </ul>\n    </div>\n    <div class="sb-modal-container" [hidden]="!showModal" (click)="showModal=false;">\n      <div class="sb-modal-overlay">\n        <div class="sb-modal" (click)="$event.stopPropagation()">\n          <div class="header">\n            {{placeHolder}}\n          </div>\n          <div class="body">\n            <ul>\n              <li *ngFor="let option of resolvedOptions; let i=index">\n                <div (click)="addSelected(option)" class="row">\n                  <label class="container" style="pointer-events: none">\n                    <input [checked]="tempValue.includes(option.get(\'value\'))" class="sb-checkbox" type="checkbox">\n                    <span class="checkmark"></span>\n                  </label>\n                  <span>{{option.get(\'label\')}}</span>\n                </div>\n              </li>\n            </ul>\n          </div>\n          <div class="footer">\n            <div class="sb-form-button">\n              <button class="sb-btn-primary-outline" (click)="onCancel()">cancel</button>\n            </div>\n            <div class="sb-form-button">\n              <button class="sb-btn-primary" (click)="onSubmit()">submit</button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>',changeDetection:n.ChangeDetectionStrategy.OnPush,styles:['.multi-select-section{margin:1rem 0}label{font-size:1rem;margin:0}.multi-select-container{position:relative;margin-bottom:8px}.multi-select-container .caret-down{position:absolute;top:11px;right:19px;z-index:0}.multi-select-container .list-border .placeholder{font-size:12px;font-weight:700;margin-left:12px;color:var(--gray-100)}.multi-select-container .list-border ul[disabled]{opacity:.3;pointer-events:none}.multi-select-container .list-border ul{list-style-type:none;margin-top:3px;margin-left:8px;position:absolute;top:0;left:0}.multi-select-container .list-border{border:.5px solid var(--gray-400);padding:1.3rem;cursor:pointer}.multi-select-container .list-border li{float:left;font-size:12px;font-weight:700;margin-left:4px}.multi-select-container .dropdown li{cursor:pointer;padding:8px;border:1px solid var(--white)}.multi-select-container .dropdown ul{list-style-type:none;margin:0;padding:0}.multi-select-container .row{display:-ms-grid;display:grid;-ms-grid-columns:1fr 10fr;grid-template-columns:1fr 10fr;grid-gap:0}.multi-select-container .footer{display:-ms-grid;display:grid;-ms-grid-columns:1fr 1fr;grid-template-columns:1fr 1fr;grid-gap:0;padding-left:8px;padding-bottom:8px;padding-top:8px}.multi-select-container .sb-modal-container{position:fixed;height:100vh;overflow:hidden;width:100%;left:0;top:0;right:0;z-index:10}.multi-select-container .sb-modal-overlay{position:absolute;width:100%;height:100%;top:0;background:rgba(0,0,0,.6);left:0;z-index:10}.multi-select-container .fa .fa-close{float:right}.multi-select-container .sb-modal{display:block;position:absolute;bottom:0;width:100%;--border-top:0.5px solid var(--white);z-index:11;background:var(--white)}.multi-select-container .sb-modal ul{list-style-type:none}.multi-select-container .sb-modal li{cursor:pointer;padding-bottom:8px;padding-top:8px;padding-left:16px}.value-label{width:270px;white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.multi-select-container .sb-forms-radio{margin-top:6px}.multi-select-container .sb-form-button{display:inline;padding:10px}.multi-select-container .sb-btn-primary-outline{color:var(--primary-color);background-color:transparent;border:.5px solid var(--primary-color);border-radius:4px;padding:10px 40px;font-size:16px;text-transform:uppercase;width:100%}.multi-select-container .sb-btn-primary{color:var(--white);background-color:var(--primary-color);border:.5px solid var(--primary-color);border-radius:4px;padding:10px 40px;font-size:16px;text-transform:uppercase;width:100%}.multi-select-container .header{padding:16px;margin-left:8px;font-weight:700}.multi-select-container .body{padding-top:8px;border-bottom:.5px solid var(--gray-100);border-top:.5px solid var(--gray-100);max-height:300px;overflow:scroll}.list-with-ellipsis:nth-child(3){float:left;font-size:12px;font-weight:700;margin-left:4px;width:50px;white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.list-with-ellipsis:nth-child(n+4){visibility:hidden}.multi-select-container .container{display:block;position:relative;padding-left:35px;margin-bottom:12px;cursor:pointer;font-size:22px;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.container input{position:absolute;opacity:0;cursor:pointer;height:0;width:0}.checkmark{position:absolute;top:3px;left:0;height:15px;width:15px;border:.4px solid var(--black)}.container:hover input~.checkmark{background-color:var(--white)}.container input:checked~.checkmark{background-color:var(--primary-600)}.checkmark:after{content:"";position:absolute;display:none}.container input:checked~.checkmark:after{display:block}.container .checkmark:after{left:5px;top:0;width:5px;height:10px;border:solid var(--white);border-width:0 2px 2px 0;-webkit-transform:rotate(45deg);transform:rotate(45deg)}']}]}],F.ctorParameters=function(){return[{type:n.ChangeDetectorRef}]},F.propDecorators={disabled:[{type:n.Input}],options:[{type:n.Input}],label:[{type:n.Input}],labelHtml:[{type:n.Input}],placeHolder:[{type:n.Input}],isMultiple:[{type:n.Input}],context:[{type:n.Input}],formControlRef:[{type:n.Input}],"default":[{type:n.Input}],contextData:[{type:n.Input}],dataLoadStatusDelegate:[{type:n.Input}]},F);function F(e){this.changeDetectionRef=e,this.showModal=!1,this.tempValue=o.Set(),this.resolvedOptions=o.List(),this.optionValueToOptionLabelMap=o.Map(),this.fromJS=o.fromJS,this.dispose$=new i.Subject}var A=(z.prototype.ngOnInit=function(){},z.decorators=[{type:n.Component,args:[{selector:"sb-caret-down",template:'\x3c!-- Generator: Adobe Illustrator 16.0.0, SVG Export Plug-In . SVG Version: 6.00 Build 0)  --\x3e\n<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">\n<svg version="1.1" id="Capa_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"\n\t width="12px" height="12px" viewBox="0 0 451.847 451.847" style="enable-background:new 0 0 451.847 451.847;"\n\t xml:space="preserve">\n<g>\n\t<path d="M225.923,354.706c-8.098,0-16.195-3.092-22.369-9.263L9.27,151.157c-12.359-12.359-12.359-32.397,0-44.751\n\t\tc12.354-12.354,32.388-12.354,44.748,0l171.905,171.915l171.906-171.909c12.359-12.354,32.391-12.354,44.744,0\n\t\tc12.365,12.354,12.365,32.392,0,44.751L248.292,345.449C242.115,351.621,234.018,354.706,225.923,354.706z"/>\n</g>\n<g>\n</g>\n<g>\n</g>\n<g>\n</g>\n<g>\n</g>\n<g>\n</g>\n<g>\n</g>\n<g>\n</g>\n<g>\n</g>\n<g>\n</g>\n<g>\n</g>\n<g>\n</g>\n<g>\n</g>\n<g>\n</g>\n<g>\n</g>\n<g>\n</g>\n</svg>\n',styles:[""]}]}],z.ctorParameters=function(){return[]},z);function z(){}var M=(G.prototype.transform=function(n){return Object.keys(n.values).reduce(function(e,t){return e.replace(t,n.values[t]||"")},n.contents)},G.decorators=[{type:n.Pipe,args:[{name:"transposeHtml"}]}],G.ctorParameters=function(){return[]},G);function G(){}var N=(P.decorators=[{type:n.NgModule,args:[{declarations:[M],imports:[t.CommonModule],exports:[M],providers:[t.DatePipe]}]}],P);function P(){}var H=(B.prototype.ngOnInit=function(){},B.decorators=[{type:n.Component,args:[{selector:"sb-red-exclamation",template:'<svg width="24px" height="24px" viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" style="padding-top:4px">\n    <title>F7461929-9D59-4C06-97CD-845F9C506BE5</title>\n    <g id="Profile-Page" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">\n        <g id="Self-Declaration-Teacher-04-.1" transform="translate(-304.000000, -325.000000)" fill-rule="nonzero">\n            <g id="Group-3-Copy-6" transform="translate(16.000000, 290.000000)">\n                <g id="Red" transform="translate(288.000000, 35.000000)">\n                    <path d="M12,0 C18.627417,0 24,5.372583 24,12 C24,18.627417 18.627417,24 12,24 C5.372583,24 0,18.627417 0,12 C0,5.372583 5.372583,0 12,0 Z" id="Oval" fill="#E55A28"></path>\n                    <path d="M13,8.66891892 L13,7 L11,7 L11,8.66891892 L13,8.66891892 Z M13,17.3378378 L13,9.91891892 L11,9.91891892 L11,17.3378378 L13,17.3378378 Z" id="i" fill="#FFFFFF" transform="translate(12.000000, 12.168919) rotate(-180.000000) translate(-12.000000, -12.168919) "></path>\n                </g>\n            </g>\n        </g>\n    </g>\n</svg>',styles:[""]}]}],B.ctorParameters=function(){return[]},B);function B(){}var j=(_.prototype.ngOnInit=function(){},_.decorators=[{type:n.Component,args:[{selector:"sb-green-tick",template:'<svg width="24px" height="24px" viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" style="padding-top:4px">\n    <title>8B4CB432-FD76-4469-94B8-BCC3D605009F</title>\n    <g id="Profile-Page" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">\n        <g id="Self-Declaration-Teacher-04.4" transform="translate(-304.000000, -325.000000)" fill-rule="nonzero">\n            <g id="Group-3-Copy-6" transform="translate(16.000000, 290.000000)">\n                <g id="Green" transform="translate(288.000000, 35.000000)">\n                    <path d="M12,0 C18.627417,0 24,5.372583 24,12 C24,18.627417 18.627417,24 12,24 C5.372583,24 0,18.627417 0,12 C0,5.372583 5.372583,0 12,0 Z" id="Oval" fill="#008840"></path>\n                    <path d="M12,2 C6.4771525,2 2,6.4771525 2,12 C2,17.5228475 6.4771525,22 12,22 C17.5228475,22 22,17.5228475 22,12 C22,6.4771525 17.5228475,2 12,2 Z" id="Path" fill="#008840"></path>\n                    <polygon id="Path" fill="#FFFFFF" points="16.59 7 10 13.9957537 7.41 11.2569002 6 12.7537155 10 17 18 8.507431"></polygon>\n                </g>\n            </g>\n        </g>\n    </g>\n</svg>',styles:[""]}]}],_.ctorParameters=function(){return[]},_);function _(){}var J=(U.prototype.ngOnInit=function(){},U.decorators=[{type:n.Component,args:[{selector:"sb-empty-circle",template:'<svg width="24px" height="24px" viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" style="padding-top:4px">\n    <title>0A5AE039-B21E-4EB7-98C2-533D33CCFEB7</title>\n    <g id="Profile-Page" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">\n        <g id="Self-Declaration-Teacher-04" transform="translate(-304.000000, -325.000000)" stroke="#CCCCCC" stroke-width="2">\n            <g id="Group-3-Copy-6" transform="translate(16.000000, 290.000000)">\n                <circle id="Oval" cx="300" cy="47" r="11"></circle>\n            </g>\n        </g>\n    </g>\n</svg>',styles:[""]}]}],U.ctorParameters=function(){return[]},U);function U(){}var q=(X.prototype.ngOnInit=function(){this.formatFacets()},X.prototype.formatFacets=function(){var o=this;this.facets.forEach(function(e,t){var n={};n.name=e.name,n.type=o.config[e.name]&&o.config[e.name].type?o.config[e.name].type:"dropdown",n.index=o.config[e.name]&&o.config[e.name].index?o.config[e.name].index:t,n.label=o.config[e.name]&&o.config[e.name].label?o.config[e.name].label:e.name,n.placeHolder=o.config[e.name]&&o.config[e.name].placeHolder?o.config[e.name].placeHolder:"Select "+e.name,n["default"]=o.config[e.name]&&o.config[e.name]["default"]?o.config[e.name]["default"]:"",n.data=[],e.values.forEach(function(e){n.data.push({label:e.name,value:e.name})}),o.formattedFacets.push(n),o.formattedFacets.sort(function(e,t){return e.index-t.index})})},X.decorators=[{type:n.Component,args:[{selector:"sb-filters",template:'<div *ngIf="type === FilterType.FACET">\n  <div *ngFor="let facet of formattedFacets">\n\n    \x3c!-- Start of Dropdown --\x3e\n    <sb-dropdown *ngIf="facet.type === \'dropdown\'" [type]="type" [label]="facet.label" [options]="facet"\n      [placeHolder]="facet.placeHolder" [default]="facet.default" [styleClass]="styleClass"\n      (onChangeFilter)="selectedFilter.emit($event)">\n    </sb-dropdown>\n    \x3c!-- End of Dropdown --\x3e\n\n    \x3c!-- Start of pills --\x3e\n    <div *ngIf="facet.type === \'pills\'">\n      <sb-pills [label]="facet.label" [options]="facet" [styleClass]="styleClass"\n        (onChangeFilter)="selectedFilter.emit($event)"></sb-pills>\n    </div>\n    \x3c!-- End of pills --\x3e\n\n  </div>\n</div>',styles:[""]}]}],X.ctorParameters=function(){return[]},X.propDecorators={type:[{type:n.Input}],facets:[{type:n.Input}],config:[{type:n.Input}],styleClass:[{type:n.Input}],selectedFilter:[{type:n.Output}]},X);function X(){this.facets=[],this.selectedFilter=new n.EventEmitter,this.FilterType=C,this.formattedFacets=[]}var W=(Y.prototype.ngOnInit=function(){},Y.prototype.onChangeFacet=function(e){var t=JSON.parse(JSON.stringify(this.options));t.data=e,t.selectedLabel=e.label,t.selectedValue=e.value,this.onChangeFilter.emit(t)},Y.decorators=[{type:n.Component,args:[{selector:"sb-pills",template:'<div class="sbt-class-bar">\n  <label>{{label}}</label>\n  <div class="sb-slider-pills-container">\n    <div class="sb-pills-container sb-grade-pills-container" id="gradeScroll">\n      <div class="pill rounded" *ngFor="let facet of options.data; let i = index;" [ngClass]="((options.default === facet.value ? \'active\' : \'\')  + \' \' + styleClass)"\n      attr.id="class{{i}}" (click)="onChangeFacet(facet)">\n      {{facet.value}}\n      </div>\n    </div>\n  </div>\n</div>\n',styles:[".sbt-class-bar .sb-slider-pills-container{overflow-x:inherit!important}.sbt-class-bar .sb-slider-pills-container .sb-grade-pills-container{background:inherit!important;padding-top:0!important}.sbt-class-bar .sb-slider-pills-container .sb-pills-container{display:-webkit-box!important;display:flex!important;flex-wrap:wrap;-webkit-box-pack:start;justify-content:flex-start;margin:0 -8px 0 0}html[dir=rtl] .sbt-class-bar .sb-slider-pills-container .sb-pills-container{margin:0 0 0 -8px!important}.sbt-class-bar .sb-slider-pills-container .sb-pills-container .pill{padding:8px 16px!important;color:#fff!important;margin:0 8px 8px 0!important;background-color:#07f;font-size:12px!important;display:unset!important;width:100px;flex-basis:100px;-webkit-box-flex:1;flex-grow:1}html[dir=rtl] .sbt-class-bar .sb-slider-pills-container .sb-pills-container .pill{margin:0 0 8px 8px!important}.sbt-class-bar .sb-slider-pills-container .sb-pills-container .pill.active,.sbt-class-bar .sb-slider-pills-container .sb-pills-container .pill:hover{color:#fff!important;background-color:#0076fe!important;box-shadow:rgba(0,0,0,.1) 3px 3px 2px 0}.sb-slider-pills-container{overflow-x:auto}.sb-slider-pills-container .sb-pills-container{display:-webkit-inline-box;display:inline-flex;-webkit-box-align:center;align-items:center;box-sizing:border-box}.sb-slider-pills-container .sb-pills-container .pill{background-color:#fff;white-space:nowrap;-webkit-appearance:none;text-overflow:ellipsis;min-height:32px;cursor:pointer;-webkit-transition:.25s ease-in-out;transition:.25s ease-in-out;border-radius:2px;text-transform:capitalize;text-decoration:none;text-align:center;font-weight:400;font-style:normal;font-stretch:normal;font-size:12px;box-sizing:border-box;display:-webkit-box;display:flex;-webkit-box-align:center;align-items:center;line-height:16px}.sb-slider-pills-container .sb-medium-pills-container{min-height:64px;background:#fff;min-width:100%}.sb-slider-pills-container .sb-medium-pills-container .pill{border:1px solid #008840;color:#008840}.sb-slider-pills-container .sb-medium-pills-container .pill.active,.sb-slider-pills-container .sb-medium-pills-container .pill:active,.sb-slider-pills-container .sb-medium-pills-container .pill:hover{color:#fff;background-color:#008840;box-shadow:0 3px 4px 0 rgba(0,0,0,)}.sb-slider-pills-container .sb-grade-pills-container{min-height:48px;min-width:100%}.sb-slider-pills-container .sb-grade-pills-container .pill{border-radius:16px;color:#024f9d;min-height:32px}.sb-slider-pills-container .sb-grade-pills-container .pill.active,.sb-slider-pills-container .sb-grade-pills-container .pill:active,.sb-slider-pills-container .sb-grade-pills-container .pill:hover{background-color:#024f9d;color:#fff;box-shadow:0 3px 4px 0 rgba(0,0,0,)}.sb-slider-pills-container .sb-grade-pills-container .pill.active .icon-svg svg,.sb-slider-pills-container .sb-grade-pills-container .pill:active .icon-svg svg,.sb-slider-pills-container .sb-grade-pills-container .pill:hover .icon-svg svg{fill:#fff}.sb-slider-pills-container .sb-grade-pills-container .pill.rounded{font-size:14px}.sb-slider-pills-container .sb-grade-pills-container .pill.rounded-with-icon .icon-svg{margin-right:4px;top:0}html[dir=rtl] .sb-slider-pills-container .sb-grade-pills-container .pill.rounded-with-icon .icon-svg{margin-left:4px;margin-right:inherit}.sb-slider-pills-container .sb-grade-pills-container .pill.rounded-with-icon .name{-ms-grid-row-align:center;align-self:center;display:inline-block;line-height:16px}"]}]}],Y.ctorParameters=function(){return[]},Y.propDecorators={options:[{type:n.Input}],label:[{type:n.Input}],styleClass:[{type:n.Input}],onChangeFilter:[{type:n.Output}]},Y);function Y(){this.options=[],this.onChangeFilter=new n.EventEmitter}var K=(Z.prototype.ngOnInit=function(){},Z.prototype.ngOnChanges=function(e){var n=this,o={},i=[];e.config&&(e.config.currentValue&&e.config.firstChange||e.config.previousValue!==e.config.currentValue)&&this.initialize.emit(this.formGroup),this.statusChangesSubscription&&this.statusChangesSubscription.unsubscribe(),this.valueChangesSubscription&&this.valueChangesSubscription.unsubscribe(),this.isSection=!l.isEmpty(l.find(this.config,"fields")),this.isSection?this.config.forEach(function(e){e.fields.forEach(function(e,t){t=n.prepareFormValidationData(e,t);l.isEmpty(e.depends)||i.push({code:e.code,depends:e.depends}),o[e.code]=t})}):(e=[],e=[{name:"",fields:l.cloneDeep(this.config)}],this.config=l.cloneDeep(e),e.forEach(function(e){e.fields.forEach(function(e,t){t=n.prepareFormValidationData(e,t);l.isEmpty(e.depends)||i.push({code:e.code,depends:e.depends}),o[e.code]=t})})),this.flattenSectionFields=this.getFlattenedSectionFields(),this.formGroup=this.formBuilder.group(o),this.statusChangesSubscription=this.formGroup.valueChanges.pipe(r.tap(function(e){n.statusChanges.emit({isPristine:n.formGroup.pristine,isDirty:n.formGroup.dirty,isInvalid:n.formGroup.invalid,isValid:n.formGroup.valid,controls:n.getFormValidationErrors()})})).subscribe(),this.valueChangesSubscription=this.formGroup.valueChanges.pipe(r.tap(function(e){n.valueChanges.emit(e)})).subscribe()},Z.prototype.ngOnDestroy=function(){this.finalize.emit(),this.statusChangesSubscription&&this.statusChangesSubscription.unsubscribe(),this.valueChangesSubscription&&this.valueChangesSubscription.unsubscribe()},Z.prototype.getFormValidationErrors=function(){var e=this,o=[];return l.keys(this.formGroup.controls).forEach(function(t){var n=e.formGroup.get(t).errors;null!=n&&l.keys(n).forEach(function(e){o.push({control_name:t,error_name:e,error_value:n[e]})})}),o},Z.prototype.prepareFormValidationData=function(n,e){var t=[],o=[],i="";switch(n.inputType){case"text":case"textarea":i=n["default"]||null;break;case"select":n["default"]?"list"===n.dataType?i=l.isArray(n["default"])?n["default"]:l.toArray(n["default"]):"text"===n.dataType&&(i=l.isString(n["default"])?n["default"]:l.toString(n["default"])):i=null;break;case"multiselect":n["default"]?"list"===n.dataType&&l.isArray(n["default"])?i=n["default"]:("list"===n.dataType&&l.isString(n["default"])||"text"===n.dataType)&&(i=l.includes(n["default"],",")?l.split(n["default"],","):[n["default"]]):i=[];break;case"nestedselect":i="list"===n.dataType?n["default"]&&Array.isArray(n["default"])?n["default"]:l.isEmpty(n["default"])?[]:[n["default"]]:n["default"]||null;break;case"checkbox":i="text"===n.dataType?"Yes"===n["default"]?"Yes":"No":!!n["default"]}return t.push(i),n.validations&&n.validations.length&&n.validations.forEach(function(e,t){switch(e.type){case"required":"select"!==n.inputType&&"multiselect"!==n.inputType&&"nestedselect"!==n.inputType&&"checkbox"===n.type?o.push(a.Validators.requiredTrue):o.push(a.Validators.required);break;case"pattern":o.push(a.Validators.pattern(n.validations[t].value));break;case"min":o.push(a.Validators.minLength(n.validations[t].value));break;case"max":o.push(a.Validators.maxLength(n.validations[t].value))}}),t.push(a.Validators.compose(o)),t},Z.prototype.fetchContextTerms=function(e,t){return l.get(l.find(e,{code:t}),"terms")||null},Z.prototype.getAllDependsFormControl=function(e,t){var n=this,o={};return l.forEach(t,function(e){n.formGroup.get(e)&&(o[e]=n.formGroup.get(e))}),o||null},Z.prototype.fetchDependencyTerms=function(e,t){var n=l.map(l.filter(this.flattenSectionFields,function(e){return l.includes(t,e.code)}),function(e){return e.terms||e.range});return l.flatten(n)},Z.prototype.getAppIcon=function(e,t){return t?e.filter(function(e){return"appicon"===e.code}):e.filter(function(e){return"appicon"!==e.code})},Z.prototype.groupBySection=function(e){e=this.getAppIcon(e,!1);return l.groupBy(e,"section.index")},Z.prototype.getFlattenedSectionFields=function(){return l.flatten(l.map(this.config,"fields"))},Z.decorators=[{type:n.Component,args:[{selector:"sb-dynamic-form",template:'\n<div class="dynamic-form" [formGroup]="formGroup">\n  <div *ngFor="let section of config" class="formSection grid two-column-grid">\n      <ng-container *ngFor="let field of section[\'fields\']" sbDynamicField\n      [depends]="getAllDependsFormControl(field.code, field.depends)" [dependencyTerms]="field.depends ? fetchDependencyTerms(field.code, field.depends) : []"\n      [context]="field.context ? formGroup.get(field.context) : null" [contextTerms]="fetchContextTerms(config, field.context)"\n      [options]="field.terms" [field]="field" [formGroup]="formGroup" [default]="field.default || \'\'" [label]="field.label" [formControlRef]="formGroup.get(field.code)"\n      [dataLoadStatusDelegate]="dataLoadStatusDelegate" [placeholder]="field.placeholder || \'\'" [validations]="field.validations || []"\n      [disabled]="field.editable === true ? false : true">\n    </ng-container>\n  </div>\n</div>\n\n',styles:[""]}]}],Z.ctorParameters=function(){return[{type:a.FormBuilder}]},Z.propDecorators={config:[{type:n.Input}],initialize:[{type:n.Output}],finalize:[{type:n.Output}],dataLoadStatusDelegate:[{type:n.Input}],valueChanges:[{type:n.Output}],statusChanges:[{type:n.Output}]},Z);function Z(e){this.formBuilder=e,this.initialize=new n.EventEmitter,this.finalize=new n.EventEmitter,this.dataLoadStatusDelegate=new i.Subject,this.valueChanges=new n.EventEmitter,this.statusChanges=new n.EventEmitter,this._=l,this.FieldConfigInputType=v,this.isSection=!1}var Q=(ee.prototype.ngOnInit=function(){},ee.prototype.ngOnChanges=function(){},ee.prototype.ngAfterViewInit=function(){this.asyncValidation&&this.asyncValidation.asyncValidatorFactory&&this.formControlRef&&(this.formControlRef.asyncValidator||this.formControlRef.setAsyncValidators(this.asyncValidation.asyncValidatorFactory(this.asyncValidation.marker,this.validationTrigger.nativeElement)))},ee.decorators=[{type:n.Component,args:[{selector:"sb-dynamic-textbox",template:'<div class="sb-input">\n  <label *ngIf="label">{{label}}</label>\n  \x3c!-- <div *ngIf="labelHtml" [innerHTML]="labelHtml | transposeHtml"></div> --\x3e\n\n  <div [ngClass]="{\'async-text\': (asyncValidation && asyncValidation?.trigger), \'\': (!asyncValidation || !asyncValidation?.trigger)}">\n    <div class="prefix" *ngIf="prefix">\n      <span>{{prefix}}</span>\n    </div>\n    <input [formControl]="formControlRef" [class.valid]="formControlRef.valid &&\n    (formControlRef.dirty || formControlRef.touched)"\n[class.invalid]="formControlRef.invalid &&\n(formControlRef.dirty || formControlRef.touched)" class="sb-textbox {{disabled}}" placeholder={{placeholder}} type="text"\n[attr.disabled]="disabled ? true : null">\n    <div class="async-icons" *ngIf="asyncValidation && asyncValidation?.trigger">\n      \x3c!-- <sb-green-tick *ngIf="formControlRef.value && formControlRef.status === \'VALID\'"></sb-green-tick> --\x3e\n      \x3c!-- <sb-red-exclamation *ngIf="formControlRef.value && formControlRef.status !== \'VALID\'"></sb-red-exclamation> --\x3e\n      \x3c!-- <sb-empty-circle *ngIf="!formControlRef.value"></sb-empty-circle> --\x3e\n    </div>\n  </div>\n\n  <ng-container *ngFor="let validation of validations">\n    <div class="cf-error"\n      *ngIf="(validation.type && (validation.type).toLowerCase() && validation.message && formControlRef.errors && formControlRef.errors[(validation.type).toLowerCase()] && (formControlRef.dirty || formControlRef.touched))">\n      {{ validation.message }}\n    </div>\n  </ng-container>\n\n  <ng-container *ngIf="asyncValidation?.trigger">\n    <div class="async-validator"\n      [hidden]="formControlRef.status === \'VALID\' || formControlRef.status !== \'PENDING\' || !formControlRef.value">\n      <div class="cf-error" *ngIf="asyncValidation?.message">\n        {{ asyncValidation.message }}\n      </div>\n      <div class="async-container">\n        <button class="async-btn" #validationTrigger [attr.data-marker]="asyncValidation.marker">\n          {{asyncValidation.trigger}}\n        </button>\n      </div>\n    </div>\n  </ng-container>\n\n</div>\n',styles:['label{display:block;font-size:1rem;margin:0}.sb-textbox{width:100%;padding:8px 16px;border:.5px solid #333;box-sizing:border-box}::-webkit-input-placeholder{padding:.25rem;opacity:.99;color:#999;font-family:"Noto Sans";font-size:12px;font-weight:700}::-moz-placeholder{padding:.25rem;opacity:.99;color:#999;font-family:"Noto Sans";font-size:12px;font-weight:700}:-ms-input-placeholder{padding:.25rem;opacity:.99;color:#999;font-family:"Noto Sans";font-size:12px;font-weight:700}::-ms-input-placeholder{padding:.25rem;opacity:.99;color:#999;font-family:"Noto Sans";font-size:12px;font-weight:700}::placeholder{padding:.25rem;opacity:.99;color:#999;font-family:"Noto Sans";font-size:12px;font-weight:700}.sb-input{margin:1rem 0}.cf-error{color:red;font-family:"Noto Sans";font-size:12px}.async-container{text-align:center}.async-btn{padding:12px 16px;background-color:#008840;color:#fff;border-radius:20px!important}.async-text{display:-webkit-box;display:flex;-webkit-box-align:center;align-items:center;border:.5px solid #333}.async-text>input{border:none}.normal-text>.async-icons>sb-empty-circle,.normal-text>.async-icons>sb-green-tick,.normal-text>.async-icons>sb-red-exclamation{display:none}.prefix{white-space:nowrap;padding:0 4px}.async-icons{margin:auto;padding:0 4px}']}]}],ee.ctorParameters=function(){return[]},ee.propDecorators={asyncValidation:[{type:n.Input}],label:[{type:n.Input}],labelHtml:[{type:n.Input}],placeholder:[{type:n.Input}],validations:[{type:n.Input}],formControlRef:[{type:n.Input}],prefix:[{type:n.Input}],"default":[{type:n.Input}],disabled:[{type:n.Input}],validationTrigger:[{type:n.ViewChild,args:["validationTrigger",{"static":!1}]}]},ee);function ee(){}var te=(ne.prototype.ngOnInit=function(){var t=this.field.validations&&this.field.validations.find(function(e){return e.type===x.MAXLENGTH});t&&(this.remainderValidLength$=this.formControlRef.valueChanges.pipe(r.startWith(""),r.map(function(e){return("number"==typeof t.value?t.value:0)-(e||"").length})))},ne.decorators=[{type:n.Component,args:[{selector:"sb-dynamic-textarea",template:'<div class="sb-textarea-container">\n  <label>{{label}}</label>\n  <textarea class="sb-textarea" [formControl]="formControlRef" rows="5" name="sb-textarea" placeholder={{placeholder}} [attr.disabled]="disabled ? true : null">\n  </textarea>\n  <div class="remaining-length" *ngIf="remainderValidLength$">\n     {{remainderValidLength$ | async}} Characters left\n  </div>\n  <ng-container *ngFor="let validation of validations">\n    <div class="cf-error"\n      *ngIf="(validation.type && (validation.type).toLowerCase() && validation.message && formControlRef.errors && formControlRef.errors[(validation.type).toLowerCase()] && (formControlRef.dirty || formControlRef.touched))">\n      {{ validation.message }}\n    </div>\n  </ng-container>\n</div>\n',styles:['label{display:block;padding:8px 0 0;font-size:14px}.sb-textarea{width:100%;padding:8px;box-sizing:border-box;border:1px solid #ccc;border-radius:.25rem;resize:vertical}.sb-textarea-container{margin-bottom:10px;position:relative}.remaining-length{position:absolute;bottom:.5rem;right:1rem;font-size:10px;color:#999}::-webkit-input-placeholder{padding:.25rem;color:#999;font-family:"Noto Sans";font-size:14px;letter-spacing:0;line-height:20px}::-moz-placeholder{padding:.25rem;color:#999;font-family:"Noto Sans";font-size:14px;letter-spacing:0;line-height:20px}:-ms-input-placeholder{padding:.25rem;color:#999;font-family:"Noto Sans";font-size:14px;letter-spacing:0;line-height:20px}::-ms-input-placeholder{padding:.25rem;color:#999;font-family:"Noto Sans";font-size:14px;letter-spacing:0;line-height:20px}::placeholder{padding:.25rem;color:#999;font-family:"Noto Sans";font-size:14px;letter-spacing:0;line-height:20px}.cf-error{color:red;font-family:"Noto Sans";font-size:12px}']}]}],ne.ctorParameters=function(){return[]},ne.propDecorators={label:[{type:n.Input}],placeholder:[{type:n.Input}],formControlRef:[{type:n.Input}],field:[{type:n.Input}],validations:[{type:n.Input}],"default":[{type:n.Input}],disabled:[{type:n.Input}]},ne);function ne(){}var oe=function(){return oe=Object.assign||function oe(e){for(var t,n=1,o=arguments.length;n<o;n++)for(var i in t=arguments[n])Object.prototype.hasOwnProperty.call(t,i)&&(e[i]=t[i]);return e},oe.apply(this,arguments)};function ie(e,t){var n="function"==typeof Symbol&&e[Symbol.iterator];if(!n)return e;var o,i,a=n.call(e),r=[];try{for(;(void 0===t||0<t--)&&!(o=a.next()).done;)r.push(o.value)}catch(l){i={error:l}}finally{try{o&&!o.done&&(n=a["return"])&&n.call(a)}finally{if(i)throw i.error}}return r}function ae(){for(var e=[],t=0;t<arguments.length;t++)e=e.concat(ie(arguments[t]));return e}var re=(le.prototype.ngOnChanges=function(e){var t=this;this.options||(this.options=[]),this.isOptionsClosure(this.options)&&(this.options$=this.options(this.formControlRef,this.depends,this.formGroup,function(){return t.dataLoadStatusDelegate.next("LOADING")},function(){return t.dataLoadStatusDelegate.next("LOADED")}))},le.prototype.ngOnInit=function(){var t=this;this.options||(this.options=[]),this.dataLoadStatusDelegate.subscribe(console.log),this.field&&this.field.range?this.options=this.field.range:l.isEmpty(this.options)&&l.isEmpty(this.field.range)&&this["default"]&&(this.field.range=[],this.field.range.push(this["default"])),l.isEmpty(this.depends)||(this.contextValueChangesSubscription=i.merge.apply(void 0,ae(l.map(this.depends,function(e){return e.valueChanges}))).pipe(r.tap(function(e){t.latestParentValue=e,t.isDependsInvalid=l.includes(l.map(t.depends,function(e){return e.invalid}),!0),t.formControlRef.patchValue(null)})).subscribe(),this.isDependsInvalid=l.includes(l.map(this.depends,function(e){return e.invalid}),!0)),this.isOptionsClosure(this.options)&&(this.options$=this.options(this.formControlRef,this.depends,this.formGroup,function(){return t.dataLoadStatusDelegate.next("LOADING")},function(){return t.dataLoadStatusDelegate.next("LOADED")}))},le.prototype.ngOnDestroy=function(){this.contextValueChangesSubscription&&this.contextValueChangesSubscription.unsubscribe()},le.prototype.isOptionsArray=function(e){return Array.isArray(e)},le.prototype.isOptionsClosure=function(e){return"function"==typeof e},le.prototype.isOptionsMap=function(e){return!Array.isArray(e)&&"object"==typeof e},le.prototype.isOptionsArrayMap=function(e){return Array.isArray(e)&&"object"==typeof e[0]},le.prototype.onChangeFacet=function(e){var t=this.options.data[e.currentTarget.options.selectedIndex-1],e=JSON.parse(JSON.stringify(this.options));e.data=t,e.selectedLabel=t.label,e.selectedValue=t.value,this.onChangeFilter.emit(e)},le.prototype.fetchAssociations=function(){var t=this;if(l.isEmpty(this.depends))return this.options;var e=l.find(this.dependencyTerms,function(e){return l.isEmpty(t.field.output)?l.includes(t.getParentValue(),e.name):l.includes(t.getParentValue(),e[t.field.output])});return e?(this.tempAssociation=l.filter(e.associations,function(e){return t.field.sourceCategory?e.category===t.field.sourceCategory:e.category===t.field.code}),this.tempAssociation):this.options},le.prototype.getParentValue=function(){return this.latestParentValue||l.compact(l.map(this.depends,"value"))},le.prototype.getOptionValueForTerms=function(e){return this.field.output?"list"===this.field.dataType?[e[this.field.output]]:e[this.field.output]:"list"===this.field.dataType?[e.name]:e.name},le.prototype.getOptionValueForRange=function(e,t){return this.field.output?"list"===this.field.dataType?"map"===t||"closure"===t?[e[this.field.output]]:[e]:"map"===t||"closure"===t?e[this.field.output]||e.value||e.identifier||e.name||e.label:e:"list"===this.field.dataType?"map"===t||"closure"===t?[e.value]:[e]:"map"===t||"closure"===t?e.name||e.label||e.value||e.identifier:e},le.prototype.convertOptionToArray=function(e,t){},le.decorators=[{type:n.Component,args:[{selector:"sb-dynamic-dropdown",template:'<div class="sb-dropdown" *ngIf="!type">\n  <label>{{label}} {{context && \'has context\'}}  {{context ?  field.context : \'\' }}</label>\n  <ng-container *ngIf="options">\n    <div class="dropdown-container">\n      <sb-icon-dropdown class="dropdown-icon"></sb-icon-dropdown>\n      \x3c!-- [attr.disabled]="disabled ? true : ( context ? (context.invalid ? true : null) : null )" --\x3e\n      <select [formControl]="formControlRef"\n              [attr.disabled]="disabled ? true : ( depends ? (isDependsInvalid ? true : null) : null )"\n              [compareWith]="ValueComparator.valueComparator" class="sb-dropdown-select" id="sb-dropdown"\n              name="sb-dropdown">\n        <option [defaultSelected]="!default" [ngValue]="null" disabled>{{placeholder}}\n        </option>\n        <ng-container *ngIf="field.range && isOptionsArrayMap(field.range) && !field.association">\n          <option class="optionsArrayMap" *ngFor="let option of field.range" [ngValue]="getOptionValueForRange(option, \'map\')">{{option.label}}</option>\n        </ng-container>\n        <ng-container *ngIf="field.range && isOptionsArray(field.range) && !isOptionsArrayMap(field.range) && !field.association">\n          <option class="optionsArray" *ngFor="let option of field.range" [ngValue]="getOptionValueForRange(option, \'array\')">{{option.name || option}}</option>\n        </ng-container>\n\n        <ng-container *ngIf="field.range && isOptionsClosure(field.range)">\n          <option class="closure" *ngFor="let option of options$ | async" [ngValue]="getOptionValueForRange(option, \'closure\')">{{option.label}}</option>\n        </ng-container>\n\n        \x3c!-- <ng-container *ngIf="isOptionsMap(options) && context && context.value && !field.association">\n          <option *ngFor="let option of options[context.value]" [ngValue]="option.value">{{option.label}}</option>\n        </ng-container> --\x3e\n\n        <ng-container *ngIf="!field.range && field.terms">\n          <option class="optionsLast" *ngFor="let option of fetchAssociations()" [ngValue]="getOptionValueForTerms(option)">{{option.name}}</option>\n        </ng-container>\n      </select>\n    </div>\n  </ng-container>\n</div>\n\n\x3c!-- Dropdown for filters component --\x3e\n<div class="sb-dropdown" *ngIf="type === \'facet\'">\n  <label>{{label}}</label>\n  <ng-container *ngIf="options && options.data">\n    <div class="dropdown-container">\n      <sb-icon-dropdown class="dropdown-icon"></sb-icon-dropdown>\n      <select [attr.disabled]="disabled ? true : ( context ? (context.invalid ? true : null) : null )"\n        class="sb-dropdown-select" [ngClass]="(styleClass ? styleClass : \'default-dropdown\')" id="sb-dropdown" name="sb-dropdown"\n        (change)="onChangeFacet($event)" placeholder="placeholder">\n        <option *ngIf="!default" [disabled]="true" selected>{{placeholder}}</option>\n        <option *ngFor="let option of options.data" [ngValue]="option" [selected]="options.default === option.value">{{option.label}}</option>\n      </select>\n    </div>\n  </ng-container>\n</div>\n<ng-container *ngFor="let validation of validations">\n  <div class="cf-error"\n    *ngIf="(validation.type && (validation.type).toLowerCase() && validation.message && formControlRef.errors && formControlRef.errors[(validation.type).toLowerCase()] && (formControlRef.dirty || formControlRef.touched))">\n    {{ validation.message }}\n  </div>\n</ng-container>\n\n\x3c!-- Dropdown for filters component --\x3e\n',styles:['label{display:block;padding:10px;font-size:1rem}.dropdown-icon{position:absolute;top:.5rem;right:18px;z-index:1}.dropdown-container{position:relative}select[disabled]{opacity:.3}select{-webkit-appearance:none;-moz-appearance:none;text-indent:1px;text-overflow:\'\'}.sb-dropdown-select{opacity:.99;color:#333;font-family:"Noto Sans";font-size:12px;font-weight:700;letter-spacing:0;line-height:17px}.sb-dropdown{margin-bottom:8px}.placeholder select option:first-child{color:#999}.option-default{color:#333;font-weight:700;font-size:12px}.sb-dropdown select{background-color:#fff;padding:10px 20px;font-size:14px;width:100%;border:.5px solid #333}.cf-error{color:red;font-family:"Noto Sans";font-size:12px}']}]}],le.ctorParameters=function(){return[]},le.propDecorators={field:[{type:n.Input}],disabled:[{type:n.Input}],options:[{type:n.Input}],label:[{type:n.Input}],placeholder:[{type:n.Input}],isMultiple:[{type:n.Input}],context:[{type:n.Input}],contextTerms:[{type:n.Input}],formControlRef:[{type:n.Input}],formGroup:[{type:n.Input}],"default":[{type:n.Input}],contextData:[{type:n.Input}],dataLoadStatusDelegate:[{type:n.Input}],type:[{type:n.Input}],styleClass:[{type:n.Input}],onChangeFilter:[{type:n.Output}],validations:[{type:n.Input}],depends:[{type:n.Input}],dependencyTerms:[{type:n.Input}]},le);function le(){this.ValueComparator=c,this.onChangeFilter=new n.EventEmitter,this.dependencyTerms=[]}var se=(pe.prototype.docClick=function(){this.showModal&&(this.showModal=!1)},pe.prototype.ngOnInit=function(){var t=this;this.field&&this.field.range&&(this.options=this.field.range),l.isEmpty(this.depends)||(i.merge.apply(void 0,ae(l.map(this.depends,function(e){return e.valueChanges}))).pipe(r.tap(function(){t.formControlRef.patchValue(null),t.resetTempValue()}),r.takeUntil(this.dispose$)).subscribe(),i.merge.apply(void 0,ae(l.map(this.depends,function(e){return e.statusChanges}))).pipe(r.tap(function(){t.isDependsInvalid=l.includes(l.map(t.depends,function(e){return e.invalid}),!0)}),r.takeUntil(this.dispose$)).subscribe(),this.isDependsInvalid=l.includes(l.map(this.depends,function(e){return e.invalid}),!0)),this.formControlRef.valueChanges.pipe(r.tap(function(e){t.setTempValue(e),t.changeDetectionRef.detectChanges()}),r.takeUntil(this.dispose$)).subscribe(),this.setupOptions()},pe.prototype.ngOnChanges=function(e){e.options&&e.options.currentValue},pe.prototype.onSubmit=function(){var e=this.tempValue.toList().toJS();this.formControlRef.patchValue(this.isMultiple?e:e[0]),this.formControlRef.markAsDirty(),this.showModal=!1},pe.prototype.openModal=function(e){var t,n;this.context&&this.context.invalid||!0===this.disabled||this.isDependsInvalid||(this.setTempValue(this.formControlRef.value),n=document.getElementsByClassName("sb-modal-dropdown-web"),n=(t=Array.from(n)).some(function(e){return!1===e.hidden}),"web"===this.platform&&n&&!this.showModal&&t.forEach(function(e){e.hidden=!0}),"web"===this.platform&&this.showModal?this.showModal=!1:this.showModal=!0,e.stopPropagation())},pe.prototype.addSelected=function(e){this.isMultiple?this.field.output?this.tempValue.includes(e.get(this.field.output))?this.tempValue=this.tempValue.remove(e.get(this.field.output)):this.tempValue=this.tempValue.add(e.get(this.field.output)):this.tempValue.includes(e.get("name"))?this.tempValue=this.tempValue.remove(e.get("name")):this.tempValue.includes(e.get("identifier"))?this.tempValue=this.tempValue.remove(e.get("identifier")):this.tempValue=this.tempValue.add(e.get("name")):this.field.output?(this.tempValue=this.tempValue.clear(),this.tempValue=this.tempValue.add(e.get(this.field.output))):(this.tempValue=this.tempValue.clear(),this.tempValue=this.tempValue.add(e.get("name")))},pe.prototype.onCancel=function(){this.formControlRef.markAsDirty(),this.showModal=!1},pe.prototype.ngOnDestroy=function(){this.dispose$.next(null),this.dispose$.complete()},pe.prototype.isOptionsArray=function(){return Array.isArray(this.options)},pe.prototype.isOptionsClosure=function(){return"function"==typeof this.options},pe.prototype.isOptionsMap=function(){return!Array.isArray(this.options)&&"object"==typeof this.options},pe.prototype.setTempValue=function(e){e&&(Array.isArray(e)?this.tempValue=o.Set(o.fromJS(e)):this.tempValue=o.Set(o.fromJS([e])))},pe.prototype.resetTempValue=function(){this.tempValue=o.Set(null)},pe.prototype.setupOptions=function(){var e,n=this;this.options||(this.options=[],this.resolvedOptions=this.resolvedOptions.clear()),this.isOptionsArray()?(e=l.map(this.options,function(e){return{identifier:e.value||e.identifier||e.name||e,name:e.label||e.name||e.value||e}}),this.resolvedOptions=o.fromJS(e)):this.isOptionsMap()?this.resolvedOptions=this.depends?o.fromJS(this.options[this.context.value]):this.resolvedOptions:this.isOptionsClosure()&&i.from(this.options(this.formControlRef,this.depends,this.formGroup,function(){return n.dataLoadStatusDelegate.next("LOADING")},function(){return n.dataLoadStatusDelegate.next("LOADED")})).pipe(r.tap(function(e){void 0===e&&(e=[]),n.resolvedOptions=o.fromJS(e),n.resolvedOptions.forEach(function(e){var t=l.isEmpty(n.field.output)?e.get("name")||e.get("identifier")||e.get("value")||e:e.get(n.field.output),e=e.get("name")||e.get("label")||e;n.optionValueToOptionLabelMap=n.optionValueToOptionLabelMap.set(t,e)}),n.setTempValue(n["default"]),n.changeDetectionRef.detectChanges()}),r.takeUntil(this.dispose$)).subscribe(),this.resolvedOptions.forEach(function(e){var t=l.isEmpty(n.field.output)?e.get("name")||e.get("identifier")||e.get("value")||e:e.get(n.field.output),e=e.get("name")||e.get("label")||e;n.optionValueToOptionLabelMap=n.optionValueToOptionLabelMap.set(t,e)}),this.setTempValue(this["default"])},pe.decorators=[{type:n.Component,args:[{selector:"sb-dynamic-multiple-dropdown",template:'<div class="multi-select-section-app">\n  <label class="input-label" *ngIf="label">{{label}}</label>\n  \x3c!-- <div *ngIf="labelHtml" [innerHTML]="labelHtml | transposeHtml"></div> --\x3e\n  <div class="multi-select-container">\n    <sb-caret-down class="caret-down" [ngClass]="{\'disabled\': disabled === true ? true : ( depends ? (isDependsInvalid ? true : null) : null ) }" (click)="openModal($event)" [attr.disabled]="disabled ? true : ( depends ? (isDependsInvalid ? true : null) : null )">\n    </sb-caret-down>\n    <div class="list-border" (click)="openModal($event)">\n      <ul [ngClass]="{\'disabled\': disabled === true ? true : ( depends ? (isDependsInvalid ? true : null) : null ) }" [attr.disabled]="disabled ? true : ( depends ? (isDependsInvalid ? true : null) : null )">\n        <ng-container *ngIf="isMultiple">\n          <li *ngIf="!formControlRef.value || !formControlRef.value?.length" class="placeholder">{{placeholder}}</li>\n          <ng-container *ngIf="formControlRef.value?.length">\n            <span *ngFor="let value of formControlRef.value; let index=index">\n              {{optionValueToOptionLabelMap.get(fromJS(value))}}\n              <span *ngIf="index < formControlRef.value?.length - 1">,\n              </span>\n            </span>\n          </ng-container>\n        </ng-container>\n\n        <ng-container *ngIf="!isMultiple">\n          <li *ngIf="!formControlRef.value" class="placeholder">{{placeholder}}</li>\n\n          <span *ngIf="formControlRef.value">{{optionValueToOptionLabelMap.get(fromJS(formControlRef.value))}}</span>\n        </ng-container>\n      </ul>\n    </div>\n    <div class="sb-modal-container" *ngIf="platform === \'mobile\'" [hidden]="!showModal" (click)="showModal=false;">\n      <div class="sb-modal-overlay">\n        <div class="sb-modal" (click)="$event.stopPropagation()">\n          <div class="header">\n            {{placeholder}}\n          </div>\n          <div class="body">\n            <ul>\n              <li *ngFor="let option of resolvedOptions; let i=index">\n                <div (click)="addSelected(option)" class="row">\n                  <label class="container" style="pointer-events: none">\n                    <input [checked]="!_.isEmpty(field.output) ? tempValue.includes(option.get(field.output)) : tempValue.includes(option.get(\'name\'))" class="sb-checkbox" type="checkbox">\n                    <span class="checkmark"></span>\n                  </label>\n                  <span>{{option.get(\'name\')}}</span>\n                </div>\n              </li>\n            </ul>\n          </div>\n          <div class="footer">\n            <div class="sb-form-button">\n              <button class="sb-btn-primary-outline" (click)="onCancel()">cancel</button>\n            </div>\n            <div class="sb-form-button">\n              <button class="sb-btn-primary" (click)="onSubmit()">submit</button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class="sb-modal-dropdown-web" *ngIf="platform === \'web\'"  [hidden]="!showModal" (click)="showModal=false;">\n      <ul>\n        <li *ngFor="let option of resolvedOptions; let i=index" [ngClass]="{\'selected-option\': !_.isEmpty(field.output) ? tempValue.includes(option.get(field.output)) : tempValue.includes(option.get(\'name\'))}">\n          <div (click)="addSelected(option); onSubmit()">\n            <span class="cursor-pointer">{{option.get(\'name\')}}</span>\n          </div>\n        </li>\n      </ul>\n    </div>\n  </div>\n</div>\n',styles:['.multi-select-section-app{margin:1rem 0}label{font-size:14px;font-weight:400;margin:0}.multi-select-container{position:relative;margin-bottom:8px}.multi-select-container .caret-down{position:absolute;top:12px;right:19px;z-index:0}.multi-select-container .list-border .placeholder{margin:0;color:var(--gray-100)}.multi-select-container .list-border ul[disabled]{opacity:.3;pointer-events:none}.multi-select-container .list-border ul{list-style-type:none;position:absolute;margin:0;font-size:14px;font-weight:700}.multi-select-container .list-border{border:.5px solid var(--gray-400);padding:1.3rem;cursor:pointer;display:-webkit-box;display:flex;-webkit-box-align:center;align-items:center;left:0;height:40px}.multi-select-container .list-border li{float:left;font-size:12px;font-weight:700;margin-left:4px}.multi-select-container .dropdown li{cursor:pointer;padding:8px;border:1px solid var(--white)}.multi-select-container .dropdown ul{list-style-type:none;margin:0;padding:0}.multi-select-container .row{display:-ms-grid;display:grid;-ms-grid-columns:1fr 10fr;grid-template-columns:1fr 10fr;grid-gap:0}.multi-select-container .footer{display:-ms-grid;display:grid;-ms-grid-columns:1fr 1fr;grid-template-columns:1fr 1fr;grid-gap:0;padding-left:8px;padding-bottom:8px;padding-top:8px}.multi-select-container .sb-modal-container{position:fixed;height:100vh;overflow:hidden;width:100%;left:0;top:0;right:0;z-index:10}.multi-select-container .sb-modal-overlay{position:absolute;width:100%;height:100%;top:0;background:rgba(0,0,0,.6);left:0;z-index:10}.multi-select-container .fa .fa-close{float:right}.multi-select-container .sb-modal{display:block;position:absolute;bottom:0;width:100%;--border-top:0.5px solid var(--white);z-index:11;background:var(--white)}.multi-select-container .sb-modal ul{list-style-type:none}.multi-select-container .sb-modal li{cursor:pointer;padding-bottom:8px;padding-top:8px;padding-left:16px}.value-label{width:270px;white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.multi-select-container .sb-forms-radio{margin-top:6px}.multi-select-container .sb-form-button{display:inline;padding:10px}.multi-select-container .sb-btn-primary-outline{color:var(--primary-color);background-color:transparent;border:.5px solid var(--primary-color);border-radius:4px;padding:10px 40px;font-size:16px;text-transform:uppercase;width:100%}.multi-select-container .sb-btn-primary{color:var(--white);background-color:var(--primary-color);border:.5px solid var(--primary-color);border-radius:4px;padding:10px 40px;font-size:16px;text-transform:uppercase;width:100%}.multi-select-container .header{padding:16px;margin-left:8px;font-weight:700}.multi-select-container .body{padding-top:8px;border-bottom:.5px solid var(--gray-100);border-top:.5px solid var(--gray-100);max-height:300px;overflow:scroll}.list-with-ellipsis:nth-child(3){float:left;font-size:12px;font-weight:700;margin-left:4px;width:50px;white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.list-with-ellipsis:nth-child(n+4){visibility:hidden}.multi-select-container .container{display:block;position:relative;padding-left:35px;margin-bottom:12px;cursor:pointer;font-size:22px;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.container input{position:absolute;opacity:0;cursor:pointer;height:0;width:0}.checkmark{position:absolute;top:3px;left:0;height:15px;width:15px;border:.4px solid var(--black)}.container:hover input~.checkmark{background-color:var(--white)}.container input:checked~.checkmark{background-color:var(--primary-600)}.checkmark:after{content:"";position:absolute;display:none}.container input:checked~.checkmark:after{display:block}.container .checkmark:after{left:5px;top:0;width:5px;height:10px;border:solid var(--white);border-width:0 2px 2px 0;-webkit-transform:rotate(45deg);transform:rotate(45deg)}.sb-modal-dropdown-web ul{list-style-type:none;display:block;position:absolute;top:38px;left:0;background-color:#fff;width:100%;z-index:999;box-shadow:2px 2px 2px 2px #f0f8ff;border:2px solid #80a7ce;max-height:314px;overflow:scroll}.sb-modal-dropdown-web ul li{margin-top:10px;margin-bottom:8px;padding:8px;font-size:13px}.sb-modal-dropdown-web .selected-option{font-weight:700;background-color:#eee}::-webkit-scrollbar{width:6px}::-webkit-scrollbar-track{background:#f1f1f1}::-webkit-scrollbar-thumb{background:#888}::-webkit-scrollbar-thumb:hover{background:#555}.cursor-pointer{cursor:pointer}']}]}],pe.ctorParameters=function(){return[{type:n.ChangeDetectorRef}]},pe.propDecorators={disabled:[{type:n.Input}],field:[{type:n.Input}],options:[{type:n.Input}],label:[{type:n.Input}],labelHtml:[{type:n.Input}],placeholder:[{type:n.Input}],isMultiple:[{type:n.Input}],context:[{type:n.Input}],formControlRef:[{type:n.Input}],formGroup:[{type:n.Input}],platform:[{type:n.Input}],"default":[{type:n.Input}],contextData:[{type:n.Input}],dataLoadStatusDelegate:[{type:n.Input}],depends:[{type:n.Input}],dependencyTerms:[{type:n.Input}],docClick:[{type:n.HostListener,args:["document:click"]}]},pe);function pe(e){this.changeDetectionRef=e,this.isMultiple=!0,this.platform="web",this.dependencyTerms=[],this._=l,this.showModal=!1,this.tempValue=o.Set(),this.resolvedOptions=o.List(),this.optionValueToOptionLabelMap=o.Map(),this.fromJS=o.fromJS,this.dispose$=new i.Subject}var de=(ce.prototype.ngOnInit=function(){var e="text"===this.field.dataType?"Yes"===this.field["default"]:!!this.field["default"];this.checked=e},ce.prototype.onChecklistChange=function(e){this.checked=e;e="text"===this.field.dataType?!0===e?"Yes":"No":e;this.formControlRef.setValue(e)},ce.decorators=[{type:n.Component,args:[{selector:"sb-dynamic-checkbox",template:'<div class="sb-checkbox sb-checkbox-primary">\n  <input [attr.disabled]="disabled ? true : null" type="checkbox" [formControl]="formControlRef" id="{{_.kebabCase(field.name) || field.code}}"\n  name="{{_.kebabCase(field.name) || field.code}}" [checked]="checked" (change)="onChecklistChange($event.target.checked)">\n  <label *ngIf="label" for="{{_.kebabCase(field.name) || field.code}}">{{label}}</label>\n</div>\n',styles:['label{font-size:16px}.sb-checkbox{padding:0 0 0 8px}.container{position:relative;cursor:pointer;font-size:22px;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.container input{position:absolute;opacity:0;cursor:pointer;height:0;width:0}.container .checkmark{position:absolute;top:0;left:0;height:22px;width:22px;border:2px solid #000;border-radius:4px}.container input:checked~.checkmark{background-color:#2196f3}.checkmark:after{content:"";position:absolute;display:none}.container input:checked~.checkmark:after{display:block}.container .checkmark:after{left:7px;top:4px;width:5px;height:9px;border:solid #fff;border-width:0 3px 3px 0;-webkit-transform:rotate(45deg);transform:rotate(45deg)}.checkbox-label{padding:2px 0 0 32px}.checkbox-row{display:-ms-grid;display:grid;-ms-grid-columns:10% 90%;grid-template-columns:10% 90%;grid-gap:0}.label-html{font-size:14px}']}]}],ce.ctorParameters=function(){return[]},ce.propDecorators={field:[{type:n.Input}],disabled:[{type:n.Input}],options:[{type:n.Input}],label:[{type:n.Input}],placeholder:[{type:n.Input}],isMultiple:[{type:n.Input}],context:[{type:n.Input}],contextTerms:[{type:n.Input}],formControlRef:[{type:n.Input}],formGroup:[{type:n.Input}],"default":[{type:n.Input}],contextData:[{type:n.Input}],dataLoadStatusDelegate:[{type:n.Input}],type:[{type:n.Input}],styleClass:[{type:n.Input}],onChangeFilter:[{type:n.Output}],validations:[{type:n.Input}],depends:[{type:n.Input}],dependencyTerms:[{type:n.Input}]},ce);function ce(){this.ValueComparator=c,this.onChangeFilter=new n.EventEmitter,this.dependencyTerms=[],this._=l}var ue=(fe.prototype.ngOnInit=function(){var t=this;this.formControlRef.valueChanges.pipe(r.tap(function(e){console.log(e)}),r.takeUntil(this.dispose$)).subscribe();var e=l.reduce(this["default"],function(e,t){return"string"==typeof t?e.unformatted.push(t):l.get(t,"identifier")&&e.formatted.push(t),e},{formatted:[],unformatted:[]});this.formatSelectedTopics(this.field.terms,e.unformatted,e.formatted),this["default"]=e.unformatted,this.selectedNodes=oe({},e.formatted),this.topicChange.emit(this.selectedTopics),l.isEmpty(this["default"])||(this.placeHolder=this["default"]&&this["default"].length+" topics selected",this.formControlRef.setValue(this["default"])),l.isEmpty(this.depends)||(i.merge.apply(void 0,ae(l.map(this.depends,function(e){return e.valueChanges}))).pipe(r.tap(function(e){t.latestParentValue=e,t.isDependsInvalid=l.includes(l.map(t.depends,function(e){return e.invalid}),!0),t.formControlRef.patchValue(null),t.placeHolder="",t["default"]=[],t.selectedNodes={},t.initTopicPicker(t.formatTopics(t.fetchAssociations()))}),r.takeUntil(this.dispose$)).subscribe(),this.isDependsInvalid=l.includes(l.map(this.depends,function(e){return e.invalid}),!0))},fe.prototype.ngAfterViewInit=function(){this.initTopicPicker(this.formatTopics(this.field.terms))},fe.prototype.ngOnDestroy=function(){this.dispose$.next(null),this.dispose$.complete()},fe.prototype.formatTopics=function(e,t){var n=this;return void 0===t&&(t=!1),l.map(e,function(e){return{id:e.identifier,name:e.name,selectable:t?"selectable":"notselectable",nodes:n.formatTopics(e.children,!0)}})},fe.prototype.formatSelectedTopics=function(e,t,n){var o=this;l.forEach(e,function(e){t.includes(o.field.output?e[o.field.output]:e.name)&&!e.children&&n.push({identifier:e.identifier,name:e.name}),e.children&&o.formatSelectedTopics(e.children,t,n)})},fe.prototype.initTopicPicker=function(e){var o=this;$(".topic-picker-selector_"+this.field.code).treePicker({data:e,name:"Topics",noDataMessage:"noDataMessage",submitButtonText:"Done",cancelButtonText:"Cancel",removeAllText:"Remove All",chooseAllText:"Choose All",searchText:"Search",selectedText:"selected",picked:l.isEmpty(this.selectedNodes)?l.isEmpty(this["default"])?[]:this["default"]:l.map(this.selectedNodes,"identifier"),onSubmit:function(e){o.selectedNodes=e,o.selectedTopics=l.map(e,function(e){return{identifier:e.id,name:e.name}}),o.placeHolder=o.selectedTopics.length+" topics selected",o.topicChange.emit(o.selectedTopics);var n=[];l.forEach(o.selectedTopics,function(e,t){o.field.output?n.push(e[o.field.output]):n.push(e.name)}),o.formControlRef.setValue(n)},nodeName:"topicSelector_"+this.field.code,displayFormat:function(e){return this.placeHolder},minSearchQueryLength:1,disabled:function(e){return!!o.disabled||!!o.depends&&!!o.isDependsInvalid}}),setTimeout(function(){return document.getElementById("topicSelector_"+o.field.code).classList.add(o.topicPickerClass)},0)},fe.prototype.fetchAssociations=function(){var t=this;if(l.isEmpty(this.depends))return this.field.terms;var e=l.find(this.dependencyTerms,function(e){return l.isEmpty(t.field.output)?l.includes(t.getParentValue(),e.name):l.includes(t.getParentValue(),e[t.field.output])});return e?(this.tempAssociation=l.filter(e.associations,function(e){return t.field.sourceCategory?e.category===t.field.sourceCategory:e.category===t.field.code}),this.tempAssociation):this.field.terms},fe.prototype.getParentValue=function(){return this.latestParentValue||l.compact(l.map(this.depends,"value"))},fe.decorators=[{type:n.Component,args:[{selector:"sb-topicpicker",template:'<div class="treepicker-parent">\n  <label *ngIf="label">{{label}}</label>\n  <div [attr.disabled]="disabled ? true : ( depends ? (isDependsInvalid ? true : null) : null )" id="treePicker" class="topic-picker-selector_{{field.code}} cursor-pointer list-border">\n  {{placeHolder}}\n  </div>\n\n  <input [attr.disabled]="disabled ? true : ( depends ? (isDependsInvalid ? true : null) : null )" [formControl]="formControlRef" [placeholder]="placeHolder" readonly hidden/>\n  <ng-container *ngFor="let validation of validations">\n    <div class="cf-error"\n      *ngIf="(validation.type && (validation.type).toLowerCase() && validation.message && formControlRef.errors && formControlRef.errors[(validation.type).toLowerCase()] && (formControlRef.dirty || formControlRef.touched))">\n      {{ validation.message }}\n    </div>\n  </ng-container>\n</div>\n',styles:['.treepicker-parent{margin:1rem 0}label{display:block;font-size:1rem;margin:0}.topic-picker-selector{width:100%;padding:8px 16px;border:.5px solid #333;box-sizing:border-box}.cf-error{color:red;font-family:"Noto Sans";font-size:12px}.treepicker-parent .list-border{border:.5px solid var(--gray-400);padding:1.3rem;cursor:pointer;display:-webkit-box;display:flex;-webkit-box-align:center;align-items:center;left:0;height:40px}']}]}],fe.ctorParameters=function(){return[]},fe.propDecorators={selectedTopics:[{type:n.Input}],topicPickerClass:[{type:n.Input}],label:[{type:n.Input}],disabled:[{type:n.Input}],placeholder:[{type:n.Input}],formControlRef:[{type:n.Input}],field:[{type:n.Input}],topicChange:[{type:n.Output}],validations:[{type:n.Input}],formGroup:[{type:n.Input}],"default":[{type:n.Input}],depends:[{type:n.Input}],dependencyTerms:[{type:n.Input}]},fe);function fe(){this.topicChange=new n.EventEmitter,this.dependencyTerms=[],this.dispose$=new i.Subject}var me=(ge.prototype.ngOnInit=function(){l.isEmpty(this["default"])||(this.items=this["default"])},ge.decorators=[{type:n.Component,args:[{selector:"sb-keywords",template:'<div class="sb-keywords">\n    <label *ngIf="label">{{label}}</label>\n    <tag-input class="sb-keywordbox" [formControl]="formControlRef" [modelAsStrings]="true" [(ngModel)]=\'items\' [placeholder]="field.placeholder || \'Enter Keyword\'"\n    [disable]="disabled"></tag-input>\n    <ng-container *ngFor="let validation of validations">\n        <div class="cf-error"\n          *ngIf="(validation.type && (validation.type).toLowerCase() && validation.message && formControlRef.errors && formControlRef.errors[(validation.type).toLowerCase()] && (formControlRef.dirty || formControlRef.touched))">\n          {{ validation.message }}\n        </div>\n      </ng-container>\n</div>\n',styles:['.sb-keywords{margin:1rem 0}label{display:block;font-size:1rem;margin:0}.sb-keywordbox{width:100%;padding:8px 16px;border-bottom:.5px solid #333;box-sizing:border-box}.cf-error{color:red;font-family:"Noto Sans";font-size:12px}']}]}],ge.ctorParameters=function(){return[]},ge.propDecorators={label:[{type:n.Input}],placeholder:[{type:n.Input}],formControlRef:[{type:n.Input}],field:[{type:n.Input}],validations:[{type:n.Input}],disabled:[{type:n.Input}],"default":[{type:n.Input}]},ge);function ge(){this.inputText=""}var he=(be.prototype.ngOnChanges=function(e){var t=this;this.options||(this.options=[]),this.isOptionsClosure(this.options)&&(this.options$=this.options(this.formControlRef,this.depends,this.formGroup,function(){return t.dataLoadStatusDelegate.next("LOADING")},function(){return t.dataLoadStatusDelegate.next("LOADED")}))},be.prototype.ngOnInit=function(){var t=this;this.dataLoadStatusDelegate.subscribe(console.log),this.field&&this.field.range&&(this.options=this.field.range),l.isEmpty(this.depends)||this.isOptionsClosure(this.options)||(this.contextValueChangesSubscription=i.merge.apply(void 0,ae(l.map(this.depends,function(e){return e.valueChanges}))).pipe(r.tap(function(e){t.latestParentValue=e})).subscribe()),l.isEmpty(this.field.depends)||i.merge.apply(void 0,ae(l.map(this.depends,function(e){return e.valueChanges}))).pipe(r.tap(function(){t.formControlRef.patchValue(null)})).subscribe(),this.isOptionsClosure(this.options)&&(this.options$=this.options(this.formControlRef,this.depends,this.formGroup,function(){return t.dataLoadStatusDelegate.next("LOADING")},function(){return t.dataLoadStatusDelegate.next("LOADED")}))},be.prototype.ngOnDestroy=function(){this.contextValueChangesSubscription&&this.contextValueChangesSubscription.unsubscribe()},be.prototype.isOptionsArray=function(e){return Array.isArray(e)},be.prototype.isOptionsClosure=function(e){return"function"==typeof e},be.prototype.isOptionsMap=function(e){return!Array.isArray(e)&&"object"==typeof e},be.prototype.isOptionsArrayMap=function(e){return Array.isArray(e)&&"object"==typeof e[0]},be.prototype.onChangeFacet=function(e){var t=this.options.data[e.currentTarget.options.selectedIndex-1],e=JSON.parse(JSON.stringify(this.options));e.data=t,e.selectedLabel=t.label,e.selectedValue=t.value,this.onChangeFilter.emit(e)},be.prototype.fetchAssociations=function(){var t=this;if(l.isEmpty(this.depends))return this.options;var e=l.find(this.dependencyTerms,function(e){return l.includes(t.getParentValue(),e.identifier)});return e?(this.tempAssociation=l.filter(e.associations,function(e){return e.category===t.field.code}),this.tempAssociation):this.options},be.prototype.getParentValue=function(){return this.latestParentValue||l.compact(l.map(this.depends,"value"))},be.decorators=[{type:n.Component,args:[{selector:"sb-dynamic-multi-select",template:'<div class="sb-dropdown" *ngIf="!type">\n  <label>{{label}} {{context && \'has context\'}}  {{context ?  field.context : \'\' }}</label>\n  <ng-container *ngIf="options">\n    <div class="dropdown-container">\n      <sb-icon-dropdown class="dropdown-icon"></sb-icon-dropdown>\n      \x3c!-- [attr.disabled]="disabled ? true : ( context ? (context.invalid ? true : null) : null )" --\x3e\n      <select [formControl]="formControlRef"\n              [compareWith]="ValueComparator.valueComparator" class="sb-dropdown-select" id="sb-dropdown"\n              name="sb-dropdown" multiple>\n        <option [defaultSelected]="!default" [ngValue]="null" disabled>{{placeHolder}}\n        </option>\n        <ng-container *ngIf="field.range && isOptionsArrayMap(field.range) && !field.association">\n          <option class="optionsArrayMap" *ngFor="let option of field.range" [ngValue]="option.value">{{option.label}}</option>\n        </ng-container>\n        <ng-container *ngIf="field.range && isOptionsArray(field.range) && !isOptionsArrayMap(field.range) && !field.association">\n          <option class="optionsArray" *ngFor="let option of field.range" [ngValue]="option || option">{{option.name || option}}</option>\n        </ng-container>\n\n        <ng-container *ngIf="field.range && isOptionsClosure(field.range)">\n          <option class="closure" *ngFor="let option of options$ | async" [ngValue]="option.value">{{option.label}}</option>\n        </ng-container>\n\n        \x3c!-- <ng-container *ngIf="isOptionsMap(options) && context && context.value && !field.association">\n          <option *ngFor="let option of options[context.value]" [ngValue]="option.value">{{option.label}}</option>\n        </ng-container> --\x3e\n\n        <ng-container *ngIf="!field.range && field.terms">\n          <option class="optionsLast" *ngFor="let option of fetchAssociations()" [ngValue]="option.identifier">{{option.name}}</option>\n        </ng-container>\n      </select>\n    </div>\n  </ng-container>\n</div>\n\n\x3c!-- Dropdown for filters component --\x3e\n<div class="sb-dropdown" *ngIf="type === \'facet\'">\n  <label>{{label}}</label>\n  <ng-container *ngIf="options && options.data">\n    <div class="dropdown-container">\n      <sb-icon-dropdown class="dropdown-icon"></sb-icon-dropdown>\n      <select [attr.disabled]="disabled ? true : ( context ? (context.invalid ? true : null) : null )"\n        class="sb-dropdown-select" [ngClass]="(styleClass ? styleClass : \'default-dropdown\')" id="sb-dropdown" name="sb-dropdown"\n        (change)="onChangeFacet($event)" placeholder="placeHolder">\n        <option *ngIf="!default" [disabled]="true" selected>{{placeHolder}}</option>\n        <option *ngFor="let option of options.data" [ngValue]="option" [selected]="options.default === option.value">{{option.label}}</option>\n      </select>\n    </div>\n  </ng-container>\n</div>\n<ng-container *ngFor="let validation of validations">\n  <div class="cf-error"\n    *ngIf="(validation.type && (validation.type).toLowerCase() && validation.message && formControlRef.errors && formControlRef.errors[(validation.type).toLowerCase()] && (formControlRef.dirty || formControlRef.touched))">\n    {{ validation.message }}\n  </div>\n</ng-container>\n\n\x3c!-- Dropdown for filters component --\x3e\n',styles:['label{display:block;padding:10px;font-size:1rem}.dropdown-icon{position:absolute;top:.5rem;right:18px;z-index:1}.dropdown-container{position:relative}select[disabled]{opacity:.3}select{-webkit-appearance:none;-moz-appearance:none;text-indent:1px;text-overflow:\'\'}.sb-dropdown-select{opacity:.99;color:#333;font-family:"Noto Sans";font-size:12px;font-weight:700;letter-spacing:0;line-height:17px}.sb-dropdown{margin-bottom:8px}.placeholder select option:first-child{color:#999}.option-default{color:#333;font-weight:700;font-size:12px}.sb-dropdown select{background-color:#fff;padding:10px 20px;font-size:14px;width:100%;border:.5px solid #333}.cf-error{color:red;font-family:"Noto Sans";font-size:12px}']}]}],be.ctorParameters=function(){return[]},be.propDecorators={field:[{type:n.Input}],disabled:[{type:n.Input}],options:[{type:n.Input}],label:[{type:n.Input}],placeHolder:[{type:n.Input}],isMultiple:[{type:n.Input}],context:[{type:n.Input}],contextTerms:[{type:n.Input}],formControlRef:[{type:n.Input}],formGroup:[{type:n.Input}],"default":[{type:n.Input}],contextData:[{type:n.Input}],dataLoadStatusDelegate:[{type:n.Input}],type:[{type:n.Input}],styleClass:[{type:n.Input}],onChangeFilter:[{type:n.Output}],validations:[{type:n.Input}],depends:[{type:n.Input}],dependencyTerms:[{type:n.Input}]},be);function be(){this.ValueComparator=c,this.onChangeFilter=new n.EventEmitter,this.dependencyTerms=[]}var ye={textarea:te,text:Q,select:re,multiselect:he,nestedselect:se,keywords:me,dialcode:Q,topicselector:ue,licenses:re,label:Q,number:Q,checkbox:de},ve=(xe.prototype.ngOnInit=function(){var e=this.resolver.resolveComponentFactory(ye[this.field.inputType]);this.componentRef=this.container.createComponent(e),this.field.renderingHints&&this.field.renderingHints["class"]&&this.setClassListOnElement(this.field.renderingHints["class"]),this.componentRef.instance.field=this.field,this.componentRef.instance.formGroup=this.formGroup,this.componentRef.instance.formControlRef=this.formControlRef,this.componentRef.instance.label=this.label,this.componentRef.instance.placeholder=this.placeholder,this.componentRef.instance.options=this.options,this.componentRef.instance.context=this.context,this.componentRef.instance.contextTerms=this.contextTerms,this.componentRef.instance.depends=this.depends,this.componentRef.instance.dependencyTerms=this.dependencyTerms,this.componentRef.instance["default"]=this["default"],this.componentRef.instance.dataLoadStatusDelegate=this.dataLoadStatusDelegate,this.componentRef.instance.validations=this.validations,this.componentRef.instance.disabled=this.disabled},xe.prototype.setClassListOnElement=function(e){var t=this,e=e.split(" ");l.forEach(e,function(e){t.renderer2.addClass(t.componentRef.location.nativeElement,e)})},xe.decorators=[{type:n.Directive,args:[{selector:"[sbDynamicField]"}]}],xe.ctorParameters=function(){return[{type:n.ComponentFactoryResolver},{type:n.ViewContainerRef},{type:n.Renderer2},{type:n.ElementRef}]},xe.propDecorators={field:[{type:n.Input}],formGroup:[{type:n.Input}],formControlRef:[{type:n.Input}],disabled:[{type:n.Input}],label:[{type:n.Input}],options:[{type:n.Input}],placeholder:[{type:n.Input}],context:[{type:n.Input}],validations:[{type:n.Input}],contextTerms:[{type:n.Input}],depends:[{type:n.Input}],dependencyTerms:[{type:n.Input}],"default":[{type:n.Input}],dataLoadStatusDelegate:[{type:n.Input}]},xe);function xe(e,t,n,o){this.resolver=e,this.container=t,this.renderer2=n,this.elementRef=o,this.options=[],this.contextTerms=[],this.dependencyTerms=[]}Ce.decorators=[{type:n.NgModule,args:[{declarations:[p,g,b,w,k,V,D,E,L,A,H,j,J,q,W,K,Q,te,re,se,de,ve,ue,me,he],imports:[t.CommonModule,a.ReactiveFormsModule,a.FormsModule,N,s.TagInputModule],exports:[p,g,A,b,w,k,V,D,E,H,j,J,L,q,K,Q,te,re,se,de,he,ue,me,ve],entryComponents:[K,p,Q,te,re,se,de,he,ue,me]}]}],s=Ce;function Ce(){}e.CommonFormElementsComponent=p,e.CommonFormElementsModule=s,e.FieldConfigInputType=v,e.FieldConfigValidationType=x,e.FilterType=C,e.ɵd=k,e.ɵa=g,e.ɵt=de,e.ɵr=re,e.ɵu=ve,e.ɵo=K,e.ɵx=he,e.ɵs=se,e.ɵq=te,e.ɵp=Q,e.ɵm=q,e.ɵe=V,e.ɵi=A,e.ɵg=E,e.ɵl=J,e.ɵk=j,e.ɵj=H,e.ɵw=me,e.ɵh=L,e.ɵf=D,e.ɵn=W,e.ɵy=N,e.ɵz=M,e.ɵc=w,e.ɵb=b,e.ɵv=ue,Object.defineProperty(e,"__esModule",{value:!0})});
//# sourceMappingURL=common-form-elements.umd.min.js.map