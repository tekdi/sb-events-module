{"version":3,"sources":["ng://common-form-elements/lib/common-form-elements.component.ts","ng://common-form-elements/lib/utilities/value-comparator.ts","ng://common-form-elements/lib/dropdown/dropdown.component.ts","ng://common-form-elements/lib/textbox/textbox.component.ts","ng://common-form-elements/lib/common-form-config.ts","ng://common-form-elements/lib/textarea/textarea.component.ts","ng://common-form-elements/lib/checkbox/checkbox.component.ts","ng://common-form-elements/lib/form/form.component.ts","ng://common-form-elements/lib/option-group/option-group.component.ts","ng://common-form-elements/lib/icon/dropdown/dropdownIcon.component.ts","ng://common-form-elements/lib/multiple-dropdown/multiple-dropdown.component.ts","ng://common-form-elements/lib/icon/caret-down/caret-down.component.ts","ng://common-form-elements/lib/pipes/transpose-html/transpose-html.ts","ng://common-form-elements/lib/pipes/pipes.module.ts","ng://common-form-elements/lib/icon/red-exclamation/red-exclamation.component.ts","ng://common-form-elements/lib/icon/green-tick/green-tick.component.ts","ng://common-form-elements/lib/icon/empty-circle/empty-circle.component.ts","ng://common-form-elements/lib/filters/filters.component.ts","ng://common-form-elements/lib/pills/pills.component.ts","ng://common-form-elements/lib/dynamic-form/dynamic-form.component.ts","ng://common-form-elements/lib/dynamic-textbox/dynamic-textbox.component.ts","ng://common-form-elements/lib/dynamic-textarea/dynamic-textarea.component.ts","node_modules/tslib/tslib.es6.js","ng://common-form-elements/lib/dynamic-dropdown/dynamic-dropdown.component.ts","ng://common-form-elements/lib/dynamic-multiple-dropdown/dynamic-multiple-dropdown.component.ts","ng://common-form-elements/lib/dynamic-checkbox/dynamic-checkbox.component.ts","ng://common-form-elements/lib/topicpicker/topicpicker.component.ts","ng://common-form-elements/lib/keywords/keywords.component.ts","ng://common-form-elements/lib/dynamic-multi-select/dynamic-multi-select.component.ts","ng://common-form-elements/lib/dynamic-field/dynamic-field.directive.ts","ng://common-form-elements/lib/common-form-elements.module.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'sb-common-form-elements',\n  template: `\n    <p>\n      common-form-elements works!\n    </p>\n  `,\n  styles: []\n})\nexport class CommonFormElementsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","export class ValueComparator {\n  static valueComparator(v1, v2): boolean {\n    if (typeof v1 === 'object' && typeof v2 === 'object') {\n      return ObjectUtil.equals(v1, v2);\n    } else if (v1 === v2) {\n      return true;\n    } else if (!v1 && !v2) {\n      return true;\n    }\n\n    return false;\n  }\n}\n\nclass ObjectUtil {\n  public static equals(a: any, b: any): boolean {\n    const countProps = (obj) => {\n      let count = 0;\n      for (const k in obj) {\n        if (obj.hasOwnProperty(k)) {\n          count++;\n        }\n      }\n      return count;\n    };\n\n    const objectEquals = (v1: any, v2: any) => {\n      if (typeof (v1) !== typeof (v2)) {\n        return false;\n      }\n\n      if (typeof (v1) === 'function') {\n        return v1.toString() === v2.toString();\n      }\n\n      if (v1 instanceof Object && v2 instanceof Object) {\n        if (countProps(v1) !== countProps(v2)) {\n          return false;\n        }\n\n        let r = true;\n\n        for (const k in v1) {\n          r = objectEquals(v1[k], v2[k]);\n          if (!r) {\n            return false;\n          }\n        }\n        return true;\n      } else {\n        return v1 === v2;\n      }\n    };\n\n    return objectEquals(a, b);\n  }\n\n  public static getPropDiff(newObj: {}, oldObj: {}): string[] {\n    return Object.keys(newObj).reduce<string[]>((acc: string[], key) => {\n      if (ObjectUtil.equals(newObj[key], oldObj[key])) {\n        return acc;\n      }\n\n      acc.push(key);\n      return acc;\n    }, []);\n  }\n\n  public static getTruthyProps(obj: {}): string[] {\n    return Object.keys(obj).filter((key) => !!obj[key]);\n  }\n\n  public static toOrderedString(obj: {}): string {\n    return JSON.stringify(Object.keys(obj).sort().reduce<{}>((acc, k) => {\n      acc[k] = obj[k];\n      return acc;\n    }, {}));\n  }\n}\n","import {Component, Input, OnChanges, OnDestroy, OnInit, Output, SimpleChanges, EventEmitter} from '@angular/core';\nimport {FormControl} from '@angular/forms';\nimport {Observable, Subject, Subscription} from 'rxjs';\nimport {FieldConfigOption, FieldConfigOptionsBuilder} from '../common-form-config';\nimport {tap} from 'rxjs/operators';\nimport {ValueComparator} from '../utilities/value-comparator';\n\n@Component({\n  selector: 'sb-dropdown',\n  templateUrl: './dropdown.component.html',\n  styleUrls: ['./dropdown.component.css']\n})\nexport class DropdownComponent implements OnInit, OnChanges, OnDestroy {\n  ValueComparator = ValueComparator;\n\n  @Input() disabled?: boolean;\n  @Input() options: any = [];\n  @Input() label?: string;\n  @Input() placeHolder?: string;\n  @Input() isMultiple?: boolean;\n  @Input() context?: FormControl;\n  @Input() formControlRef?: FormControl;\n  @Input() default?: any;\n  @Input() contextData: any;\n  @Input() dataLoadStatusDelegate: Subject<'LOADING' | 'LOADED'>;\n  @Input() type?: string;\n  @Input() styleClass?: string;\n  @Output() onChangeFilter: EventEmitter<any> = new EventEmitter();\n  options$?: Observable<FieldConfigOption<any>[]>;\n  contextValueChangesSubscription?: Subscription;\n  selectedType: any;\n  constructor() {\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (!this.options) {\n      this.options = [];\n    }\n\n    if (this.isOptionsClosure(this.options)) {\n      this.options$ = (this.options as FieldConfigOptionsBuilder<any>)(\n        this.formControlRef,\n        this.context,\n        () => this.dataLoadStatusDelegate.next('LOADING'),\n        () => this.dataLoadStatusDelegate.next('LOADED')\n      ) as any;\n    }\n  }\n\n  ngOnInit() {\n    if (this.context) {\n      this.contextValueChangesSubscription = this.context.valueChanges.pipe(\n        tap(() => {\n          this.formControlRef.patchValue(null);\n        })\n      ).subscribe();\n    }\n  }\n\n  ngOnDestroy(): void {\n  }\n\n  isOptionsArray(options: any) {\n    return Array.isArray(options);\n\n  }\n\n  isOptionsClosure(options: any) {\n    return typeof options === 'function';\n  }\n\n  isOptionsMap(input: any) {\n    return !Array.isArray(input) && typeof input === 'object';\n  }\n\n  onChangeFacet($event) {\n    const selectedObject = this.options.data[$event.currentTarget.options.selectedIndex - 1];\n    let emitPayload = JSON.parse(JSON.stringify(this.options));\n    emitPayload['data'] = selectedObject;\n    emitPayload['selectedLabel'] = selectedObject.label;\n    emitPayload['selectedValue'] = selectedObject.value;\n    this.onChangeFilter.emit(emitPayload);\n  }\n}\n","import {Component, Input, OnInit, AfterViewInit, OnChanges, ViewChild, ElementRef} from '@angular/core';\nimport {FormControl} from '@angular/forms';\nimport { FieldConfigAsyncValidation } from '../common-form-config';\n\n@Component({\n  selector: 'sb-textbox',\n  templateUrl: './textbox.component.html',\n  styleUrls: ['./textbox.component.css']\n})\nexport class TextboxComponent implements OnInit, AfterViewInit, OnChanges {\n  @Input() asyncValidation?: FieldConfigAsyncValidation;\n  @Input() label: String;\n  @Input() labelHtml: any;\n  @Input() placeholder: String;\n  @Input() validations?: any;\n  @Input() formControlRef?: FormControl;\n  @Input() prefix?: String;\n  @ViewChild('validationTrigger', { static:false }) validationTrigger: ElementRef;\n\n  constructor() {\n  }\n\n  ngOnInit() {\n  }\n\n  ngOnChanges() {\n    \n  }\n\n  ngAfterViewInit() {\n    if (this.asyncValidation && this.asyncValidation.asyncValidatorFactory && this.formControlRef) {\n      if (this.formControlRef.asyncValidator) {\n        return;\n      }\n\n      this.formControlRef.setAsyncValidators(this.asyncValidation.asyncValidatorFactory(\n        this.asyncValidation.marker,\n        this.validationTrigger.nativeElement\n      ));\n    }\n  }\n\n}\n","import {Observable} from 'rxjs';\nimport {AsyncValidatorFn, FormControl, FormGroup} from '@angular/forms';\n\nexport enum FieldConfigInputType {\n  INPUT = 'input',\n  CHECKBOX = 'checkbox',\n  SELECT = 'select',\n  LABEL = 'label',\n  TEXTAREA = 'textarea',\n  NESTED_SELECT = 'nested_select',\n  NESTED_GROUP = 'nested_group',\n  MULTIPLE_SELECT = 'multiple_select'\n}\n\nexport enum FieldConfigValidationType {\n  REQUIRED = 'required',\n  MAXLENGTH = 'maxLength',\n  REQUIRED_TRUE = 'required_true',\n  MINLENGTH = 'minLength',\n  PATTERN = 'pattern'\n}\n\nexport type FieldConfigOptionsBuilder<T> =\n  (control: FormControl, context?: FormControl, notifyLoading?: () => void,\n    notifyLoaded?: () => void) => Observable<FieldConfigOption<T>[]> | Promise<FieldConfigOption<T>[]>;\nexport type AsyncValidatorFactory = (marker: string, trigger: HTMLElement) => AsyncValidatorFn;\n\nexport interface FieldConfigOption<T> {\n  label: string;\n  value: T;\n  extras?: T;\n}\nexport interface FieldConfigOptionAssociations<T> {\n  [key: string]: FieldConfigOption<T>[];\n}\nexport interface FieldConfigAsyncValidation {\n  marker: string;\n  message?: string;\n  trigger?: string;\n  asyncValidatorFactory?: AsyncValidatorFactory;\n}\nexport interface FieldConfig<T> {\n  code: string;\n  type?: FieldConfigInputType;\n  fieldName?: string;\n  default?: any;\n  context?: string;\n  children?: { [key: string]: FieldConfig<T>[] } | FieldConfig<T>[];\n  templateOptions?: {\n    type?: string,\n    label?: string,\n    placeHolder?: string,\n    prefix?: string,\n    multiple?: boolean,\n    hidden?: boolean,\n    disabled?: boolean,\n    options?: FieldConfigOption<T>[] | FieldConfigOptionsBuilder<T> | FieldConfigOptionAssociations<T>,\n    labelHtml?: {\n      contents: string,\n      values?: { [key: string]: string }\n    }\n  };\n  validations?: {\n    type: FieldConfigValidationType,\n    value?: string | boolean | number | RegExp,\n    message?: string,\n    name?: string,\n    validator?: any\n  }[];\n  asyncValidation?: FieldConfigAsyncValidation;\n  visible?: boolean;\n  editable?: boolean;\n  dataType?: string;\n  renderingHints?: any;\n  name?: string;\n  description?: string;\n  inputType?: string;\n  index?: number;\n  placeholder?: string;\n  required?: boolean;\n  label?: string;\n  options?: string[];\n  collections?: any;\n  value?: any;\n  terms?: any;\n  range?: any;\n  depends?: FormControl[];\n  dependencyTerms?: any;\n  output?: string;\n  sourceCategory?: string;\n  association?: any;\n}\n\nexport enum FilterType {\n  FACET = 'facet'\n}\n\nexport interface Validator {\n  name?: string;\n  validator?: any;\n  message?: string;\n  type?: string;\n  value?: string;\n}\n\n\nexport type DynamicFieldConfigOptionsBuilder<T> =\n  (control: FormControl, depends?: FormControl[], formGroup?: FormGroup, notifyLoading?: () => void,\n    notifyLoaded?: () => void) => Observable<FieldConfigOption<T>[]> | Promise<FieldConfigOption<T>[]>;\n\n\n\nexport interface SectionConfig<T> {\n  name: string;\n  fields: FieldConfig<T>[];\n}\n","import {Component, Input, OnInit} from '@angular/core';\nimport {FormControl} from '@angular/forms';\nimport {FieldConfig, FieldConfigValidationType} from '../common-form-config';\nimport {Observable} from 'rxjs';\nimport {map, startWith} from 'rxjs/operators';\n\n@Component({\n  selector: 'sb-textarea',\n  templateUrl: './textarea.component.html',\n  styleUrls: ['./textarea.component.css']\n})\nexport class TextareaComponent implements OnInit {\n  @Input() label: String;\n  @Input() placeholder: String;\n  @Input() formControlRef: FormControl;\n  @Input() config: FieldConfig<String>;\n\n  remainderValidLength$?: Observable<number>;\n\n  constructor() {\n  }\n\n  ngOnInit() {\n    const maxLengthValidation = this.config.validations && this.config.validations.find((validation) => validation.type === FieldConfigValidationType.MAXLENGTH);\n\n    if (maxLengthValidation) {\n      this.remainderValidLength$ = this.formControlRef.valueChanges.pipe(\n        startWith(''),\n        map((v) => ((typeof maxLengthValidation.value === 'number') ? maxLengthValidation.value : 0) - (v || '').length)\n      );\n    }\n  }\n\n}\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { FormControl } from '@angular/forms';\n\n@Component({\n  selector: 'sb-checkbox',\n  templateUrl: './checkbox.component.html',\n  styleUrls: ['./checkbox.component.css']\n})\nexport class CheckboxComponent implements OnInit {\n  @Input() label: any;\n  @Input() code: any;\n  @Input() value?: any;\n  @Input() formControlRef?: FormControl;\n  @Input() labelHtml?: any;\n  @Output() clickedLink = new EventEmitter();\n\n  constructor() { }\n\n  ngOnInit() {\n    console.log('label', this.label);\n    console.log('labelHtml', this.labelHtml);\n  }\n\n  handleLinkClick(event: MouseEvent) {\n    if (event.target && event.target['hasAttribute'] && (event.target as HTMLAnchorElement).hasAttribute('href')) {\n      this.clickedLink.emit((event.target as HTMLAnchorElement).getAttribute('href'));\n    }\n  }\n\n}\n","import {\n  AfterViewInit,\n  Component,\n  EventEmitter,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Output,\n  QueryList,\n  SimpleChanges,\n  ViewChildren\n} from '@angular/core';\nimport {AsyncValidatorFactory, FieldConfig, FieldConfigInputType, FieldConfigValidationType} from '../common-form-config';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {Subject, Subscription} from 'rxjs';\nimport {distinctUntilChanged, map, scan, tap} from 'rxjs/operators';\n\n@Component({\n  selector: 'sb-form',\n  templateUrl: './form.component.html',\n  styleUrls: ['./form.component.css']\n})\nexport class FormComponent implements OnInit, OnChanges, OnDestroy {\n  @Output() initialize = new EventEmitter();\n  @Output() finalize = new EventEmitter();\n  @Output() linkClicked = new EventEmitter();\n  @Output() valueChanges = new EventEmitter();\n  @Output() statusChanges = new EventEmitter();\n  @Input() platform: 'mobile' | 'web' = 'web';\n  @Output() dataLoadStatus = new EventEmitter<'LOADING' | 'LOADED'>();\n  @Input() config;\n  @Input() dataLoadStatusDelegate = new Subject<'LOADING' | 'LOADED'>();\n  @Input() asyncValidatorFactory?: AsyncValidatorFactory;\n\n  formGroup: FormGroup;\n\n  FieldConfigInputType = FieldConfigInputType;\n\n  private statusChangesSubscription: Subscription;\n  private valueChangesSubscription: Subscription;\n  private dataLoadStatusSinkSubscription: Subscription;\n\n  constructor(\n    private formBuilder: FormBuilder\n  ) {\n    if (!window['forms']) {\n      window['forms'] = [];\n    }\n    window['forms'].push(this);\n  }\n\n  ngOnDestroy(): void {\n    this.finalize.emit();\n\n    if (this.statusChangesSubscription) {\n      this.statusChangesSubscription.unsubscribe();\n    }\n\n    if (this.valueChangesSubscription) {\n      this.valueChangesSubscription.unsubscribe();\n    }\n\n    if (this.dataLoadStatusSinkSubscription) {\n      this.dataLoadStatusSinkSubscription.unsubscribe();\n    }\n  }\n\n  ngOnInit() {\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes['config']) {\n      if ((changes['config'].currentValue && changes['config'].firstChange) || changes['config'].previousValue !== changes['config'].currentValue) {\n        this.initializeForm();\n      }\n    }\n\n    if (this.dataLoadStatusSinkSubscription) {\n      this.dataLoadStatusSinkSubscription.unsubscribe();\n    }\n\n    if (this.statusChangesSubscription) {\n      this.statusChangesSubscription.unsubscribe();\n    }\n\n    if (this.valueChangesSubscription) {\n      this.valueChangesSubscription.unsubscribe();\n    }\n\n    this.dataLoadStatusSinkSubscription = this.dataLoadStatusDelegate.pipe(\n      scan<'LOADING' | 'LOADED', { loadingCount: 0, loadedCount: 0 }>((acc, event) => {\n        if (event === 'LOADED') {\n          acc.loadedCount++;\n          return acc;\n        }\n\n        acc.loadingCount++;\n        return acc;\n      }, {loadingCount: 0, loadedCount: 0}),\n      map<{ loadingCount: 0, loadedCount: 0 }, 'LOADING' | 'LOADED'>((aggregates) => {\n        if (aggregates.loadingCount !== aggregates.loadedCount) {\n          return 'LOADING';\n        }\n\n        return 'LOADED';\n      }),\n      distinctUntilChanged(),\n      tap((result) => {\n        if (result === 'LOADING') {\n          this.dataLoadStatus.emit('LOADING');\n        } else {\n          this.dataLoadStatus.emit('LOADED');\n        }\n      })\n    ).subscribe();\n\n    this.statusChangesSubscription = this.formGroup.statusChanges.pipe(\n      tap((v) => {\n        this.statusChanges.emit({\n          isPristine: this.formGroup.pristine,\n          isDirty: this.formGroup.dirty,\n          isInvalid: this.formGroup.invalid,\n          isValid: this.formGroup.valid\n        });\n      })\n    ).subscribe();\n\n    this.valueChangesSubscription = this.formGroup.valueChanges.pipe(\n      tap((v) => {\n        this.valueChanges.emit(v);\n      })\n    ).subscribe();\n  }\n\n  onNestedFormFinalize(nestedFormGroup: FormGroup, fieldConfig: FieldConfig<any>) {\n    if (!this.formGroup.get('children') || !this.formGroup.get(`children.${fieldConfig.code}`)) {\n      return;\n    }\n\n    (this.formGroup.get('children') as FormGroup).removeControl(fieldConfig.code);\n\n    if (!Object.keys((this.formGroup.get('children') as FormGroup).controls).length) {\n      this.formGroup.removeControl('children');\n    }\n  }\n\n  onNestedFormInitialize(nestedFormGroup: FormGroup, fieldConfig: FieldConfig<any>) {\n    if (!this.formGroup.get('children')) {\n      this.formGroup.addControl('children', new FormGroup({}));\n    }\n\n    (this.formGroup.get('children') as FormGroup).removeControl(fieldConfig.code);\n    (this.formGroup.get('children') as FormGroup).addControl(fieldConfig.code, nestedFormGroup);\n  }\n\n  private initializeForm() {\n    if (!this.config.length) {\n      console.error('FORM LIST IS EMPTY');\n      return;\n    }\n    const formGroupData = {};\n    this.config.forEach((element: any, index) => {\n      if (element.type !== FieldConfigInputType.LABEL) {\n        const formValueList = this.prepareFormValidationData(element, index);\n        formGroupData[element.code] = formValueList;\n      }\n    });\n\n    this.formGroup = this.formBuilder.group(formGroupData);\n    this.initialize.emit(this.formGroup);\n  }\n\n  private prepareFormValidationData(element: FieldConfig<any>, index) {\n    const formValueList = [];\n    const validationList = [];\n\n    let defaultVal: any = '';\n    switch (element.type) {\n      case FieldConfigInputType.INPUT:\n        defaultVal = element.templateOptions.type === 'number' ?\n          (element.default && Number.isInteger(element.default) ? element.default : 0) :\n          (element.default && (typeof element.default) === 'string' ? element.default : '');\n        break;\n      case FieldConfigInputType.SELECT:\n      case FieldConfigInputType.NESTED_SELECT:\n        defaultVal = element.templateOptions.multiple ?\n          (element.default && Array.isArray(element.default) ? element.default : []) : (element.default || null);\n        break;\n      case FieldConfigInputType.CHECKBOX:\n        defaultVal = false || !!element.default;\n        break;\n    }\n\n    formValueList.push(defaultVal);\n\n    if (element.validations && element.validations.length) {\n      element.validations.forEach((data, i) => {\n        switch (data.type) {\n          case FieldConfigValidationType.REQUIRED:\n            if (element.type === FieldConfigInputType.CHECKBOX) {\n              validationList.push(Validators.requiredTrue);\n            } else if (element.type === FieldConfigInputType.SELECT || element.type === FieldConfigInputType.NESTED_SELECT) {\n              validationList.push((c) => {\n                if (element.templateOptions.multiple) {\n                  return c.value && c.value.length ? null : 'error';\n                }\n                return !!c.value ? null : 'error';\n              });\n            } else {\n              validationList.push(Validators.required);\n            }\n            break;\n          case FieldConfigValidationType.PATTERN:\n            validationList.push(Validators.pattern(element.validations[i].value as string));\n            break;\n          case FieldConfigValidationType.MINLENGTH:\n            validationList.push(Validators.minLength(element.validations[i].value as number));\n            break;\n          case FieldConfigValidationType.MAXLENGTH:\n            validationList.push(Validators.maxLength(element.validations[i].value as number));\n            break;\n        }\n      });\n    }\n\n    formValueList.push(Validators.compose(validationList));\n\n    return formValueList;\n  }\n\n  clickedLink(event) {\n    this.linkClicked.emit(event);\n  }\n}\n","import {ChangeDetectionStrategy, Component, OnInit} from '@angular/core';\n\n@Component({\n  selector: 'sb-option-group',\n  templateUrl: './option-group.component.html',\n  styleUrls: ['./option-group.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class OptionGroupComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'sb-icon-dropdown',\n  templateUrl: './dropdownIcon.component.html',\n  styleUrls: ['./dropdownIcon.component.css']\n})\nexport class DropdownIconComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import {ChangeDetectionStrategy, ChangeDetectorRef, Component, Input, OnChanges, OnDestroy, OnInit, SimpleChanges} from '@angular/core';\nimport {FormControl} from '@angular/forms';\nimport {from, Subject} from 'rxjs';\nimport {FieldConfigOptionsBuilder} from '../common-form-config';\nimport {takeUntil, tap} from 'rxjs/operators';\nimport {fromJS, List, Map, Set} from 'immutable';\n\n\n@Component({\n  selector: 'sb-multiple-dropdown',\n  templateUrl: './multiple-dropdown.component.html',\n  styleUrls: ['./multiple-dropdown.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class MultipleDropdownComponent implements OnInit, OnChanges, OnDestroy {\n  @Input() disabled?: boolean;\n  @Input() options: any;\n  @Input() label?: string;\n  @Input() labelHtml: any;\n  @Input() placeHolder?: string;\n  @Input() isMultiple?: boolean;\n  @Input() context?: FormControl;\n  @Input() formControlRef?: FormControl;\n  @Input() default?: any;\n  @Input() contextData: any;\n  @Input() dataLoadStatusDelegate: Subject<'LOADING' | 'LOADED'>;\n  showModal = false;\n  tempValue = Set<any>();\n  resolvedOptions = List<Map<string, string>>();\n  optionValueToOptionLabelMap = Map<any, string>();\n\n  fromJS = fromJS;\n\n  private dispose$ = new Subject<undefined>();\n\n  constructor(\n    private changeDetectionRef: ChangeDetectorRef\n  ) {\n  }\n  ngOnInit() {\n    if (this.context) {\n      this.context.valueChanges.pipe(\n        tap(() => {\n          this.formControlRef.patchValue(null);\n          this.tempValue = this.tempValue.clear();\n          this.setupOptions();\n        }),\n        takeUntil(this.dispose$)\n      ).subscribe();\n    }\n\n    this.formControlRef.valueChanges.pipe(\n      tap((value) => {\n        this.setTempValue(value);\n        this.changeDetectionRef.detectChanges();\n      }),\n      takeUntil(this.dispose$)\n    ).subscribe();\n  }\n  ngOnChanges(changes: SimpleChanges): void {\n    if (!changes['options'] || !changes['options'].currentValue) {\n      return;\n    }\n\n    this.setupOptions();\n  }\n\n  onSubmit() {\n    const finalValue = this.tempValue.toList().toJS();\n    this.formControlRef.patchValue(this.isMultiple ? finalValue : finalValue[0]);\n    this.formControlRef.markAsDirty();\n    this.showModal = false;\n  }\n  openModal() {\n    if (this.context && this.context.invalid) {\n      return;\n    }\n\n    this.setTempValue(this.formControlRef.value);\n\n    this.showModal = true;\n  }\n\n  addSelected(option: Map<string, string>) {\n    if (this.isMultiple) {\n      if (this.tempValue.includes(option.get('value'))) {\n        this.tempValue = this.tempValue.remove(option.get('value'));\n      } else {\n        this.tempValue = this.tempValue.add(option.get('value'));\n      }\n    } else {\n      this.tempValue = this.tempValue.clear();\n      this.tempValue = this.tempValue.add(option.get('value'));\n    }\n  }\n  onCancel() {\n    this.formControlRef.markAsDirty();\n    this.showModal = false;\n  }\n\n  ngOnDestroy(): void {\n    this.dispose$.next(null);\n    this.dispose$.complete();\n  }\n\n  private isOptionsArray() {\n    return Array.isArray(this.options);\n  }\n\n  private isOptionsClosure() {\n    return typeof this.options === 'function';\n  }\n\n  private isOptionsMap() {\n    return !Array.isArray(this.options) && typeof this.options === 'object';\n  }\n\n  private setTempValue(value: any) {\n    if (value) {\n      if (Array.isArray(value)) {\n        this.tempValue = Set(fromJS(value));\n      } else {\n        this.tempValue = Set(fromJS([value]));\n      }\n    }\n  }\n\n  private setupOptions() {\n    if (!this.options) {\n      this.options = [];\n      this.resolvedOptions = this.resolvedOptions.clear();\n    }\n\n    if (this.isOptionsArray()) {\n      this.resolvedOptions = fromJS(this.options);\n    } else if (this.isOptionsMap()) {\n      this.resolvedOptions = (this.context && this.context.value) ?\n        fromJS(this.options[this.context.value]) :\n        this.resolvedOptions;\n    } else if (this.isOptionsClosure()) {\n      from((this.options as FieldConfigOptionsBuilder<any>)(\n        this.formControlRef,\n        this.context,\n        () => this.dataLoadStatusDelegate.next('LOADING'),\n        () => this.dataLoadStatusDelegate.next('LOADED')\n      )).pipe(\n        tap((options = []) => {\n          this.resolvedOptions = fromJS(options);\n\n          this.resolvedOptions.forEach((option) => {\n            this.optionValueToOptionLabelMap = this.optionValueToOptionLabelMap.set(option.get('value'), option.get('label'));\n          });\n\n          this.setTempValue(this.default);\n\n          this.changeDetectionRef.detectChanges();\n        }),\n        takeUntil(this.dispose$)\n      ).subscribe();\n    }\n\n    this.resolvedOptions.forEach((option) => {\n      this.optionValueToOptionLabelMap = this.optionValueToOptionLabelMap.set(option.get('value'), option.get('label'));\n    });\n\n    this.setTempValue(this.default);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'sb-caret-down',\n  templateUrl: './caret-down.component.html',\n  styleUrls: ['./caret-down.component.css']\n})\nexport class CaretDownComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe(\n    { name: 'transposeHtml' }\n)\n\nexport class TransposeHtmlPipe implements PipeTransform {\n\n  constructor() {}\n\n  transform(value: { contents: string, values: string[] }): string {\n\n    return Object.keys(value.values).reduce((acc, val) => {\n      return acc.replace(val, value.values[val] ? value.values[val] : '');\n    }, value.contents);\n\n  }\n}\n","\nimport { NgModule } from '@angular/core';\nimport { CommonModule, DatePipe } from '@angular/common';\nimport { TransposeHtmlPipe } from './transpose-html/transpose-html';\n\n@NgModule({\n  declarations: [TransposeHtmlPipe],\n  imports: [CommonModule],\n  exports: [TransposeHtmlPipe],\n  providers: [DatePipe]\n})\nexport class PipesModule {\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'sb-red-exclamation',\n  templateUrl: './red-exclamation.component.html',\n  styleUrls: ['./red-exclamation.component.css']\n})\nexport class RedExclamationComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'sb-green-tick',\n  templateUrl: './green-tick.component.html',\n  styleUrls: ['./green-tick.component.css']\n})\nexport class GreenTickComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'sb-empty-circle',\n  templateUrl: './empty-circle.component.html',\n  styleUrls: ['./empty-circle.component.css']\n})\nexport class EmptyCircleComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\n\nimport { FilterType } from '../common-form-config';\n\n@Component({\n  selector: 'sb-filters',\n  templateUrl: './filters.component.html',\n  styleUrls: ['./filters.component.css']\n})\nexport class FiltersComponent implements OnInit {\n\n  @Input() type: string;\n  @Input() facets: any = [];\n  @Input() config?: object;\n  @Input() styleClass?: string;\n  @Output() selectedFilter: EventEmitter<any> = new EventEmitter();\n  FilterType = FilterType;\n  formGroup: FormGroup;\n\n  formattedFacets: any = [];\n\n  constructor() {\n  }\n\n  ngOnInit() {\n    this.formatFacets();\n  }\n\n  formatFacets () {\n    this.facets.forEach((facet, index) => {\n      let facetObj = {};\n      facetObj['name']        = facet['name'];\n      facetObj['type']        = this.config[facet['name']] && this.config[facet['name']]['type'] ? this.config[facet['name']]['type'] : 'dropdown';\n      facetObj['index']       = this.config[facet['name']] && this.config[facet['name']]['index'] ? this.config[facet['name']]['index'] : index;\n      facetObj['label']       = this.config[facet['name']] && this.config[facet['name']]['label'] ? this.config[facet['name']]['label'] : facet['name'];\n      facetObj['placeHolder'] = this.config[facet['name']] && this.config[facet['name']]['placeHolder'] ? this.config[facet['name']]['placeHolder'] : 'Select ' + facet['name'];\n\n      facetObj['default']     = this.config[facet['name']] && this.config[facet['name']]['default'] ? this.config[facet['name']]['default'] : '';\n      \n      facetObj['data'] = [];\n      facet['values'].forEach(facetValue => {\n        facetObj['data'].push({\n          label: facetValue['name'],\n          value: facetValue['name']\n        });\n      });\n      this.formattedFacets.push(facetObj);\n      this.formattedFacets.sort((a, b) => a.index - b.index);\n    });\n  }\n}\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'sb-pills',\n  templateUrl: './pills.component.html',\n  styleUrls: ['./pills.component.css']\n})\nexport class PillsComponent implements OnInit {\n  @Input() options: any = [];\n  @Input() label?: string;\n  @Input() styleClass?: string;\n  @Output() onChangeFilter: EventEmitter<any> = new EventEmitter();\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  onChangeFacet(selectedValue) {\n    let emitPayload = JSON.parse(JSON.stringify(this.options));\n    emitPayload['data'] = selectedValue;\n    emitPayload['selectedLabel'] = selectedValue.label;\n    emitPayload['selectedValue'] = selectedValue.value;\n    this.onChangeFilter.emit(emitPayload);\n  }\n}\n","import { AfterViewInit, Component, EventEmitter, Input, OnChanges, OnDestroy, OnInit,\n  Output, QueryList, SimpleChanges, ViewChildren } from '@angular/core';\n  import {AsyncValidatorFactory, FieldConfig, FieldConfigInputType, FieldConfigValidationType, SectionConfig} from '../common-form-config';\nimport {FormBuilder, FormControl, FormGroup, Validators} from '@angular/forms';\nimport {Subject, Subscription} from 'rxjs';\nimport {distinctUntilChanged, map, scan, tap} from 'rxjs/operators';\nimport * as _ from 'lodash-es';\n\n@Component({\n  selector: 'sb-dynamic-form',\n  templateUrl: './dynamic-form.component.html',\n  styleUrls: ['./dynamic-form.component.css']\n})\nexport class DynamicFormComponent implements OnInit, OnChanges, OnDestroy  {\n  @Input() config;\n  @Output() initialize = new EventEmitter();\n  @Output() finalize = new EventEmitter();\n\n  @Input() dataLoadStatusDelegate = new Subject<'LOADING' | 'LOADED'>();\n\n  @Output() valueChanges = new EventEmitter();\n  @Output() statusChanges = new EventEmitter();\n\n  private statusChangesSubscription: Subscription;\n  private valueChangesSubscription: Subscription;\n\n\n  _: any = _;\n\n  formGroup: FormGroup;\n  FieldConfigInputType = FieldConfigInputType;\n  fieldDependency: {};\n  isSection = false;\n  flattenSectionFields;\n\n  constructor(\n    private formBuilder: FormBuilder\n  ) { }\n\n  ngOnInit() {\n\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    const formGroupData = {};\n    const dependency = [];\n    if (changes['config']) {\n      if ((changes['config'].currentValue && changes['config'].firstChange)\n      || changes['config'].previousValue !== changes['config'].currentValue) {\n        this.initialize.emit(this.formGroup);\n      }\n    }\n\n    if (this.statusChangesSubscription) {\n      this.statusChangesSubscription.unsubscribe();\n    }\n\n    if (this.valueChangesSubscription) {\n      this.valueChangesSubscription.unsubscribe();\n    }\n\n    this.isSection = !_.isEmpty(_.find(this.config, 'fields'));\n    if (this.isSection) {\n      this.config.forEach((sections) => {\n          sections.fields.forEach((element: any, index) => {\n            const formValueList = this.prepareFormValidationData(element, index);\n          if (!_.isEmpty(element.depends)) {\n            dependency.push({code: element.code, depends: element.depends});\n          }\n          formGroupData[element.code] = formValueList;\n          });\n      });\n    } else {\n      let defaultSection: any = [];\n      defaultSection = [\n        {\n          'name': '',\n          'fields': _.cloneDeep(this.config)\n        }\n      ];\n\n      this.config = _.cloneDeep(defaultSection);\n      defaultSection.forEach((sections) => {\n        sections.fields.forEach((element: any, index) => {\n          const formValueList = this.prepareFormValidationData(element, index);\n        if (!_.isEmpty(element.depends)) {\n          dependency.push({code: element.code, depends: element.depends});\n        }\n        formGroupData[element.code] = formValueList;\n        });\n    });\n    }\n    this.flattenSectionFields = this.getFlattenedSectionFields();\n    this.formGroup = this.formBuilder.group(formGroupData);\n\n    this.statusChangesSubscription = this.formGroup.valueChanges.pipe(\n      tap((v) => {\n        this.statusChanges.emit({\n          isPristine: this.formGroup.pristine,\n          isDirty: this.formGroup.dirty,\n          isInvalid: this.formGroup.invalid,\n          isValid: this.formGroup.valid,\n          controls: this.getFormValidationErrors()\n        });\n      })\n    ).subscribe();\n\n    this.valueChangesSubscription =  this.formGroup.valueChanges.pipe(\n      tap((data) => {\n        this.valueChanges.emit(data);\n      })\n    ).subscribe();\n  }\n\n  ngOnDestroy(): void {\n    this.finalize.emit();\n\n    if (this.statusChangesSubscription) {\n      this.statusChangesSubscription.unsubscribe();\n    }\n\n    if (this.valueChangesSubscription) {\n      this.valueChangesSubscription.unsubscribe();\n    }\n  }\n\n  getFormValidationErrors() {\n    const errors = [];\n    _.keys(this.formGroup.controls).forEach(key => {\n      const controlErrors = this.formGroup.get(key).errors;\n      if (controlErrors != null) {\n        _.keys(controlErrors).forEach(keyError => {\n          errors.push({\n            control_name: key,\n            error_name: keyError,\n            error_value: controlErrors[ keyError ]\n          });\n        });\n      }\n    });\n    return errors;\n  }\n\n\n  private prepareFormValidationData(element: any, index) {\n    const formValueList = [];\n    const validationList = [];\n\n    let defaultVal: any = '';\n    switch (element.inputType) {\n      case 'text':\n        defaultVal = element.default || null;\n        break;\n      case 'textarea':\n        defaultVal = element.default || null;\n        break;\n      case 'select':\n        if (element.default) {\n          if (element.dataType === 'list') {\n            if (_.isArray(element.default)) {\n              defaultVal = element.default;\n            } else {\n              defaultVal = _.toArray(element.default);\n            }\n          } else if (element.dataType === 'text') {\n            if (_.isString(element.default)) {\n              defaultVal = element.default;\n            } else {\n              defaultVal = _.toString(element.default);\n            }\n          }\n        } else {\n          defaultVal = null;\n        }\n        break;\n      case 'multiselect':\n          if (element.default) {\n            if (element.dataType === 'list' && _.isArray(element.default)) {\n              defaultVal = element.default;\n            } else if (element.dataType === 'list' && _.isString(element.default)) {\n              if (_.includes(element.default, ',')) {\n                defaultVal = _.split(element.default, ',');\n              } else {\n                defaultVal = [element.default];\n              }\n            } else if (element.dataType === 'text') {\n              if (_.includes(element.default, ',')) {\n                defaultVal = _.split(element.default, ',');\n              } else {\n                defaultVal = [element.default];\n              }\n            }\n          } else {\n            defaultVal = [];\n          }\n          break;\n      case 'nestedselect':\n          defaultVal = element.dataType === 'list' ?\n          (element.default && Array.isArray(element.default) ? element.default :\n          _.isEmpty(element.default) ? [] : [element.default]) :\n          (element.default || null);\n          break;\n      case 'checkbox':\n        defaultVal = (element.dataType === 'text') ? (element.default === 'Yes' ? 'Yes' : 'No') : !!element.default;\n        break;\n    }\n\n    formValueList.push(defaultVal);\n\n    if (element.validations && element.validations.length) {\n      element.validations.forEach((data, i) => {\n        switch (data.type) {\n          case 'required':\n            if (element.inputType === 'select' || element.inputType === 'multiselect' || element.inputType === 'nestedselect') {\n              validationList.push(Validators.required);\n            } else if (element.type === 'checkbox') {\n              validationList.push(Validators.requiredTrue);\n            } else {\n              validationList.push(Validators.required);\n            }\n            break;\n          case 'pattern':\n            validationList.push(Validators.pattern(element.validations[i].value as string));\n            break;\n          case 'min':\n            validationList.push(Validators.minLength(element.validations[i].value as number));\n            break;\n          case 'max':\n            validationList.push(Validators.maxLength(element.validations[i].value as number));\n            break;\n        }\n      });\n    }\n\n    formValueList.push(Validators.compose(validationList));\n\n    return formValueList;\n  }\n\n\n  fetchContextTerms(config: FieldConfig<any>, context) {\n    return _.get(_.find(config, {'code': context}), 'terms') || null;\n  }\n\n  getAllDependsFormControl(code, depends) {\n    const fieldDepends: any = {};\n    _.forEach(depends, depend => {\n        if (this.formGroup.get(depend)) {\n            fieldDepends[depend] = this.formGroup.get(depend);\n        }\n      });\n    return fieldDepends || null;\n  }\n\n  fetchDependencyTerms(code, depends) {\n    const dependsTerms = _.map(_.filter(this.flattenSectionFields, c => {\n      return _.includes(depends, c.code);\n    }), (depend) => {\n      return depend.terms || depend.range;\n    });\n    return _.flatten(dependsTerms);\n  }\n\n  getAppIcon(config, val) {\n    if (val) {\n      return config.filter(field => {\n        return field.code === 'appicon';\n      });\n    } else {\n       return config.filter(field => {\n        return field.code !== 'appicon';\n      });\n    }\n  }\n\n  groupBySection(config) {\n    const fields = this.getAppIcon(config, false);\n    return _.groupBy(fields, 'section.index');\n  }\n\n  getFlattenedSectionFields() {\n    return _.flatten(_.map(this.config, 'fields'));\n  }\n\n}\n","import {Component, Input, OnInit, AfterViewInit, OnChanges, ViewChild, ElementRef} from '@angular/core';\nimport {FormControl} from '@angular/forms';\nimport { FieldConfigAsyncValidation } from '../common-form-config';\n\n@Component({\n  selector: 'sb-dynamic-textbox',\n  templateUrl: './dynamic-textbox.component.html',\n  styleUrls: ['./dynamic-textbox.component.css']\n})\nexport class DynamicTextboxComponent implements OnInit,  AfterViewInit, OnChanges  {\n\n  @Input() asyncValidation?: FieldConfigAsyncValidation;\n  @Input() label: String;\n  @Input() labelHtml: any;\n  @Input() placeholder: String;\n  @Input() validations?: any;\n  @Input() formControlRef?: FormControl;\n  @Input() prefix?: String;\n  @Input() default: String;\n  @Input() disabled: Boolean;\n  @ViewChild('validationTrigger', {static: false}) validationTrigger: ElementRef;\n\n  constructor() {\n  }\n\n  ngOnInit() {\n  }\n\n  ngOnChanges() {\n  }\n\n  ngAfterViewInit() {\n    if (this.asyncValidation && this.asyncValidation.asyncValidatorFactory && this.formControlRef) {\n      if (this.formControlRef.asyncValidator) {\n        return;\n      }\n\n      this.formControlRef.setAsyncValidators(this.asyncValidation.asyncValidatorFactory(\n        this.asyncValidation.marker,\n        this.validationTrigger.nativeElement\n      ));\n    }\n  }\n\n}\n","import {Component, Input, OnInit} from '@angular/core';\nimport {FormControl} from '@angular/forms';\nimport {FieldConfig, FieldConfigValidationType} from '../common-form-config';\nimport {Observable} from 'rxjs';\nimport {map, startWith} from 'rxjs/operators';\n\n@Component({\n  selector: 'sb-dynamic-textarea',\n  templateUrl: './dynamic-textarea.component.html',\n  styleUrls: ['./dynamic-textarea.component.css']\n})\nexport class DynamicTextareaComponent implements OnInit {\n\n  @Input() label: String;\n  @Input() placeholder: String;\n  @Input() formControlRef: FormControl;\n  @Input() field: FieldConfig<String>;\n  @Input() validations?: any;\n  @Input() default: String;\n  @Input() disabled: Boolean;\n\n  remainderValidLength$?: Observable<number>;\n\n  constructor() {\n  }\n\n  ngOnInit() {\n    const maxLengthValidation = this.field.validations &&\n    this.field.validations.find((validation) => validation.type === FieldConfigValidationType.MAXLENGTH);\n\n    if (maxLengthValidation) {\n      this.remainderValidLength$ = this.formControlRef.valueChanges.pipe(\n        startWith(''),\n        map((v) => ((typeof maxLengthValidation.value === 'number') ? maxLengthValidation.value : 0) - (v || '').length)\n      );\n    }\n  }\n\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import {Component, Input, OnChanges, OnDestroy, OnInit, Output, SimpleChanges, EventEmitter} from '@angular/core';\nimport {FormControl, FormGroup} from '@angular/forms';\nimport {Observable, Subject, Subscription, combineLatest, merge} from 'rxjs';\nimport {FieldConfig, FieldConfigOption, FieldConfigOptionsBuilder, DynamicFieldConfigOptionsBuilder} from '../common-form-config';\nimport {tap} from 'rxjs/operators';\nimport * as _ from 'lodash-es';\nimport {ValueComparator} from '../utilities/value-comparator';\n\n@Component({\n  selector: 'sb-dynamic-dropdown',\n  templateUrl: './dynamic-dropdown.component.html',\n  styleUrls: ['./dynamic-dropdown.component.css']\n})\nexport class DynamicDropdownComponent implements OnInit, OnChanges, OnDestroy {\n  ValueComparator = ValueComparator;\n  @Input() field: FieldConfig<String>;\n  @Input() disabled?: boolean;\n  @Input() options: any;\n  @Input() label?: string;\n  @Input() placeholder?: string;\n  @Input() isMultiple?: boolean;\n  @Input() context?: FormControl;\n  @Input() contextTerms?: any;\n  @Input() formControlRef?: FormControl;\n  @Input() formGroup?: FormGroup;\n  @Input() default?: any;\n  @Input() contextData: any;\n  @Input() dataLoadStatusDelegate: Subject<'LOADING' | 'LOADED'>;\n  @Input() type?: string;\n  @Input() styleClass?: string;\n  @Output() onChangeFilter: EventEmitter<any> = new EventEmitter();\n  @Input() validations?: any;\n\n  @Input() depends?: FormControl[];\n  @Input() dependencyTerms?: any = [];\n\n  public isDependsInvalid: any;\n\n  options$?: Observable<FieldConfigOption<any>[]>;\n  contextValueChangesSubscription?: Subscription;\n  selectedType: any;\n  tempAssociation: any;\n  latestParentValue: string;\n  constructor() {\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (!this.options) {\n      this.options = [];\n    }\n    if (this.isOptionsClosure(this.options)) {\n      this.options$ = (this.options as DynamicFieldConfigOptionsBuilder<any>)(\n        this.formControlRef,\n        this.depends,\n        this.formGroup,\n        () => this.dataLoadStatusDelegate.next('LOADING'),\n        () => this.dataLoadStatusDelegate.next('LOADED')\n      ) as any;\n    }\n  }\n\n  ngOnInit() {\n    if (!this.options) {\n      this.options = [];\n    }\n\n    // if (this.context) {\n      // this.contextValueChangesSubscription = this.context.valueChanges.pipe(\n      //   tap(() => {\n      //     this.formControlRef.patchValue(null);\n      //   })\n      // ).subscribe();\n    // }\n\n    this.dataLoadStatusDelegate.subscribe(\n      console.log\n    );\n\n    if (this.field && this.field.range) {\n      this.options = this.field.range;\n    } else if (_.isEmpty(this.options) && _.isEmpty(this.field.range) && this.default) {\n      this.field.range = [];\n      this.field.range.push(this.default);\n    }\n\n\n    if (!_.isEmpty(this.depends)) {\n     this.contextValueChangesSubscription =  merge(..._.map(this.depends, depend => depend.valueChanges)).pipe(\n      tap((value: any) => {\n        this.latestParentValue = value;\n        this.isDependsInvalid = _.includes(_.map(this.depends, depend => depend.invalid), true);\n        this.formControlRef.patchValue(null);\n      })\n      ).subscribe();\n\n      this.isDependsInvalid = _.includes(_.map(this.depends, depend => depend.invalid), true);\n    }\n\n\n    if (this.isOptionsClosure(this.options)) {\n      // tslint:disable-next-line:max-line-length\n      this.options$ = (this.options as DynamicFieldConfigOptionsBuilder<any>)(this.formControlRef, this.depends, this.formGroup, () => this.dataLoadStatusDelegate.next('LOADING'), () => this.dataLoadStatusDelegate.next('LOADED')) as any;\n    }\n  }\n\n  ngOnDestroy(): void {\n    if (this.contextValueChangesSubscription) {\n      this.contextValueChangesSubscription.unsubscribe();\n    }\n  }\n\n  isOptionsArray(options: any) {\n    return Array.isArray(options);\n\n  }\n\n  isOptionsClosure(options: any) {\n    return typeof options === 'function';\n  }\n\n  isOptionsMap(input: any) {\n    return !Array.isArray(input) && typeof input === 'object';\n  }\n\n  isOptionsArrayMap(input: any) {\n    return Array.isArray(input) && typeof input[0] === 'object';\n  }\n\n  onChangeFacet($event) {\n    const selectedObject = this.options.data[$event.currentTarget.options.selectedIndex - 1];\n    const emitPayload = JSON.parse(JSON.stringify(this.options));\n    emitPayload['data'] = selectedObject;\n    emitPayload['selectedLabel'] = selectedObject.label;\n    emitPayload['selectedValue'] = selectedObject.value;\n    this.onChangeFilter.emit(emitPayload);\n  }\n\n  fetchAssociations() {\n    // && this.context.value && this.field.association\n    if (!_.isEmpty(this.depends)) {\n      const filteredTerm = _.find(this.dependencyTerms, terms => {\n        return !_.isEmpty(this.field.output) ?\n        _.includes(this.getParentValue(), terms[this.field.output]) :\n        _.includes(this.getParentValue(), terms.name) ;\n      });\n      if (filteredTerm) {\n        this.tempAssociation =  _.filter(filteredTerm.associations, association => {\n          return (this.field.sourceCategory) ?\n          (association.category === this.field.sourceCategory) :\n          association.category === this.field.code;\n        });\n        return this.tempAssociation;\n      } else  {\n        return this.options;\n      }\n    } else {\n      return this.options;\n    }\n  }\n\n\n  getParentValue() {\n    return this.latestParentValue || _.compact(_.map(this.depends, 'value'));\n  }\n\n  getOptionValueForTerms(option) {\n    if (this.field.output) {\n      if (this.field.dataType === 'list') {\n        return [option[this.field.output]];\n      }\n      return option[this.field.output];\n    } else {\n      return this.field.dataType === 'list' ? [option.name] : option.name;\n    }\n  }\n\n  getOptionValueForRange(option, optionsType) {\n    if (this.field.output) {\n      if (this.field.dataType === 'list') {\n        if (optionsType === 'map' || optionsType === 'closure') {\n          return [option[this.field.output]] || [option.value] || [option.identifier] || [option.name] || [option.label];\n        } else  {\n          return [option];\n        }\n      } else {\n        if (optionsType === 'map' || optionsType === 'closure') {\n          return option[this.field.output] || option.value || option.identifier || option.name || option.label;\n        } else  {\n          return option;\n        }\n      }\n    } else {\n      if (this.field.dataType === 'list') {\n        if (optionsType === 'map' || optionsType === 'closure') {\n          return [option.value] || [option.identifier] || [option.name] || [option.label];\n        } else  {\n          return [option];\n        }\n      } else {\n        if (optionsType === 'map' || optionsType === 'closure') {\n          return  option.name || option.label || option.value || option.identifier;\n        } else  {\n          return option;\n        }\n      }\n    }\n  }\n\n  convertOptionToArray(option, output?) {\n\n  }\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, Input, OnChanges, OnDestroy,\n  OnInit, SimpleChanges, HostListener, ViewChild } from '@angular/core';\nimport {FormControl, FormGroup} from '@angular/forms';\nimport {from, Subject, merge} from 'rxjs';\nimport {FieldConfig, FieldConfigOptionsBuilder, DynamicFieldConfigOptionsBuilder} from '../common-form-config';\nimport {takeUntil, tap} from 'rxjs/operators';\nimport {fromJS, List, Map, Set} from 'immutable';\nimport * as _ from 'lodash-es';\n@Component({\n  selector: 'sb-dynamic-multiple-dropdown',\n  templateUrl: './dynamic-multiple-dropdown.component.html',\n  styleUrls: ['./dynamic-multiple-dropdown.component.css']\n})\nexport class DynamicMultipleDropdownComponent implements OnInit, OnChanges, OnDestroy {\n\n  @Input() disabled?: boolean;\n  @Input() field: FieldConfig<String>;\n  @Input() options: any;\n  @Input() label?: string;\n  @Input() labelHtml: any;\n  @Input() placeholder?: string;\n  @Input() isMultiple = true;\n  @Input() context?: FormControl;\n  @Input() formControlRef?: FormControl;\n  @Input() formGroup?: FormGroup;\n  @Input() platform: any = 'web';\n  @Input() default?: any;\n  @Input() contextData: any;\n  @Input() dataLoadStatusDelegate: Subject<'LOADING' | 'LOADED'>;\n  @Input() depends?: FormControl[];\n  @Input() dependencyTerms?: any = [];\n\n  _: any = _;\n\n\n  public isDependsInvalid: any;\n\n  showModal = false;\n  tempValue = Set<any>();\n  resolvedOptions = List<Map<string, string>>();\n  optionValueToOptionLabelMap = Map<any, string>();\n\n  fromJS = fromJS;\n\n  private dispose$ = new Subject<undefined>();\n\n  @HostListener('document:click')\n  docClick() {\n    if (this.showModal) {\n      this.showModal = false;\n    }\n  }\n  constructor(\n    private changeDetectionRef: ChangeDetectorRef\n  ) {\n  }\n  ngOnInit() {\n    if (this.field && this.field.range) {\n      this.options = this.field.range;\n    }\n\n    if (!_.isEmpty(this.depends)) {\n      merge(..._.map(this.depends, depend => depend.valueChanges)).pipe(\n        tap(() => {\n          this.formControlRef.patchValue(null);\n          this.resetTempValue();\n        }),\n        takeUntil(this.dispose$)\n      ).subscribe();\n\n      merge(..._.map(this.depends, depend => depend.statusChanges)).pipe(\n        tap(() => {\n          this.isDependsInvalid = _.includes(_.map(this.depends, depend => depend.invalid), true);\n        }),\n        takeUntil(this.dispose$)\n      ).subscribe();\n\n      this.isDependsInvalid = _.includes(_.map(this.depends, depend => depend.invalid), true);\n    }\n\n    this.formControlRef.valueChanges.pipe(\n      tap((value) => {\n        this.setTempValue(value);\n        this.changeDetectionRef.detectChanges();\n      }),\n      takeUntil(this.dispose$)\n    ).subscribe();\n    this.setupOptions();\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (!changes['options'] || !changes['options'].currentValue) {\n      return;\n    }\n  }\n\n  onSubmit() {\n    const finalValue = this.tempValue.toList().toJS();\n    this.formControlRef.patchValue(this.isMultiple ? finalValue : finalValue[0]);\n    this.formControlRef.markAsDirty();\n    this.showModal = false;\n  }\n\n  openModal(event) {\n    if (this.context && this.context.invalid) {\n      return;\n    }\n    if (this.disabled === true || this.isDependsInvalid) {\n      return;\n    }\n\n    this.setTempValue(this.formControlRef.value);\n    const htmlCollection = document.getElementsByClassName('sb-modal-dropdown-web');\n    const modalElements = Array.from(htmlCollection);\n    const isModalAlreadyOpened = modalElements.some((element: HTMLElement) => element.hidden === false );\n\n    if (this.platform === 'web' && isModalAlreadyOpened && !this.showModal) {\n      modalElements.forEach((item: HTMLElement) => {\n        item.hidden = true;\n      });\n    }\n\n    if (this.platform === 'web' && this.showModal) {\n      this.showModal = false;\n    } else {\n      this.showModal = true;\n    }\n\n    event.stopPropagation();\n  }\n\n  addSelected(option: Map<string, string>) {\n    if (this.isMultiple) {\n      if(this.field.output) {\n        if(this.tempValue.includes(option.get(this.field.output))) {\n          this.tempValue = this.tempValue.remove(option.get(this.field.output));\n        } else {\n          this.tempValue = this.tempValue.add(option.get(this.field.output));\n        }\n      } else if (this.tempValue.includes(option.get('name'))) {\n        this.tempValue = this.tempValue.remove(option.get('name'));\n      } else if (this.tempValue.includes(option.get('identifier'))) {\n        this.tempValue = this.tempValue.remove(option.get('identifier'));\n      } else {\n        this.tempValue = this.tempValue.add(option.get('name'));\n      }\n    } else {\n      if(this.field.output) {\n        this.tempValue = this.tempValue.clear();\n        this.tempValue = this.tempValue.add(option.get(this.field.output))\n      } else {\n        this.tempValue = this.tempValue.clear();\n        this.tempValue = this.tempValue.add(option.get('name'));\n      }\n    }\n  }\n\n  onCancel() {\n    this.formControlRef.markAsDirty();\n    this.showModal = false;\n  }\n\n  ngOnDestroy(): void {\n    this.dispose$.next(null);\n    this.dispose$.complete();\n  }\n\n  private isOptionsArray() {\n    return Array.isArray(this.options);\n  }\n\n  private isOptionsClosure() {\n    return typeof this.options === 'function';\n  }\n\n  private isOptionsMap() {\n    return !Array.isArray(this.options) && typeof this.options === 'object';\n  }\n\n  private setTempValue(value: any) {\n    if (value) {\n      if (Array.isArray(value)) {\n        this.tempValue = Set(fromJS(value));\n      } else {\n        this.tempValue = Set(fromJS([value]));\n      }\n      // this.onSubmit();\n    }\n  }\n\n  private resetTempValue() {\n    this.tempValue = Set(null);\n  }\n\n  private setupOptions() {\n    if (!this.options) {\n      this.options = [];\n      this.resolvedOptions = this.resolvedOptions.clear();\n    }\n\n    if (this.isOptionsArray()) {\n      const optionMap = _.map(this.options, option => {\n        return {\n          identifier: option.value || option.identifier || option.name || option,\n          name: option.label || option.name || option.value || option,\n        };\n      });\n      this.resolvedOptions = fromJS(optionMap);\n    } else if (this.isOptionsMap()) {\n      this.resolvedOptions = (this.depends) ?\n        fromJS(this.options[this.context.value]) :\n        this.resolvedOptions;\n    } else if (this.isOptionsClosure()) {\n      from((this.options as DynamicFieldConfigOptionsBuilder<any>)(\n        this.formControlRef,\n        this.depends,\n        this.formGroup,\n        () => this.dataLoadStatusDelegate.next('LOADING'),\n        () => this.dataLoadStatusDelegate.next('LOADED')\n      )).pipe(\n        tap((options = []) => {\n          this.resolvedOptions = fromJS(options);\n\n          this.resolvedOptions.forEach((option) => {\n            const value: any = !_.isEmpty(this.field.output) ? option.get(this.field.output) :\n             option.get('name') || option.get('identifier') || option.get('value') || option;\n            const labelVal: any = option.get('name') || option.get('label') || option;\n\n            this.optionValueToOptionLabelMap = this.optionValueToOptionLabelMap.set(value, labelVal);\n          });\n\n          this.setTempValue(this.default);\n\n          this.changeDetectionRef.detectChanges();\n        }),\n        takeUntil(this.dispose$)\n      ).subscribe();\n    }\n\n    this.resolvedOptions.forEach((option) => {\n      const value: any = !_.isEmpty(this.field.output) ? option.get(this.field.output) :\n      option.get('name') || option.get('identifier') || option.get('value') || option;\n\n      const labelVal: any = option.get('name') || option.get('label') || option;\n\n      this.optionValueToOptionLabelMap = this.optionValueToOptionLabelMap.set(value, labelVal);\n    });\n\n    this.setTempValue(this.default);\n  }\n\n}\n","import { Component, Input, OnInit, Output, EventEmitter } from '@angular/core';\nimport {FormControl, FormGroup} from '@angular/forms';\nimport {Observable, Subject, Subscription, combineLatest, merge} from 'rxjs';\nimport {FieldConfig, FieldConfigOption, FieldConfigOptionsBuilder} from '../common-form-config';\nimport {tap} from 'rxjs/operators';\nimport * as _ from 'lodash-es';\nimport {ValueComparator} from '../utilities/value-comparator';\n\n\n@Component({\n  selector: 'sb-dynamic-checkbox',\n  templateUrl: './dynamic-checkbox.component.html',\n  styleUrls: ['./dynamic-checkbox.component.css']\n})\nexport class DynamicCheckboxComponent implements OnInit {\n\n  ValueComparator = ValueComparator;\n  @Input() field: FieldConfig<String>;\n  @Input() disabled?: boolean;\n  @Input() options: any;\n  @Input() label?: string;\n  @Input() placeholder?: string;\n  @Input() isMultiple?: boolean;\n  @Input() context?: FormControl;\n  @Input() contextTerms?: any;\n  @Input() formControlRef?: FormControl;\n  @Input() formGroup?: FormGroup;\n  @Input() default?: any;\n  @Input() contextData: any;\n  @Input() dataLoadStatusDelegate: Subject<'LOADING' | 'LOADED'>;\n  @Input() type?: string;\n  @Input() styleClass?: string;\n  @Output() onChangeFilter: EventEmitter<any> = new EventEmitter();\n  @Input() validations?: any;\n\n  @Input() depends?: FormControl[];\n  @Input() dependencyTerms?: any = [];\n\n  _: any = _;\n\n  public checked: boolean;\n\n  constructor() { }\n\n  ngOnInit() {\n    const desiredValue = (this.field.dataType === 'text') ? (this.field.default === 'Yes' ? true : false) : !!this.field.default;\n    this.checked = desiredValue;\n  }\n\n  onChecklistChange(checked) {\n    this.checked = checked;\n    const desiredValue = (this.field.dataType === 'text') ? (checked === true ? 'Yes' : 'No') : checked;\n    this.formControlRef.setValue(desiredValue);\n  }\n\n\n}\n","import { Component, EventEmitter, Input, OnDestroy, OnInit, Output, AfterViewInit } from '@angular/core';\nimport { Subscription, combineLatest, Subject, merge, from } from 'rxjs';\nimport * as _ from 'lodash-es';\nimport { FormControl , FormGroup} from '@angular/forms';\nimport { FieldConfig } from '../common-form-config';\nimport { tap, takeUntil } from 'rxjs/operators';\n\ndeclare var treePicker: any;\ndeclare var $: any;\ninterface TopicTreeNode {\n  id: string;\n  name: string;\n  selectable: string;\n  nodes: Array<TopicTreeNode>;\n}\ninterface JQuery {\n  treePicker(options?: any);\n}\n\n\n@Component({\n  selector: 'sb-topicpicker',\n  templateUrl: './topicpicker.component.html',\n  styleUrls: ['./topicpicker.component.css']\n})\nexport class TopicpickerComponent implements OnInit, OnDestroy, AfterViewInit {\n\n  @Input() selectedTopics: any;\n  @Input() topicPickerClass: string;\n  @Input() label: String;\n  @Input() disabled?: boolean;\n  @Input() placeholder: String;\n  @Input() formControlRef: FormControl;\n  @Input() field: FieldConfig<String>;\n  @Output() topicChange = new EventEmitter();\n  @Input() validations?: any;\n  @Input() formGroup?: FormGroup;\n  @Input() default?: any;\n\n  @Input() depends?: FormControl[];\n  @Input() dependencyTerms?: any = [];\n  public selectedNodes: any;\n  public placeHolder: string;\n\n  public isDependsInvalid: any;\n  private dispose$ = new Subject<undefined>();\n  latestParentValue: string;\n  tempAssociation: any;\n\n  constructor() { }\n\n  ngOnInit() {\n\n    this.formControlRef.valueChanges.pipe(\n      tap(val => {\n        console.log(val);\n      }),\n      takeUntil(this.dispose$)\n    ).subscribe();\n    const selectedTopics = _.reduce(this.default, (collector, element) => {\n      if (typeof element === 'string') {\n        collector.unformatted.push(element);\n      } else if (_.get(element, 'identifier')) {\n        collector.formatted.push(element);\n      }\n      return collector;\n    }, { formatted: [], unformatted: [] });\n\n    this.formatSelectedTopics(this.field.terms, selectedTopics.unformatted, selectedTopics.formatted);\n    this.default = selectedTopics.unformatted;\n    this.selectedNodes = { ...selectedTopics.formatted };\n    this.topicChange.emit(this.selectedTopics);\n\n\n\n\n    if (!_.isEmpty(this.default)) {\n      this.placeHolder = this.default &&  this.default.length + ' topics selected';\n      this.formControlRef.setValue(this.default);\n    }\n\n\n    if (!_.isEmpty(this.depends)) {\n      merge(..._.map(this.depends, depend => depend.valueChanges)).pipe(\n       tap((value: any) => {\n         this.latestParentValue = value;\n         this.isDependsInvalid = _.includes(_.map(this.depends, depend => depend.invalid), true);\n         this.formControlRef.patchValue(null);\n         this.placeHolder = '';\n         this.default = [];\n         this.selectedNodes = {};\n         this.initTopicPicker(this.formatTopics(this.fetchAssociations()));\n       }),\n       takeUntil(this.dispose$)\n       ).subscribe();\n\n       this.isDependsInvalid = _.includes(_.map(this.depends, depend => depend.invalid), true);\n     }\n\n  }\n\n  // tslint:disable-next-line:use-life-cycle-interface\n  ngAfterViewInit() {\n    this.initTopicPicker(this.formatTopics(this.field.terms));\n\n  }\n\n  ngOnDestroy(): void {\n    this.dispose$.next(null);\n    this.dispose$.complete();\n  }\n\n  private formatTopics(topics, subTopic = false): Array<TopicTreeNode> {\n    return _.map(topics, (topic) => ({\n      id: topic.identifier,\n      name: topic.name,\n      selectable: subTopic ? 'selectable' : 'notselectable',\n      nodes: this.formatTopics(topic.children, true)\n    }));\n  }\n\n  private formatSelectedTopics(topics, unformatted, formatted) {\n    _.forEach(topics, (topic) => {\n      if (unformatted.includes(this.field.output ? topic[this.field.output] : topic.name) && !topic.children) {\n        formatted.push({\n          identifier: topic.identifier,\n          name: topic.name\n        });\n      }\n      if (topic.children) {\n        this.formatSelectedTopics(topic.children, unformatted, formatted);\n      }\n    });\n  }\n\n  private initTopicPicker(data: Array<TopicTreeNode>) {\n      $(`.topic-picker-selector_${this.field.code}`).treePicker({\n        data: data,\n        name: 'Topics',\n        noDataMessage: 'noDataMessage',\n        submitButtonText: 'Done',\n        cancelButtonText: 'Cancel',\n        removeAllText: 'Remove All',\n        chooseAllText: 'Choose All',\n        searchText: 'Search',\n        selectedText: 'selected',\n        picked: (!_.isEmpty(this.selectedNodes)) ? _.map(this.selectedNodes, 'identifier') : (!_.isEmpty(this.default) ? this.default : []),\n        onSubmit: (selectedNodes) => {\n          this.selectedNodes = selectedNodes;\n          this.selectedTopics = _.map(selectedNodes, node => ({\n            identifier: node.id,\n            name: node.name\n          }));\n          this.placeHolder = this.selectedTopics.length + ' topics selected';\n          this.topicChange.emit(this.selectedTopics);\n          const topics = [];\n          _.forEach(this.selectedTopics, (value, index) => {\n            if (this.field.output) {\n             topics.push(value[this.field.output]);\n            } else {\n              topics.push(value.name);\n            }\n          });\n          this.formControlRef.setValue(topics);\n        },\n        nodeName: `topicSelector_${this.field.code}`,\n        displayFormat: function(picked) { return this.placeHolder; } ,\n        minSearchQueryLength: 1,\n        disabled: (node)  => {\n          return this.disabled ? true : ( this.depends ? (this.isDependsInvalid ? true : false) : false )\n        }\n      });\n      setTimeout(() => document.getElementById(`topicSelector_${this.field.code}`).classList.add(this.topicPickerClass), 0);\n  }\n\n  fetchAssociations() {\n    // && this.context.value && this.field.association\n    if (!_.isEmpty(this.depends)) {\n      const filteredTerm = _.find(this.dependencyTerms, terms => {\n        return !_.isEmpty(this.field.output) ? _.includes(this.getParentValue(), terms[this.field.output]) :\n         _.includes(this.getParentValue(), terms.name) ;\n      });\n      if (filteredTerm) {\n        this.tempAssociation =  _.filter(filteredTerm.associations, association => {\n          return (this.field.sourceCategory) ? (association.category === this.field.sourceCategory) :\n           association.category === this.field.code;\n        });\n        return this.tempAssociation;\n      } else  {\n        return this.field.terms;\n      }\n    } else {\n      return this.field.terms;\n    }\n  }\n\n  getParentValue() {\n    return this.latestParentValue || _.compact(_.map(this.depends, 'value'));\n  }\n\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { FieldConfig } from '../common-form-config';\nimport * as _ from 'lodash-es';\n\n@Component({\n  selector: 'sb-keywords',\n  templateUrl: './keywords.component.html',\n  styleUrls: ['./keywords.component.css']\n})\nexport class KeywordsComponent implements OnInit {\n  @Input() label: String;\n  @Input() placeholder: String;\n  @Input() formControlRef: FormControl;\n  @Input() field: FieldConfig<String>;\n  @Input() validations?: any;\n  @Input() disabled: Boolean;\n  @Input() default: String;\n\n\n  public items: any;\n  inputText = '';\n  constructor() { }\n\n  ngOnInit() {\n    if (!_.isEmpty(this.default)) {\n      this.items = this.default;\n    }\n  }\n\n}\n","import {Component, Input, OnChanges, OnDestroy, OnInit, Output, SimpleChanges, EventEmitter} from '@angular/core';\nimport {FormControl, FormGroup} from '@angular/forms';\nimport {Observable, Subject, Subscription, combineLatest, merge} from 'rxjs';\nimport {FieldConfig, FieldConfigOption, FieldConfigOptionsBuilder, DynamicFieldConfigOptionsBuilder} from '../common-form-config';\nimport {tap} from 'rxjs/operators';\nimport * as _ from 'lodash-es';\nimport {ValueComparator} from '../utilities/value-comparator';\n@Component({\n  selector: 'sb-dynamic-multi-select',\n  templateUrl: './dynamic-multi-select.component.html',\n  styleUrls: ['./dynamic-multi-select.component.css']\n})\nexport class DynamicMultiSelectComponent implements OnInit, OnChanges, OnDestroy {\n  ValueComparator = ValueComparator;\n  @Input() field: FieldConfig<String>;\n  @Input() disabled?: boolean;\n  @Input() options: any;\n  @Input() label?: string;\n  @Input() placeHolder?: string;\n  @Input() isMultiple?: boolean;\n  @Input() context?: FormControl;\n  @Input() contextTerms?: any;\n  @Input() formControlRef?: FormControl;\n  @Input() formGroup?: FormGroup;\n  @Input() default?: any;\n  @Input() contextData: any;\n  @Input() dataLoadStatusDelegate: Subject<'LOADING' | 'LOADED'>;\n  @Input() type?: string;\n  @Input() styleClass?: string;\n  @Output() onChangeFilter: EventEmitter<any> = new EventEmitter();\n  @Input() validations?: any;\n\n  @Input() depends?: FormControl[];\n  @Input() dependencyTerms?: any = [];\n\n  options$?: Observable<FieldConfigOption<any>[]>;\n  contextValueChangesSubscription?: Subscription;\n  selectedType: any;\n  tempAssociation: any;\n  latestParentValue: string;\n  constructor() {\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (!this.options) {\n      this.options = [];\n    }\n    if (this.isOptionsClosure(this.options)) {\n      this.options$ = (this.options as DynamicFieldConfigOptionsBuilder<any>)(\n        this.formControlRef,\n        this.depends,\n        this.formGroup,\n        () => this.dataLoadStatusDelegate.next('LOADING'),\n        () => this.dataLoadStatusDelegate.next('LOADED')\n      ) as any;\n    }\n  }\n\n  ngOnInit() {\n    // if (this.context) {\n      // this.contextValueChangesSubscription = this.context.valueChanges.pipe(\n      //   tap(() => {\n      //     this.formControlRef.patchValue(null);\n      //   })\n      // ).subscribe();\n    // }\n\n    this.dataLoadStatusDelegate.subscribe(\n      console.log\n    );\n\n    if (this.field && this.field.range) {\n      this.options = this.field.range;\n    }\n\n\n    if (!_.isEmpty(this.depends) && !this.isOptionsClosure(this.options)) {\n     this.contextValueChangesSubscription =  merge(..._.map(this.depends, depend => depend.valueChanges)).pipe(\n      tap((value: any) => {\n        this.latestParentValue = value;\n      })\n      ).subscribe();\n    }\n\n    if (!_.isEmpty(this.field.depends)) {\n      merge(..._.map(this.depends, depend => depend.valueChanges)).pipe(\n          tap(() => {\n            // _.forEach(this.field.depends, depend => {\n            //   if (!_.isEmpty(this.formGroup.get(depend))) {\n            //     this.formGroup.get(depend).patchValue(null);\n            //   }\n            // });\n            this.formControlRef.patchValue(null);\n          })\n      ).subscribe();\n    }\n\n\n    if (this.isOptionsClosure(this.options)) {\n      // tslint:disable-next-line:max-line-length\n      this.options$ = (this.options as DynamicFieldConfigOptionsBuilder<any>)(this.formControlRef, this.depends, this.formGroup, () => this.dataLoadStatusDelegate.next('LOADING'), () => this.dataLoadStatusDelegate.next('LOADED')) as any;\n    }\n\n\n\n  }\n\n  ngOnDestroy(): void {\n    if (this.contextValueChangesSubscription) {\n      this.contextValueChangesSubscription.unsubscribe();\n    }\n  }\n\n  isOptionsArray(options: any) {\n    return Array.isArray(options);\n\n  }\n\n  isOptionsClosure(options: any) {\n    return typeof options === 'function';\n  }\n\n  isOptionsMap(input: any) {\n    return !Array.isArray(input) && typeof input === 'object';\n  }\n\n  isOptionsArrayMap(input: any) {\n    return Array.isArray(input) && typeof input[0] === 'object';\n  }\n\n  onChangeFacet($event) {\n    const selectedObject = this.options.data[$event.currentTarget.options.selectedIndex - 1];\n    const emitPayload = JSON.parse(JSON.stringify(this.options));\n    emitPayload['data'] = selectedObject;\n    emitPayload['selectedLabel'] = selectedObject.label;\n    emitPayload['selectedValue'] = selectedObject.value;\n    this.onChangeFilter.emit(emitPayload);\n  }\n\n  fetchAssociations() {\n    // && this.context.value && this.field.association\n    if (!_.isEmpty(this.depends)) {\n      const filteredTerm = _.find(this.dependencyTerms, terms => {\n        return _.includes(this.getParentValue(), terms.identifier);\n      });\n      if (filteredTerm) {\n        this.tempAssociation =  _.filter(filteredTerm.associations, association => {\n          return association.category === this.field.code;\n        });\n        return this.tempAssociation;\n      } else  {\n        return this.options;\n      }\n    } else {\n      return this.options;\n    }\n  }\n\n\n  getParentValue() {\n    return this.latestParentValue || _.compact(_.map(this.depends, 'value'));\n  }\n}\n","import { ComponentFactoryResolver, ComponentRef, Directive, Input, OnInit, ViewContainerRef, Renderer2, ElementRef} from '@angular/core';\n\nimport { FormGroup, FormControl } from '@angular/forms';\nimport { FieldConfig } from '../common-form-config';\n// import { InputComponent } from '../input/input.component';\n// import { ButtonComponent } from '../button/button.component';\n// import { SelectComponent } from '../select/select.component';\nimport * as _ from 'lodash-es';\nimport {Subject} from 'rxjs';\n\n\nimport { DynamicTextboxComponent } from '../dynamic-textbox/dynamic-textbox.component'\nimport { DynamicTextareaComponent } from '../dynamic-textarea/dynamic-textarea.component';\nimport { TopicpickerComponent } from '../topicpicker/topicpicker.component';\nimport { KeywordsComponent } from '../keywords/keywords.component';\nimport { DynamicMultiSelectComponent } from '../dynamic-multi-select/dynamic-multi-select.component';\nimport { DynamicDropdownComponent } from '../dynamic-dropdown/dynamic-dropdown.component';\nimport { DynamicMultipleDropdownComponent } from '../dynamic-multiple-dropdown/dynamic-multiple-dropdown.component';\nimport { DynamicCheckboxComponent } from '../dynamic-checkbox/dynamic-checkbox.component';\n\n\nconst componentMapper = {\n  textarea: DynamicTextareaComponent,\n  text: DynamicTextboxComponent,\n  select: DynamicDropdownComponent,\n  multiselect: DynamicMultiSelectComponent,\n  nestedselect: DynamicMultipleDropdownComponent,\n  keywords: KeywordsComponent,\n  dialcode: DynamicTextboxComponent,\n  topicselector: TopicpickerComponent,\n  licenses: DynamicDropdownComponent,\n  label: DynamicTextboxComponent,\n  number: DynamicTextboxComponent,\n  checkbox: DynamicCheckboxComponent\n};\n\n@Directive({\n  selector: '[sbDynamicField]'\n})\nexport class DynamicFieldDirective implements OnInit {\n\n\n\n  @Input() field: FieldConfig<String>;\n  @Input() formGroup: FormGroup;\n  @Input() formControlRef?: FormControl;\n  @Input() disabled?: boolean;\n  @Input() label: String;\n  @Input() options?: any = [];\n  @Input() placeholder?: string;\n  @Input() context?: FormControl;\n  @Input() validations?: any;\n  @Input() contextTerms?: any = [];\n  @Input() depends?: FormControl[];\n  @Input() dependencyTerms?: any = [];\n  @Input() default: any;\n  @Input() dataLoadStatusDelegate: Subject<'LOADING' | 'LOADED'>;\n\n  componentRef: any;\n\n\n  constructor(\n    private resolver: ComponentFactoryResolver,\n    private container: ViewContainerRef,\n    private renderer2: Renderer2,\n    private elementRef: ElementRef\n\n  ) { }\n\n  ngOnInit() {\n    const factory = this.resolver.resolveComponentFactory(componentMapper[this.field.inputType]);\n    this.componentRef = this.container.createComponent(factory);\n    // this.renderer2.appendChild(this.elementRef.nativeElement, this.componentRef.location.nativeElement);\n    if (this.field.renderingHints && this.field.renderingHints.class) {\n      this.setClassListOnElement(this.field.renderingHints.class);\n    }\n    this.componentRef.instance.field = this.field;\n    this.componentRef.instance.formGroup = this.formGroup;\n    this.componentRef.instance.formControlRef = this.formControlRef;\n    this.componentRef.instance.label = this.label;\n    this.componentRef.instance.placeholder = this.placeholder;\n    this.componentRef.instance.options = this.options;\n    this.componentRef.instance.context = this.context;\n    this.componentRef.instance.contextTerms = this.contextTerms;\n    this.componentRef.instance.depends = this.depends;\n    this.componentRef.instance.dependencyTerms = this.dependencyTerms;\n    this.componentRef.instance.default = this.default;\n    this.componentRef.instance.dataLoadStatusDelegate = this.dataLoadStatusDelegate;\n    this.componentRef.instance.validations = this.validations;\n    this.componentRef.instance.disabled = this.disabled;\n\n    // this.componentRef.instance = {\n    //   field : this.field,\n    //   formGroup : this.formGroup,\n    //   formControlRef : this.formControlRef,\n    //   label : this.label,\n    //   options : this.options,\n    //   context : this.context\n    // };\n  }\n\n  setClassListOnElement (cssClasses) {\n    const classList = cssClasses.split(' ');\n    _.forEach(classList, cssClass => {\n      this.renderer2.addClass(this.componentRef.location.nativeElement, cssClass);\n    });\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CommonFormElementsComponent } from './common-form-elements.component';\nimport { DropdownComponent } from './dropdown/dropdown.component';\nimport { TextboxComponent } from './textbox/textbox.component';\nimport { TextareaComponent } from './textarea/textarea.component';\nimport { CheckboxComponent } from './checkbox/checkbox.component';\nimport { FormComponent } from './form/form.component';\nimport { OptionGroupComponent } from './option-group/option-group.component';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { DropdownIconComponent } from './icon/dropdown/dropdownIcon.component';\nimport { MultipleDropdownComponent } from './multiple-dropdown/multiple-dropdown.component';\nimport { CaretDownComponent } from './icon/caret-down/caret-down.component';\nimport { PipesModule } from './pipes/pipes.module';\nimport { RedExclamationComponent } from './icon/red-exclamation/red-exclamation.component';\nimport { GreenTickComponent } from './icon/green-tick/green-tick.component';\nimport { EmptyCircleComponent } from './icon/empty-circle/empty-circle.component';\nimport { FiltersComponent } from './filters/filters.component';\nimport { PillsComponent } from './pills/pills.component';\n\n\nimport { DynamicFormComponent } from './dynamic-form/dynamic-form.component';\nimport { DynamicTextboxComponent } from './dynamic-textbox/dynamic-textbox.component';\nimport { DynamicTextareaComponent } from './dynamic-textarea/dynamic-textarea.component';\nimport { DynamicDropdownComponent } from './dynamic-dropdown/dynamic-dropdown.component';\nimport { DynamicMultipleDropdownComponent } from './dynamic-multiple-dropdown/dynamic-multiple-dropdown.component';\nimport { DynamicCheckboxComponent } from './dynamic-checkbox/dynamic-checkbox.component';\nimport { DynamicFieldDirective } from './dynamic-field/dynamic-field.directive';\nimport { DynamicMultiSelectComponent } from './dynamic-multi-select/dynamic-multi-select.component';\nimport { TopicpickerComponent } from './topicpicker/topicpicker.component';\nimport { KeywordsComponent } from './keywords/keywords.component';\nimport { TagInputModule } from 'ngx-chips';\n\n@NgModule({\n   declarations: [\n      CommonFormElementsComponent,\n      DropdownComponent,\n      TextboxComponent,\n      TextareaComponent,\n      CheckboxComponent,\n      FormComponent,\n      OptionGroupComponent,\n      DropdownIconComponent,\n      MultipleDropdownComponent,\n      CaretDownComponent,\n      RedExclamationComponent,\n      GreenTickComponent,\n      EmptyCircleComponent,\n      FiltersComponent,\n      PillsComponent,\n      DynamicFormComponent,\n      DynamicTextboxComponent,\n      DynamicTextareaComponent,\n      DynamicDropdownComponent,\n      DynamicMultipleDropdownComponent,\n      DynamicCheckboxComponent,\n      DynamicFieldDirective,\n      TopicpickerComponent,\n      KeywordsComponent,\n      DynamicMultiSelectComponent\n   ],\n   imports: [\n      CommonModule,\n      ReactiveFormsModule,\n      FormsModule,\n      PipesModule,\n      TagInputModule\n   ],\n   exports: [\n      CommonFormElementsComponent,\n      DropdownComponent,\n      CaretDownComponent,\n      TextboxComponent,\n      TextareaComponent,\n      CheckboxComponent,\n      FormComponent,\n      OptionGroupComponent,\n      DropdownIconComponent,\n      RedExclamationComponent,\n      GreenTickComponent,\n      EmptyCircleComponent,\n      MultipleDropdownComponent,\n      FiltersComponent,\n      DynamicFormComponent,\n      DynamicTextboxComponent,\n      DynamicTextareaComponent,\n      DynamicDropdownComponent,\n      DynamicMultipleDropdownComponent,\n      DynamicCheckboxComponent,\n      DynamicMultiSelectComponent,\n      TopicpickerComponent,\n      KeywordsComponent,\n      DynamicFieldDirective\n   ],\n   entryComponents: [\n      DynamicFormComponent,\n      CommonFormElementsComponent,\n      DynamicTextboxComponent,\n      DynamicTextareaComponent,\n      DynamicDropdownComponent,\n      DynamicMultipleDropdownComponent,\n      DynamicCheckboxComponent,\n      DynamicMultiSelectComponent,\n      TopicpickerComponent,\n      KeywordsComponent\n   ]\n})\nexport class CommonFormElementsModule { }\n"],"names":["CommonFormElementsComponent","prototype","ngOnInit","Component","args","selector","template","ValueComparator","valueComparator","v1","v2","ObjectUtil","equals","a","b","countProps","obj","k","count","hasOwnProperty","objectEquals","toString","Object","getPropDiff","newObj","oldObj","keys","reduce","acc","key","push","getTruthyProps","filter","toOrderedString","JSON","stringify","sort","DropdownComponent","ngOnChanges","changes","_this","this","options","isOptionsClosure","options$","formControlRef","context","dataLoadStatusDelegate","next","contextValueChangesSubscription","valueChanges","pipe","tap","patchValue","subscribe","ngOnDestroy","isOptionsArray","Array","isArray","isOptionsMap","input","onChangeFacet","$event","selectedObject","data","currentTarget","selectedIndex","emitPayload","parse","label","value","onChangeFilter","emit","Input","Output","EventEmitter","TextboxComponent","ngAfterViewInit","asyncValidation","asyncValidatorFactory","asyncValidator","setAsyncValidators","marker","validationTrigger","nativeElement","ViewChild","static","FieldConfigInputType","INPUT","CHECKBOX","SELECT","LABEL","TEXTAREA","NESTED_SELECT","NESTED_GROUP","MULTIPLE_SELECT","FieldConfigValidationType","REQUIRED","MAXLENGTH","REQUIRED_TRUE","MINLENGTH","PATTERN","FilterType","FACET","TextareaComponent","maxLengthValidation","config","validations","find","validation","type","remainderValidLength$","startWith","map","v","length","CheckboxComponent","console","log","labelHtml","handleLinkClick","event","target","hasAttribute","clickedLink","getAttribute","FormComponent","finalize","statusChangesSubscription","unsubscribe","valueChangesSubscription","dataLoadStatusSinkSubscription","currentValue","firstChange","previousValue","initializeForm","scan","loadedCount","loadingCount","aggregates","distinctUntilChanged","result","dataLoadStatus","formGroup","statusChanges","isPristine","pristine","isDirty","dirty","isInvalid","invalid","isValid","valid","onNestedFormFinalize","nestedFormGroup","fieldConfig","get","code","removeControl","controls","onNestedFormInitialize","addControl","FormGroup","formGroupData","forEach","element","index","formValueList","prepareFormValidationData","formBuilder","group","initialize","error","validationList","defaultVal","templateOptions","default","Number","isInteger","multiple","i","Validators","requiredTrue","c","required","pattern","minLength","maxLength","compose","linkClicked","FormBuilder","platform","Subject","window","OptionGroupComponent","changeDetection","ChangeDetectionStrategy","OnPush","DropdownIconComponent","MultipleDropdownComponent","tempValue","clear","setupOptions","takeUntil","dispose$","setTempValue","changeDetectionRef","detectChanges","onSubmit","finalValue","toList","toJS","isMultiple","markAsDirty","showModal","openModal","addSelected","option","includes","remove","add","onCancel","complete","Set","fromJS","resolvedOptions","from","optionValueToOptionLabelMap","set","ChangeDetectorRef","List","Map","CaretDownComponent","TransposeHtmlPipe","transform","values","val","replace","contents","Pipe","name","PipesModule","NgModule","declarations","imports","CommonModule","exports","providers","DatePipe","RedExclamationComponent","GreenTickComponent","EmptyCircleComponent","FiltersComponent","formatFacets","facets","facet","facetObj","facetValue","formattedFacets","selectedFilter","PillsComponent","selectedValue","DynamicFormComponent","dependency","isSection","_.isEmpty","_.find","sections","fields","depends","defaultSection","_.cloneDeep","flattenSectionFields","getFlattenedSectionFields","getFormValidationErrors","errors","_.keys","controlErrors","keyError","control_name","error_name","error_value","inputType","dataType","_.isArray","_.toArray","_.isString","_.toString","_.includes","_.split","fetchContextTerms","_.get","getAllDependsFormControl","fieldDepends","_.forEach","depend","fetchDependencyTerms","dependsTerms","_.map","_.filter","terms","range","_.flatten","getAppIcon","field","groupBySection","_.groupBy","_","DynamicTextboxComponent","DynamicTextareaComponent","__assign","assign","t","s","n","arguments","p","call","apply","__read","o","m","Symbol","iterator","r","e","ar","done","__spread","concat","DynamicDropdownComponent","merge","latestParentValue","isDependsInvalid","isOptionsArrayMap","fetchAssociations","filteredTerm","dependencyTerms","output","getParentValue","tempAssociation","associations","association","category","sourceCategory","_.compact","getOptionValueForTerms","getOptionValueForRange","optionsType","identifier","convertOptionToArray","DynamicMultipleDropdownComponent","docClick","resetTempValue","modalElements","isModalAlreadyOpened","disabled","htmlCollection","document","getElementsByClassName","some","hidden","item","stopPropagation","optionMap","labelVal","HostListener","DynamicCheckboxComponent","desiredValue","checked","onChecklistChange","setValue","TopicpickerComponent","selectedTopics","_.reduce","collector","unformatted","formatted","formatSelectedTopics","selectedNodes","topicChange","placeHolder","initTopicPicker","formatTopics","topics","subTopic","topic","id","selectable","nodes","children","$","treePicker","noDataMessage","submitButtonText","cancelButtonText","removeAllText","chooseAllText","searchText","selectedText","picked","node","nodeName","displayFormat","minSearchQueryLength","setTimeout","getElementById","classList","topicPickerClass","KeywordsComponent","items","inputText","DynamicMultiSelectComponent","componentMapper","textarea","text","select","multiselect","nestedselect","keywords","dialcode","topicselector","licenses","number","checkbox","DynamicFieldDirective","factory","resolver","resolveComponentFactory","componentRef","container","createComponent","renderingHints","class","setClassListOnElement","instance","placeholder","contextTerms","cssClasses","split","cssClass","renderer2","addClass","location","Directive","ComponentFactoryResolver","ViewContainerRef","Renderer2","ElementRef","elementRef","ReactiveFormsModule","FormsModule","TagInputModule","entryComponents","CommonFormElementsModule"],"mappings":"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"}