/**
 * @fileoverview added by tsickle
 * Generated from: lib/dynamic-multiple-dropdown/dynamic-multiple-dropdown.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { ChangeDetectorRef, Component, Input, HostListener } from '@angular/core';
import { FormControl, FormGroup } from '@angular/forms';
import { from, Subject, merge } from 'rxjs';
import { takeUntil, tap } from 'rxjs/operators';
import { fromJS, List, Map, Set } from 'immutable';
import * as _ from 'lodash-es';
var DynamicMultipleDropdownComponent = /** @class */ (function () {
    function DynamicMultipleDropdownComponent(changeDetectionRef) {
        this.changeDetectionRef = changeDetectionRef;
        this.isMultiple = true;
        this.platform = 'web';
        this.dependencyTerms = [];
        this._ = _;
        this.showModal = false;
        this.tempValue = Set();
        this.resolvedOptions = List();
        this.optionValueToOptionLabelMap = Map();
        this.fromJS = fromJS;
        this.dispose$ = new Subject();
    }
    /**
     * @return {?}
     */
    DynamicMultipleDropdownComponent.prototype.docClick = /**
     * @return {?}
     */
    function () {
        if (this.showModal) {
            this.showModal = false;
        }
    };
    /**
     * @return {?}
     */
    DynamicMultipleDropdownComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        var _this = this;
        if (this.field && this.field.range) {
            this.options = this.field.range;
        }
        if (!_.isEmpty(this.depends)) {
            merge.apply(void 0, tslib_1.__spread(_.map(this.depends, (/**
             * @param {?} depend
             * @return {?}
             */
            function (depend) { return depend.valueChanges; })))).pipe(tap((/**
             * @return {?}
             */
            function () {
                _this.formControlRef.patchValue(null);
                _this.resetTempValue();
            })), takeUntil(this.dispose$)).subscribe();
            merge.apply(void 0, tslib_1.__spread(_.map(this.depends, (/**
             * @param {?} depend
             * @return {?}
             */
            function (depend) { return depend.statusChanges; })))).pipe(tap((/**
             * @return {?}
             */
            function () {
                _this.isDependsInvalid = _.includes(_.map(_this.depends, (/**
                 * @param {?} depend
                 * @return {?}
                 */
                function (depend) { return depend.invalid; })), true);
            })), takeUntil(this.dispose$)).subscribe();
            this.isDependsInvalid = _.includes(_.map(this.depends, (/**
             * @param {?} depend
             * @return {?}
             */
            function (depend) { return depend.invalid; })), true);
        }
        this.formControlRef.valueChanges.pipe(tap((/**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            _this.setTempValue(value);
            _this.changeDetectionRef.detectChanges();
        })), takeUntil(this.dispose$)).subscribe();
        this.setupOptions();
    };
    /**
     * @param {?} changes
     * @return {?}
     */
    DynamicMultipleDropdownComponent.prototype.ngOnChanges = /**
     * @param {?} changes
     * @return {?}
     */
    function (changes) {
        if (!changes['options'] || !changes['options'].currentValue) {
            return;
        }
    };
    /**
     * @return {?}
     */
    DynamicMultipleDropdownComponent.prototype.onSubmit = /**
     * @return {?}
     */
    function () {
        /** @type {?} */
        var finalValue = this.tempValue.toList().toJS();
        this.formControlRef.patchValue(this.isMultiple ? finalValue : finalValue[0]);
        this.formControlRef.markAsDirty();
        this.showModal = false;
    };
    /**
     * @param {?} event
     * @return {?}
     */
    DynamicMultipleDropdownComponent.prototype.openModal = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        if (this.context && this.context.invalid) {
            return;
        }
        if (this.disabled === true || this.isDependsInvalid) {
            return;
        }
        this.setTempValue(this.formControlRef.value);
        /** @type {?} */
        var htmlCollection = document.getElementsByClassName('sb-modal-dropdown-web');
        /** @type {?} */
        var modalElements = Array.from(htmlCollection);
        /** @type {?} */
        var isModalAlreadyOpened = modalElements.some((/**
         * @param {?} element
         * @return {?}
         */
        function (element) { return element.hidden === false; }));
        if (this.platform === 'web' && isModalAlreadyOpened && !this.showModal) {
            modalElements.forEach((/**
             * @param {?} item
             * @return {?}
             */
            function (item) {
                item.hidden = true;
            }));
        }
        if (this.platform === 'web' && this.showModal) {
            this.showModal = false;
        }
        else {
            this.showModal = true;
        }
        event.stopPropagation();
    };
    /**
     * @param {?} option
     * @return {?}
     */
    DynamicMultipleDropdownComponent.prototype.addSelected = /**
     * @param {?} option
     * @return {?}
     */
    function (option) {
        if (this.isMultiple) {
            if (this.field.output) {
                if (this.tempValue.includes(option.get(this.field.output))) {
                    this.tempValue = this.tempValue.remove(option.get(this.field.output));
                }
                else {
                    this.tempValue = this.tempValue.add(option.get(this.field.output));
                }
            }
            else if (this.tempValue.includes(option.get('name'))) {
                this.tempValue = this.tempValue.remove(option.get('name'));
            }
            else if (this.tempValue.includes(option.get('identifier'))) {
                this.tempValue = this.tempValue.remove(option.get('identifier'));
            }
            else {
                this.tempValue = this.tempValue.add(option.get('name'));
            }
        }
        else {
            if (this.field.output) {
                this.tempValue = this.tempValue.clear();
                this.tempValue = this.tempValue.add(option.get(this.field.output));
            }
            else {
                this.tempValue = this.tempValue.clear();
                this.tempValue = this.tempValue.add(option.get('name'));
            }
        }
    };
    /**
     * @return {?}
     */
    DynamicMultipleDropdownComponent.prototype.onCancel = /**
     * @return {?}
     */
    function () {
        this.formControlRef.markAsDirty();
        this.showModal = false;
    };
    /**
     * @return {?}
     */
    DynamicMultipleDropdownComponent.prototype.ngOnDestroy = /**
     * @return {?}
     */
    function () {
        this.dispose$.next(null);
        this.dispose$.complete();
    };
    /**
     * @private
     * @return {?}
     */
    DynamicMultipleDropdownComponent.prototype.isOptionsArray = /**
     * @private
     * @return {?}
     */
    function () {
        return Array.isArray(this.options);
    };
    /**
     * @private
     * @return {?}
     */
    DynamicMultipleDropdownComponent.prototype.isOptionsClosure = /**
     * @private
     * @return {?}
     */
    function () {
        return typeof this.options === 'function';
    };
    /**
     * @private
     * @return {?}
     */
    DynamicMultipleDropdownComponent.prototype.isOptionsMap = /**
     * @private
     * @return {?}
     */
    function () {
        return !Array.isArray(this.options) && typeof this.options === 'object';
    };
    /**
     * @private
     * @param {?} value
     * @return {?}
     */
    DynamicMultipleDropdownComponent.prototype.setTempValue = /**
     * @private
     * @param {?} value
     * @return {?}
     */
    function (value) {
        if (value) {
            if (Array.isArray(value)) {
                this.tempValue = Set(fromJS(value));
            }
            else {
                this.tempValue = Set(fromJS([value]));
            }
            // this.onSubmit();
        }
    };
    /**
     * @private
     * @return {?}
     */
    DynamicMultipleDropdownComponent.prototype.resetTempValue = /**
     * @private
     * @return {?}
     */
    function () {
        this.tempValue = Set(null);
    };
    /**
     * @private
     * @return {?}
     */
    DynamicMultipleDropdownComponent.prototype.setupOptions = /**
     * @private
     * @return {?}
     */
    function () {
        var _this = this;
        if (!this.options) {
            this.options = [];
            this.resolvedOptions = this.resolvedOptions.clear();
        }
        if (this.isOptionsArray()) {
            /** @type {?} */
            var optionMap = _.map(this.options, (/**
             * @param {?} option
             * @return {?}
             */
            function (option) {
                return {
                    identifier: option.value || option.identifier || option.name || option,
                    name: option.label || option.name || option.value || option,
                };
            }));
            this.resolvedOptions = fromJS(optionMap);
        }
        else if (this.isOptionsMap()) {
            this.resolvedOptions = (this.depends) ?
                fromJS(this.options[this.context.value]) :
                this.resolvedOptions;
        }
        else if (this.isOptionsClosure()) {
            from(((/** @type {?} */ (this.options)))(this.formControlRef, this.depends, this.formGroup, (/**
             * @return {?}
             */
            function () { return _this.dataLoadStatusDelegate.next('LOADING'); }), (/**
             * @return {?}
             */
            function () { return _this.dataLoadStatusDelegate.next('LOADED'); }))).pipe(tap((/**
             * @param {?=} options
             * @return {?}
             */
            function (options) {
                if (options === void 0) { options = []; }
                _this.resolvedOptions = fromJS(options);
                _this.resolvedOptions.forEach((/**
                 * @param {?} option
                 * @return {?}
                 */
                function (option) {
                    /** @type {?} */
                    var value = !_.isEmpty(_this.field.output) ? option.get(_this.field.output) :
                        option.get('name') || option.get('identifier') || option.get('value') || option;
                    /** @type {?} */
                    var labelVal = option.get('name') || option.get('label') || option;
                    _this.optionValueToOptionLabelMap = _this.optionValueToOptionLabelMap.set(value, labelVal);
                }));
                _this.setTempValue(_this.default);
                _this.changeDetectionRef.detectChanges();
            })), takeUntil(this.dispose$)).subscribe();
        }
        this.resolvedOptions.forEach((/**
         * @param {?} option
         * @return {?}
         */
        function (option) {
            /** @type {?} */
            var value = !_.isEmpty(_this.field.output) ? option.get(_this.field.output) :
                option.get('name') || option.get('identifier') || option.get('value') || option;
            /** @type {?} */
            var labelVal = option.get('name') || option.get('label') || option;
            _this.optionValueToOptionLabelMap = _this.optionValueToOptionLabelMap.set(value, labelVal);
        }));
        this.setTempValue(this.default);
    };
    DynamicMultipleDropdownComponent.decorators = [
        { type: Component, args: [{
                    selector: 'sb-dynamic-multiple-dropdown',
                    template: "<div class=\"multi-select-section-app\">\n  <label class=\"input-label\" *ngIf=\"label\">{{label}}</label>\n  <!-- <div *ngIf=\"labelHtml\" [innerHTML]=\"labelHtml | transposeHtml\"></div> -->\n  <div class=\"multi-select-container\">\n    <sb-caret-down class=\"caret-down\" [ngClass]=\"{'disabled': disabled === true ? true : ( depends ? (isDependsInvalid ? true : null) : null ) }\" (click)=\"openModal($event)\" [attr.disabled]=\"disabled ? true : ( depends ? (isDependsInvalid ? true : null) : null )\">\n    </sb-caret-down>\n    <div class=\"list-border\" (click)=\"openModal($event)\">\n      <ul [ngClass]=\"{'disabled': disabled === true ? true : ( depends ? (isDependsInvalid ? true : null) : null ) }\" [attr.disabled]=\"disabled ? true : ( depends ? (isDependsInvalid ? true : null) : null )\">\n        <ng-container *ngIf=\"isMultiple\">\n          <li *ngIf=\"!formControlRef.value || !formControlRef.value?.length\" class=\"placeholder\">{{placeholder}}</li>\n          <ng-container *ngIf=\"formControlRef.value?.length\">\n            <span *ngFor=\"let value of formControlRef.value; let index=index\">\n              {{optionValueToOptionLabelMap.get(fromJS(value))}}\n              <span *ngIf=\"index < formControlRef.value?.length - 1\">,\n              </span>\n            </span>\n          </ng-container>\n        </ng-container>\n\n        <ng-container *ngIf=\"!isMultiple\">\n          <li *ngIf=\"!formControlRef.value\" class=\"placeholder\">{{placeholder}}</li>\n\n          <span *ngIf=\"formControlRef.value\">{{optionValueToOptionLabelMap.get(fromJS(formControlRef.value))}}</span>\n        </ng-container>\n      </ul>\n    </div>\n    <div class=\"sb-modal-container\" *ngIf=\"platform === 'mobile'\" [hidden]=\"!showModal\" (click)=\"showModal=false;\">\n      <div class=\"sb-modal-overlay\">\n        <div class=\"sb-modal\" (click)=\"$event.stopPropagation()\">\n          <div class=\"header\">\n            {{placeholder}}\n          </div>\n          <div class=\"body\">\n            <ul>\n              <li *ngFor=\"let option of resolvedOptions; let i=index\">\n                <div (click)=\"addSelected(option)\" class=\"row\">\n                  <label class=\"container\" style=\"pointer-events: none\">\n                    <input [checked]=\"!_.isEmpty(field.output) ? tempValue.includes(option.get(field.output)) : tempValue.includes(option.get('name'))\" class=\"sb-checkbox\" type=\"checkbox\">\n                    <span class=\"checkmark\"></span>\n                  </label>\n                  <span>{{option.get('name')}}</span>\n                </div>\n              </li>\n            </ul>\n          </div>\n          <div class=\"footer\">\n            <div class=\"sb-form-button\">\n              <button class=\"sb-btn-primary-outline\" (click)=\"onCancel()\">cancel</button>\n            </div>\n            <div class=\"sb-form-button\">\n              <button class=\"sb-btn-primary\" (click)=\"onSubmit()\">submit</button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"sb-modal-dropdown-web\" *ngIf=\"platform === 'web'\"  [hidden]=\"!showModal\" (click)=\"showModal=false;\">\n      <ul>\n        <li *ngFor=\"let option of resolvedOptions; let i=index\" [ngClass]=\"{'selected-option': !_.isEmpty(field.output) ? tempValue.includes(option.get(field.output)) : tempValue.includes(option.get('name'))}\">\n          <div (click)=\"addSelected(option); onSubmit()\">\n            <span class=\"cursor-pointer\">{{option.get('name')}}</span>\n          </div>\n        </li>\n      </ul>\n    </div>\n  </div>\n</div>\n",
                    styles: [".multi-select-section-app{margin:1rem 0}label{font-size:14px;font-weight:400;margin:0}.multi-select-container{position:relative;margin-bottom:8px}.multi-select-container .caret-down{position:absolute;top:12px;right:19px;z-index:0}.multi-select-container .list-border .placeholder{margin:0;color:var(--gray-100)}.multi-select-container .list-border ul[disabled]{opacity:.3;pointer-events:none}.multi-select-container .list-border ul{list-style-type:none;position:absolute;margin:0;font-size:14px;font-weight:700}.multi-select-container .list-border{border:.5px solid var(--gray-400);padding:1.3rem;cursor:pointer;display:-webkit-box;display:flex;-webkit-box-align:center;align-items:center;left:0;height:40px}.multi-select-container .list-border li{float:left;font-size:12px;font-weight:700;margin-left:4px}.multi-select-container .dropdown li{cursor:pointer;padding:8px;border:1px solid var(--white)}.multi-select-container .dropdown ul{list-style-type:none;margin:0;padding:0}.multi-select-container .row{display:-ms-grid;display:grid;-ms-grid-columns:1fr 10fr;grid-template-columns:1fr 10fr;grid-gap:0}.multi-select-container .footer{display:-ms-grid;display:grid;-ms-grid-columns:1fr 1fr;grid-template-columns:1fr 1fr;grid-gap:0;padding-left:8px;padding-bottom:8px;padding-top:8px}.multi-select-container .sb-modal-container{position:fixed;height:100vh;overflow:hidden;width:100%;left:0;top:0;right:0;z-index:10}.multi-select-container .sb-modal-overlay{position:absolute;width:100%;height:100%;top:0;background:rgba(0,0,0,.6);left:0;z-index:10}.multi-select-container .fa .fa-close{float:right}.multi-select-container .sb-modal{display:block;position:absolute;bottom:0;width:100%;--border-top:0.5px solid var(--white);z-index:11;background:var(--white)}.multi-select-container .sb-modal ul{list-style-type:none}.multi-select-container .sb-modal li{cursor:pointer;padding-bottom:8px;padding-top:8px;padding-left:16px}.value-label{width:270px;white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.multi-select-container .sb-forms-radio{margin-top:6px}.multi-select-container .sb-form-button{display:inline;padding:10px}.multi-select-container .sb-btn-primary-outline{color:var(--primary-color);background-color:transparent;border:.5px solid var(--primary-color);border-radius:4px;padding:10px 40px;font-size:16px;text-transform:uppercase;width:100%}.multi-select-container .sb-btn-primary{color:var(--white);background-color:var(--primary-color);border:.5px solid var(--primary-color);border-radius:4px;padding:10px 40px;font-size:16px;text-transform:uppercase;width:100%}.multi-select-container .header{padding:16px;margin-left:8px;font-weight:700}.multi-select-container .body{padding-top:8px;border-bottom:.5px solid var(--gray-100);border-top:.5px solid var(--gray-100);max-height:300px;overflow:scroll}.list-with-ellipsis:nth-child(3){float:left;font-size:12px;font-weight:700;margin-left:4px;width:50px;white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.list-with-ellipsis:nth-child(n+4){visibility:hidden}.multi-select-container .container{display:block;position:relative;padding-left:35px;margin-bottom:12px;cursor:pointer;font-size:22px;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.container input{position:absolute;opacity:0;cursor:pointer;height:0;width:0}.checkmark{position:absolute;top:3px;left:0;height:15px;width:15px;border:.4px solid var(--black)}.container:hover input~.checkmark{background-color:var(--white)}.container input:checked~.checkmark{background-color:var(--primary-600)}.checkmark:after{content:\"\";position:absolute;display:none}.container input:checked~.checkmark:after{display:block}.container .checkmark:after{left:5px;top:0;width:5px;height:10px;border:solid var(--white);border-width:0 2px 2px 0;-webkit-transform:rotate(45deg);transform:rotate(45deg)}.sb-modal-dropdown-web ul{list-style-type:none;display:block;position:absolute;top:38px;left:0;background-color:#fff;width:100%;z-index:999;box-shadow:2px 2px 2px 2px #f0f8ff;border:2px solid #80a7ce;max-height:314px;overflow:scroll}.sb-modal-dropdown-web ul li{margin-top:10px;margin-bottom:8px;padding:8px;font-size:13px}.sb-modal-dropdown-web .selected-option{font-weight:700;background-color:#eee}::-webkit-scrollbar{width:6px}::-webkit-scrollbar-track{background:#f1f1f1}::-webkit-scrollbar-thumb{background:#888}::-webkit-scrollbar-thumb:hover{background:#555}.cursor-pointer{cursor:pointer}"]
                }] }
    ];
    /** @nocollapse */
    DynamicMultipleDropdownComponent.ctorParameters = function () { return [
        { type: ChangeDetectorRef }
    ]; };
    DynamicMultipleDropdownComponent.propDecorators = {
        disabled: [{ type: Input }],
        field: [{ type: Input }],
        options: [{ type: Input }],
        label: [{ type: Input }],
        labelHtml: [{ type: Input }],
        placeholder: [{ type: Input }],
        isMultiple: [{ type: Input }],
        context: [{ type: Input }],
        formControlRef: [{ type: Input }],
        formGroup: [{ type: Input }],
        platform: [{ type: Input }],
        default: [{ type: Input }],
        contextData: [{ type: Input }],
        dataLoadStatusDelegate: [{ type: Input }],
        depends: [{ type: Input }],
        dependencyTerms: [{ type: Input }],
        docClick: [{ type: HostListener, args: ['document:click',] }]
    };
    return DynamicMultipleDropdownComponent;
}());
export { DynamicMultipleDropdownComponent };
if (false) {
    /** @type {?} */
    DynamicMultipleDropdownComponent.prototype.disabled;
    /** @type {?} */
    DynamicMultipleDropdownComponent.prototype.field;
    /** @type {?} */
    DynamicMultipleDropdownComponent.prototype.options;
    /** @type {?} */
    DynamicMultipleDropdownComponent.prototype.label;
    /** @type {?} */
    DynamicMultipleDropdownComponent.prototype.labelHtml;
    /** @type {?} */
    DynamicMultipleDropdownComponent.prototype.placeholder;
    /** @type {?} */
    DynamicMultipleDropdownComponent.prototype.isMultiple;
    /** @type {?} */
    DynamicMultipleDropdownComponent.prototype.context;
    /** @type {?} */
    DynamicMultipleDropdownComponent.prototype.formControlRef;
    /** @type {?} */
    DynamicMultipleDropdownComponent.prototype.formGroup;
    /** @type {?} */
    DynamicMultipleDropdownComponent.prototype.platform;
    /** @type {?} */
    DynamicMultipleDropdownComponent.prototype.default;
    /** @type {?} */
    DynamicMultipleDropdownComponent.prototype.contextData;
    /** @type {?} */
    DynamicMultipleDropdownComponent.prototype.dataLoadStatusDelegate;
    /** @type {?} */
    DynamicMultipleDropdownComponent.prototype.depends;
    /** @type {?} */
    DynamicMultipleDropdownComponent.prototype.dependencyTerms;
    /** @type {?} */
    DynamicMultipleDropdownComponent.prototype._;
    /** @type {?} */
    DynamicMultipleDropdownComponent.prototype.isDependsInvalid;
    /** @type {?} */
    DynamicMultipleDropdownComponent.prototype.showModal;
    /** @type {?} */
    DynamicMultipleDropdownComponent.prototype.tempValue;
    /** @type {?} */
    DynamicMultipleDropdownComponent.prototype.resolvedOptions;
    /** @type {?} */
    DynamicMultipleDropdownComponent.prototype.optionValueToOptionLabelMap;
    /** @type {?} */
    DynamicMultipleDropdownComponent.prototype.fromJS;
    /**
     * @type {?}
     * @private
     */
    DynamicMultipleDropdownComponent.prototype.dispose$;
    /**
     * @type {?}
     * @private
     */
    DynamicMultipleDropdownComponent.prototype.changeDetectionRef;
}
//# sourceMappingURL=data:application/json;base64,