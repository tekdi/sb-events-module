/**
 * @fileoverview added by tsickle
 * Generated from: lib/multiple-dropdown/multiple-dropdown.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { ChangeDetectionStrategy, ChangeDetectorRef, Component, Input } from '@angular/core';
import { FormControl } from '@angular/forms';
import { from, Subject } from 'rxjs';
import { takeUntil, tap } from 'rxjs/operators';
import { fromJS, List, Map, Set } from 'immutable';
var MultipleDropdownComponent = /** @class */ (function () {
    function MultipleDropdownComponent(changeDetectionRef) {
        this.changeDetectionRef = changeDetectionRef;
        this.showModal = false;
        this.tempValue = Set();
        this.resolvedOptions = List();
        this.optionValueToOptionLabelMap = Map();
        this.fromJS = fromJS;
        this.dispose$ = new Subject();
    }
    /**
     * @return {?}
     */
    MultipleDropdownComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        var _this = this;
        if (this.context) {
            this.context.valueChanges.pipe(tap((/**
             * @return {?}
             */
            function () {
                _this.formControlRef.patchValue(null);
                _this.tempValue = _this.tempValue.clear();
                _this.setupOptions();
            })), takeUntil(this.dispose$)).subscribe();
        }
        this.formControlRef.valueChanges.pipe(tap((/**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            _this.setTempValue(value);
            _this.changeDetectionRef.detectChanges();
        })), takeUntil(this.dispose$)).subscribe();
    };
    /**
     * @param {?} changes
     * @return {?}
     */
    MultipleDropdownComponent.prototype.ngOnChanges = /**
     * @param {?} changes
     * @return {?}
     */
    function (changes) {
        if (!changes['options'] || !changes['options'].currentValue) {
            return;
        }
        this.setupOptions();
    };
    /**
     * @return {?}
     */
    MultipleDropdownComponent.prototype.onSubmit = /**
     * @return {?}
     */
    function () {
        /** @type {?} */
        var finalValue = this.tempValue.toList().toJS();
        this.formControlRef.patchValue(this.isMultiple ? finalValue : finalValue[0]);
        this.formControlRef.markAsDirty();
        this.showModal = false;
    };
    /**
     * @return {?}
     */
    MultipleDropdownComponent.prototype.openModal = /**
     * @return {?}
     */
    function () {
        if (this.context && this.context.invalid) {
            return;
        }
        this.setTempValue(this.formControlRef.value);
        this.showModal = true;
    };
    /**
     * @param {?} option
     * @return {?}
     */
    MultipleDropdownComponent.prototype.addSelected = /**
     * @param {?} option
     * @return {?}
     */
    function (option) {
        if (this.isMultiple) {
            if (this.tempValue.includes(option.get('value'))) {
                this.tempValue = this.tempValue.remove(option.get('value'));
            }
            else {
                this.tempValue = this.tempValue.add(option.get('value'));
            }
        }
        else {
            this.tempValue = this.tempValue.clear();
            this.tempValue = this.tempValue.add(option.get('value'));
        }
    };
    /**
     * @return {?}
     */
    MultipleDropdownComponent.prototype.onCancel = /**
     * @return {?}
     */
    function () {
        this.formControlRef.markAsDirty();
        this.showModal = false;
    };
    /**
     * @return {?}
     */
    MultipleDropdownComponent.prototype.ngOnDestroy = /**
     * @return {?}
     */
    function () {
        this.dispose$.next(null);
        this.dispose$.complete();
    };
    /**
     * @private
     * @return {?}
     */
    MultipleDropdownComponent.prototype.isOptionsArray = /**
     * @private
     * @return {?}
     */
    function () {
        return Array.isArray(this.options);
    };
    /**
     * @private
     * @return {?}
     */
    MultipleDropdownComponent.prototype.isOptionsClosure = /**
     * @private
     * @return {?}
     */
    function () {
        return typeof this.options === 'function';
    };
    /**
     * @private
     * @return {?}
     */
    MultipleDropdownComponent.prototype.isOptionsMap = /**
     * @private
     * @return {?}
     */
    function () {
        return !Array.isArray(this.options) && typeof this.options === 'object';
    };
    /**
     * @private
     * @param {?} value
     * @return {?}
     */
    MultipleDropdownComponent.prototype.setTempValue = /**
     * @private
     * @param {?} value
     * @return {?}
     */
    function (value) {
        if (value) {
            if (Array.isArray(value)) {
                this.tempValue = Set(fromJS(value));
            }
            else {
                this.tempValue = Set(fromJS([value]));
            }
        }
    };
    /**
     * @private
     * @return {?}
     */
    MultipleDropdownComponent.prototype.setupOptions = /**
     * @private
     * @return {?}
     */
    function () {
        var _this = this;
        if (!this.options) {
            this.options = [];
            this.resolvedOptions = this.resolvedOptions.clear();
        }
        if (this.isOptionsArray()) {
            this.resolvedOptions = fromJS(this.options);
        }
        else if (this.isOptionsMap()) {
            this.resolvedOptions = (this.context && this.context.value) ?
                fromJS(this.options[this.context.value]) :
                this.resolvedOptions;
        }
        else if (this.isOptionsClosure()) {
            from(((/** @type {?} */ (this.options)))(this.formControlRef, this.context, (/**
             * @return {?}
             */
            function () { return _this.dataLoadStatusDelegate.next('LOADING'); }), (/**
             * @return {?}
             */
            function () { return _this.dataLoadStatusDelegate.next('LOADED'); }))).pipe(tap((/**
             * @param {?=} options
             * @return {?}
             */
            function (options) {
                if (options === void 0) { options = []; }
                _this.resolvedOptions = fromJS(options);
                _this.resolvedOptions.forEach((/**
                 * @param {?} option
                 * @return {?}
                 */
                function (option) {
                    _this.optionValueToOptionLabelMap = _this.optionValueToOptionLabelMap.set(option.get('value'), option.get('label'));
                }));
                _this.setTempValue(_this.default);
                _this.changeDetectionRef.detectChanges();
            })), takeUntil(this.dispose$)).subscribe();
        }
        this.resolvedOptions.forEach((/**
         * @param {?} option
         * @return {?}
         */
        function (option) {
            _this.optionValueToOptionLabelMap = _this.optionValueToOptionLabelMap.set(option.get('value'), option.get('label'));
        }));
        this.setTempValue(this.default);
    };
    MultipleDropdownComponent.decorators = [
        { type: Component, args: [{
                    selector: 'sb-multiple-dropdown',
                    template: "<div class=\"multi-select-section\">\n  <label class=\"input-label\" *ngIf=\"label\">{{label}}</label>\n  <div *ngIf=\"labelHtml\" [innerHTML]=\"labelHtml | transposeHtml\"></div>\n  <div class=\"multi-select-container\">\n    <sb-caret-down class=\"caret-down\"\n      [attr.disabled]=\"disabled ? true : ( context ? (context.invalid ? true : null) : null )\" (click)=\"openModal()\">\n    </sb-caret-down>\n    <div class=\"list-border\" (click)=\"openModal()\">\n      <ul [attr.disabled]=\"disabled ? true : ( context ? (context.invalid ? true : null) : null )\">\n        <ng-container *ngIf=\"isMultiple\">\n          <li *ngIf=\"!formControlRef.value || !formControlRef.value.length\" class=\"placeholder\">{{placeHolder}}</li>\n\n          <ng-container *ngIf=\"formControlRef.value?.length\">\n            <span *ngFor=\"let value of formControlRef.value; let index=index\">\n              {{optionValueToOptionLabelMap.get(fromJS(value))}}<span\n            *ngIf=\"index < formControlRef.value.length - 1\">, </span>\n            </span>\n          </ng-container>\n        </ng-container>\n\n        <ng-container *ngIf=\"!isMultiple\">\n          <li *ngIf=\"!formControlRef.value\" class=\"placeholder\">{{placeHolder}}</li>\n\n          <span *ngIf=\"formControlRef.value\">{{optionValueToOptionLabelMap.get(fromJS(formControlRef.value))}}</span>\n        </ng-container>\n      </ul>\n    </div>\n    <div class=\"sb-modal-container\" [hidden]=\"!showModal\" (click)=\"showModal=false;\">\n      <div class=\"sb-modal-overlay\">\n        <div class=\"sb-modal\" (click)=\"$event.stopPropagation()\">\n          <div class=\"header\">\n            {{placeHolder}}\n          </div>\n          <div class=\"body\">\n            <ul>\n              <li *ngFor=\"let option of resolvedOptions; let i=index\">\n                <div (click)=\"addSelected(option)\" class=\"row\">\n                  <label class=\"container\" style=\"pointer-events: none\">\n                    <input [checked]=\"tempValue.includes(option.get('value'))\" class=\"sb-checkbox\" type=\"checkbox\">\n                    <span class=\"checkmark\"></span>\n                  </label>\n                  <span>{{option.get('label')}}</span>\n                </div>\n              </li>\n            </ul>\n          </div>\n          <div class=\"footer\">\n            <div class=\"sb-form-button\">\n              <button class=\"sb-btn-primary-outline\" (click)=\"onCancel()\">cancel</button>\n            </div>\n            <div class=\"sb-form-button\">\n              <button class=\"sb-btn-primary\" (click)=\"onSubmit()\">submit</button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>",
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    styles: [".multi-select-section{margin:1rem 0}label{font-size:1rem;margin:0}.multi-select-container{position:relative;margin-bottom:8px}.multi-select-container .caret-down{position:absolute;top:11px;right:19px;z-index:0}.multi-select-container .list-border .placeholder{font-size:12px;font-weight:700;margin-left:12px;color:var(--gray-100)}.multi-select-container .list-border ul[disabled]{opacity:.3;pointer-events:none}.multi-select-container .list-border ul{list-style-type:none;margin-top:3px;margin-left:8px;position:absolute;top:0;left:0}.multi-select-container .list-border{border:.5px solid var(--gray-400);padding:1.3rem;cursor:pointer}.multi-select-container .list-border li{float:left;font-size:12px;font-weight:700;margin-left:4px}.multi-select-container .dropdown li{cursor:pointer;padding:8px;border:1px solid var(--white)}.multi-select-container .dropdown ul{list-style-type:none;margin:0;padding:0}.multi-select-container .row{display:-ms-grid;display:grid;-ms-grid-columns:1fr 10fr;grid-template-columns:1fr 10fr;grid-gap:0}.multi-select-container .footer{display:-ms-grid;display:grid;-ms-grid-columns:1fr 1fr;grid-template-columns:1fr 1fr;grid-gap:0;padding-left:8px;padding-bottom:8px;padding-top:8px}.multi-select-container .sb-modal-container{position:fixed;height:100vh;overflow:hidden;width:100%;left:0;top:0;right:0;z-index:10}.multi-select-container .sb-modal-overlay{position:absolute;width:100%;height:100%;top:0;background:rgba(0,0,0,.6);left:0;z-index:10}.multi-select-container .fa .fa-close{float:right}.multi-select-container .sb-modal{display:block;position:absolute;bottom:0;width:100%;--border-top:0.5px solid var(--white);z-index:11;background:var(--white)}.multi-select-container .sb-modal ul{list-style-type:none}.multi-select-container .sb-modal li{cursor:pointer;padding-bottom:8px;padding-top:8px;padding-left:16px}.value-label{width:270px;white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.multi-select-container .sb-forms-radio{margin-top:6px}.multi-select-container .sb-form-button{display:inline;padding:10px}.multi-select-container .sb-btn-primary-outline{color:var(--primary-color);background-color:transparent;border:.5px solid var(--primary-color);border-radius:4px;padding:10px 40px;font-size:16px;text-transform:uppercase;width:100%}.multi-select-container .sb-btn-primary{color:var(--white);background-color:var(--primary-color);border:.5px solid var(--primary-color);border-radius:4px;padding:10px 40px;font-size:16px;text-transform:uppercase;width:100%}.multi-select-container .header{padding:16px;margin-left:8px;font-weight:700}.multi-select-container .body{padding-top:8px;border-bottom:.5px solid var(--gray-100);border-top:.5px solid var(--gray-100);max-height:300px;overflow:scroll}.list-with-ellipsis:nth-child(3){float:left;font-size:12px;font-weight:700;margin-left:4px;width:50px;white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.list-with-ellipsis:nth-child(n+4){visibility:hidden}.multi-select-container .container{display:block;position:relative;padding-left:35px;margin-bottom:12px;cursor:pointer;font-size:22px;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.container input{position:absolute;opacity:0;cursor:pointer;height:0;width:0}.checkmark{position:absolute;top:3px;left:0;height:15px;width:15px;border:.4px solid var(--black)}.container:hover input~.checkmark{background-color:var(--white)}.container input:checked~.checkmark{background-color:var(--primary-600)}.checkmark:after{content:\"\";position:absolute;display:none}.container input:checked~.checkmark:after{display:block}.container .checkmark:after{left:5px;top:0;width:5px;height:10px;border:solid var(--white);border-width:0 2px 2px 0;-webkit-transform:rotate(45deg);transform:rotate(45deg)}"]
                }] }
    ];
    /** @nocollapse */
    MultipleDropdownComponent.ctorParameters = function () { return [
        { type: ChangeDetectorRef }
    ]; };
    MultipleDropdownComponent.propDecorators = {
        disabled: [{ type: Input }],
        options: [{ type: Input }],
        label: [{ type: Input }],
        labelHtml: [{ type: Input }],
        placeHolder: [{ type: Input }],
        isMultiple: [{ type: Input }],
        context: [{ type: Input }],
        formControlRef: [{ type: Input }],
        default: [{ type: Input }],
        contextData: [{ type: Input }],
        dataLoadStatusDelegate: [{ type: Input }]
    };
    return MultipleDropdownComponent;
}());
export { MultipleDropdownComponent };
if (false) {
    /** @type {?} */
    MultipleDropdownComponent.prototype.disabled;
    /** @type {?} */
    MultipleDropdownComponent.prototype.options;
    /** @type {?} */
    MultipleDropdownComponent.prototype.label;
    /** @type {?} */
    MultipleDropdownComponent.prototype.labelHtml;
    /** @type {?} */
    MultipleDropdownComponent.prototype.placeHolder;
    /** @type {?} */
    MultipleDropdownComponent.prototype.isMultiple;
    /** @type {?} */
    MultipleDropdownComponent.prototype.context;
    /** @type {?} */
    MultipleDropdownComponent.prototype.formControlRef;
    /** @type {?} */
    MultipleDropdownComponent.prototype.default;
    /** @type {?} */
    MultipleDropdownComponent.prototype.contextData;
    /** @type {?} */
    MultipleDropdownComponent.prototype.dataLoadStatusDelegate;
    /** @type {?} */
    MultipleDropdownComponent.prototype.showModal;
    /** @type {?} */
    MultipleDropdownComponent.prototype.tempValue;
    /** @type {?} */
    MultipleDropdownComponent.prototype.resolvedOptions;
    /** @type {?} */
    MultipleDropdownComponent.prototype.optionValueToOptionLabelMap;
    /** @type {?} */
    MultipleDropdownComponent.prototype.fromJS;
    /**
     * @type {?}
     * @private
     */
    MultipleDropdownComponent.prototype.dispose$;
    /**
     * @type {?}
     * @private
     */
    MultipleDropdownComponent.prototype.changeDetectionRef;
}
//# sourceMappingURL=data:application/json;base64,