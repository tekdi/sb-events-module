/**
 * @fileoverview added by tsickle
 * Generated from: lib/textarea/textarea.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input } from '@angular/core';
import { FormControl } from '@angular/forms';
import { FieldConfigValidationType } from '../common-form-config';
import { map, startWith } from 'rxjs/operators';
var TextareaComponent = /** @class */ (function () {
    function TextareaComponent() {
    }
    /**
     * @return {?}
     */
    TextareaComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        /** @type {?} */
        var maxLengthValidation = this.config.validations && this.config.validations.find((/**
         * @param {?} validation
         * @return {?}
         */
        function (validation) { return validation.type === FieldConfigValidationType.MAXLENGTH; }));
        if (maxLengthValidation) {
            this.remainderValidLength$ = this.formControlRef.valueChanges.pipe(startWith(''), map((/**
             * @param {?} v
             * @return {?}
             */
            function (v) { return ((typeof maxLengthValidation.value === 'number') ? maxLengthValidation.value : 0) - (v || '').length; })));
        }
    };
    TextareaComponent.decorators = [
        { type: Component, args: [{
                    selector: 'sb-textarea',
                    template: "<div class=\"sb-textarea-container\">\n  <label>{{label}}</label>\n  <textarea class=\"sb-textarea\" [formControl]=\"formControlRef\" rows=\"5\" name=\"sb-textarea\" placeholder={{placeholder}}>\n  </textarea>\n  <div class=\"remaining-length\" *ngIf=\"remainderValidLength$\">\n     {{remainderValidLength$ | async}} Characters left\n  </div>\n</div>\n",
                    styles: ["label{display:block;padding:8px 0 0;font-size:14px}.sb-textarea{width:100%;padding:8px;box-sizing:border-box;border:1px solid #ccc;border-radius:.25rem;resize:vertical}.sb-textarea-container{margin-bottom:10px;position:relative}.remaining-length{position:absolute;bottom:.5rem;right:1rem;font-size:10px;color:#999}::-webkit-input-placeholder{padding:.25rem;color:#999;font-family:\"Noto Sans\";font-size:14px;letter-spacing:0;line-height:20px}::-moz-placeholder{padding:.25rem;color:#999;font-family:\"Noto Sans\";font-size:14px;letter-spacing:0;line-height:20px}:-ms-input-placeholder{padding:.25rem;color:#999;font-family:\"Noto Sans\";font-size:14px;letter-spacing:0;line-height:20px}::-ms-input-placeholder{padding:.25rem;color:#999;font-family:\"Noto Sans\";font-size:14px;letter-spacing:0;line-height:20px}::placeholder{padding:.25rem;color:#999;font-family:\"Noto Sans\";font-size:14px;letter-spacing:0;line-height:20px}"]
                }] }
    ];
    /** @nocollapse */
    TextareaComponent.ctorParameters = function () { return []; };
    TextareaComponent.propDecorators = {
        label: [{ type: Input }],
        placeholder: [{ type: Input }],
        formControlRef: [{ type: Input }],
        config: [{ type: Input }]
    };
    return TextareaComponent;
}());
export { TextareaComponent };
if (false) {
    /** @type {?} */
    TextareaComponent.prototype.label;
    /** @type {?} */
    TextareaComponent.prototype.placeholder;
    /** @type {?} */
    TextareaComponent.prototype.formControlRef;
    /** @type {?} */
    TextareaComponent.prototype.config;
    /** @type {?} */
    TextareaComponent.prototype.remainderValidLength$;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGV4dGFyZWEuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vY29tbW9uLWZvcm0tZWxlbWVudHMvIiwic291cmNlcyI6WyJsaWIvdGV4dGFyZWEvdGV4dGFyZWEuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsT0FBTyxFQUFDLFNBQVMsRUFBRSxLQUFLLEVBQVMsTUFBTSxlQUFlLENBQUM7QUFDdkQsT0FBTyxFQUFDLFdBQVcsRUFBQyxNQUFNLGdCQUFnQixDQUFDO0FBQzNDLE9BQU8sRUFBYyx5QkFBeUIsRUFBQyxNQUFNLHVCQUF1QixDQUFDO0FBRTdFLE9BQU8sRUFBQyxHQUFHLEVBQUUsU0FBUyxFQUFDLE1BQU0sZ0JBQWdCLENBQUM7QUFFOUM7SUFhRTtJQUNBLENBQUM7Ozs7SUFFRCxvQ0FBUTs7O0lBQVI7O1lBQ1EsbUJBQW1CLEdBQUcsSUFBSSxDQUFDLE1BQU0sQ0FBQyxXQUFXLElBQUksSUFBSSxDQUFDLE1BQU0sQ0FBQyxXQUFXLENBQUMsSUFBSTs7OztRQUFDLFVBQUMsVUFBVSxJQUFLLE9BQUEsVUFBVSxDQUFDLElBQUksS0FBSyx5QkFBeUIsQ0FBQyxTQUFTLEVBQXZELENBQXVELEVBQUM7UUFFNUosSUFBSSxtQkFBbUIsRUFBRTtZQUN2QixJQUFJLENBQUMscUJBQXFCLEdBQUcsSUFBSSxDQUFDLGNBQWMsQ0FBQyxZQUFZLENBQUMsSUFBSSxDQUNoRSxTQUFTLENBQUMsRUFBRSxDQUFDLEVBQ2IsR0FBRzs7OztZQUFDLFVBQUMsQ0FBQyxJQUFLLE9BQUEsQ0FBQyxDQUFDLE9BQU8sbUJBQW1CLENBQUMsS0FBSyxLQUFLLFFBQVEsQ0FBQyxDQUFDLENBQUMsQ0FBQyxtQkFBbUIsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxJQUFJLEVBQUUsQ0FBQyxDQUFDLE1BQU0sRUFBcEcsQ0FBb0csRUFBQyxDQUNqSCxDQUFDO1NBQ0g7SUFDSCxDQUFDOztnQkF6QkYsU0FBUyxTQUFDO29CQUNULFFBQVEsRUFBRSxhQUFhO29CQUN2Qiw2V0FBd0M7O2lCQUV6Qzs7Ozs7d0JBRUUsS0FBSzs4QkFDTCxLQUFLO2lDQUNMLEtBQUs7eUJBQ0wsS0FBSzs7SUFrQlIsd0JBQUM7Q0FBQSxBQTNCRCxJQTJCQztTQXRCWSxpQkFBaUI7OztJQUM1QixrQ0FBdUI7O0lBQ3ZCLHdDQUE2Qjs7SUFDN0IsMkNBQXFDOztJQUNyQyxtQ0FBcUM7O0lBRXJDLGtEQUEyQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7Q29tcG9uZW50LCBJbnB1dCwgT25Jbml0fSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7Rm9ybUNvbnRyb2x9IGZyb20gJ0Bhbmd1bGFyL2Zvcm1zJztcbmltcG9ydCB7RmllbGRDb25maWcsIEZpZWxkQ29uZmlnVmFsaWRhdGlvblR5cGV9IGZyb20gJy4uL2NvbW1vbi1mb3JtLWNvbmZpZyc7XG5pbXBvcnQge09ic2VydmFibGV9IGZyb20gJ3J4anMnO1xuaW1wb3J0IHttYXAsIHN0YXJ0V2l0aH0gZnJvbSAncnhqcy9vcGVyYXRvcnMnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdzYi10ZXh0YXJlYScsXG4gIHRlbXBsYXRlVXJsOiAnLi90ZXh0YXJlYS5jb21wb25lbnQuaHRtbCcsXG4gIHN0eWxlVXJsczogWycuL3RleHRhcmVhLmNvbXBvbmVudC5jc3MnXVxufSlcbmV4cG9ydCBjbGFzcyBUZXh0YXJlYUNvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCB7XG4gIEBJbnB1dCgpIGxhYmVsOiBTdHJpbmc7XG4gIEBJbnB1dCgpIHBsYWNlaG9sZGVyOiBTdHJpbmc7XG4gIEBJbnB1dCgpIGZvcm1Db250cm9sUmVmOiBGb3JtQ29udHJvbDtcbiAgQElucHV0KCkgY29uZmlnOiBGaWVsZENvbmZpZzxTdHJpbmc+O1xuXG4gIHJlbWFpbmRlclZhbGlkTGVuZ3RoJD86IE9ic2VydmFibGU8bnVtYmVyPjtcblxuICBjb25zdHJ1Y3RvcigpIHtcbiAgfVxuXG4gIG5nT25Jbml0KCkge1xuICAgIGNvbnN0IG1heExlbmd0aFZhbGlkYXRpb24gPSB0aGlzLmNvbmZpZy52YWxpZGF0aW9ucyAmJiB0aGlzLmNvbmZpZy52YWxpZGF0aW9ucy5maW5kKCh2YWxpZGF0aW9uKSA9PiB2YWxpZGF0aW9uLnR5cGUgPT09IEZpZWxkQ29uZmlnVmFsaWRhdGlvblR5cGUuTUFYTEVOR1RIKTtcblxuICAgIGlmIChtYXhMZW5ndGhWYWxpZGF0aW9uKSB7XG4gICAgICB0aGlzLnJlbWFpbmRlclZhbGlkTGVuZ3RoJCA9IHRoaXMuZm9ybUNvbnRyb2xSZWYudmFsdWVDaGFuZ2VzLnBpcGUoXG4gICAgICAgIHN0YXJ0V2l0aCgnJyksXG4gICAgICAgIG1hcCgodikgPT4gKCh0eXBlb2YgbWF4TGVuZ3RoVmFsaWRhdGlvbi52YWx1ZSA9PT0gJ251bWJlcicpID8gbWF4TGVuZ3RoVmFsaWRhdGlvbi52YWx1ZSA6IDApIC0gKHYgfHwgJycpLmxlbmd0aClcbiAgICAgICk7XG4gICAgfVxuICB9XG5cbn1cbiJdfQ==