import { EventEmitter, OnChanges, OnDestroy, OnInit, SimpleChanges } from '@angular/core';
import { FieldConfig, FieldConfigInputType } from '../common-form-config';
import { FormBuilder, FormGroup } from '@angular/forms';
import { Subject } from 'rxjs';
export declare class DynamicFormComponent implements OnInit, OnChanges, OnDestroy {
    private formBuilder;
    config: any;
    initialize: EventEmitter<{}>;
    finalize: EventEmitter<{}>;
    dataLoadStatusDelegate: Subject<"LOADING" | "LOADED">;
    valueChanges: EventEmitter<{}>;
    statusChanges: EventEmitter<{}>;
    private statusChangesSubscription;
    private valueChangesSubscription;
    _: any;
    formGroup: FormGroup;
    FieldConfigInputType: typeof FieldConfigInputType;
    fieldDependency: {};
    isSection: boolean;
    flattenSectionFields: any;
    constructor(formBuilder: FormBuilder);
    ngOnInit(): void;
    ngOnChanges(changes: SimpleChanges): void;
    ngOnDestroy(): void;
    getFormValidationErrors(): any[];
    private prepareFormValidationData;
    fetchContextTerms(config: FieldConfig<any>, context: any): any;
    getAllDependsFormControl(code: any, depends: any): any;
    fetchDependencyTerms(code: any, depends: any): any;
    getAppIcon(config: any, val: any): any;
    groupBySection(config: any): any;
    getFlattenedSectionFields(): any;
}
