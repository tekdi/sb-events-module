import { ChangeDetectorRef, OnChanges, OnDestroy, OnInit, SimpleChanges } from '@angular/core';
import { FormControl } from '@angular/forms';
import { Subject } from 'rxjs';
import { fromJS, List, Map, Set } from 'immutable';
export declare class MultipleDropdownComponent implements OnInit, OnChanges, OnDestroy {
    private changeDetectionRef;
    disabled?: boolean;
    options: any;
    label?: string;
    labelHtml: any;
    placeHolder?: string;
    isMultiple?: boolean;
    context?: FormControl;
    formControlRef?: FormControl;
    default?: any;
    contextData: any;
    dataLoadStatusDelegate: Subject<'LOADING' | 'LOADED'>;
    showModal: boolean;
    tempValue: Set<any>;
    resolvedOptions: List<Map<string, string>>;
    optionValueToOptionLabelMap: Map<any, string>;
    fromJS: typeof fromJS;
    private dispose$;
    constructor(changeDetectionRef: ChangeDetectorRef);
    ngOnInit(): void;
    ngOnChanges(changes: SimpleChanges): void;
    onSubmit(): void;
    openModal(): void;
    addSelected(option: Map<string, string>): void;
    onCancel(): void;
    ngOnDestroy(): void;
    private isOptionsArray;
    private isOptionsClosure;
    private isOptionsMap;
    private setTempValue;
    private setupOptions;
}
