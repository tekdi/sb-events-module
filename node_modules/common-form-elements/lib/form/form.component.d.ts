import { EventEmitter, OnChanges, OnDestroy, OnInit, SimpleChanges } from '@angular/core';
import { AsyncValidatorFactory, FieldConfig, FieldConfigInputType } from '../common-form-config';
import { FormBuilder, FormGroup } from '@angular/forms';
import { Subject } from 'rxjs';
export declare class FormComponent implements OnInit, OnChanges, OnDestroy {
    private formBuilder;
    initialize: EventEmitter<{}>;
    finalize: EventEmitter<{}>;
    linkClicked: EventEmitter<{}>;
    valueChanges: EventEmitter<{}>;
    statusChanges: EventEmitter<{}>;
    platform: 'mobile' | 'web';
    dataLoadStatus: EventEmitter<"LOADING" | "LOADED">;
    config: any;
    dataLoadStatusDelegate: Subject<"LOADING" | "LOADED">;
    asyncValidatorFactory?: AsyncValidatorFactory;
    formGroup: FormGroup;
    FieldConfigInputType: typeof FieldConfigInputType;
    private statusChangesSubscription;
    private valueChangesSubscription;
    private dataLoadStatusSinkSubscription;
    constructor(formBuilder: FormBuilder);
    ngOnDestroy(): void;
    ngOnInit(): void;
    ngOnChanges(changes: SimpleChanges): void;
    onNestedFormFinalize(nestedFormGroup: FormGroup, fieldConfig: FieldConfig<any>): void;
    onNestedFormInitialize(nestedFormGroup: FormGroup, fieldConfig: FieldConfig<any>): void;
    private initializeForm;
    private prepareFormValidationData;
    clickedLink(event: any): void;
}
