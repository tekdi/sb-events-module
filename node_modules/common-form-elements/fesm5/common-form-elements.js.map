{"version":3,"file":"common-form-elements.js.map","sources":["ng://common-form-elements/lib/common-form-elements.component.ts","ng://common-form-elements/lib/utilities/value-comparator.ts","ng://common-form-elements/lib/dropdown/dropdown.component.ts","ng://common-form-elements/lib/textbox/textbox.component.ts","ng://common-form-elements/lib/common-form-config.ts","ng://common-form-elements/lib/textarea/textarea.component.ts","ng://common-form-elements/lib/checkbox/checkbox.component.ts","ng://common-form-elements/lib/form/form.component.ts","ng://common-form-elements/lib/option-group/option-group.component.ts","ng://common-form-elements/lib/icon/dropdown/dropdownIcon.component.ts","ng://common-form-elements/lib/multiple-dropdown/multiple-dropdown.component.ts","ng://common-form-elements/lib/icon/caret-down/caret-down.component.ts","ng://common-form-elements/lib/pipes/transpose-html/transpose-html.ts","ng://common-form-elements/lib/pipes/pipes.module.ts","ng://common-form-elements/lib/icon/red-exclamation/red-exclamation.component.ts","ng://common-form-elements/lib/icon/green-tick/green-tick.component.ts","ng://common-form-elements/lib/icon/empty-circle/empty-circle.component.ts","ng://common-form-elements/lib/filters/filters.component.ts","ng://common-form-elements/lib/pills/pills.component.ts","ng://common-form-elements/lib/dynamic-form/dynamic-form.component.ts","ng://common-form-elements/lib/dynamic-textbox/dynamic-textbox.component.ts","ng://common-form-elements/lib/dynamic-textarea/dynamic-textarea.component.ts","ng://common-form-elements/lib/dynamic-dropdown/dynamic-dropdown.component.ts","ng://common-form-elements/lib/dynamic-multiple-dropdown/dynamic-multiple-dropdown.component.ts","ng://common-form-elements/lib/dynamic-checkbox/dynamic-checkbox.component.ts","ng://common-form-elements/lib/topicpicker/topicpicker.component.ts","ng://common-form-elements/lib/keywords/keywords.component.ts","ng://common-form-elements/lib/dynamic-multi-select/dynamic-multi-select.component.ts","ng://common-form-elements/lib/dynamic-field/dynamic-field.directive.ts","ng://common-form-elements/lib/common-form-elements.module.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'sb-common-form-elements',\n  template: `\n    <p>\n      common-form-elements works!\n    </p>\n  `,\n  styles: []\n})\nexport class CommonFormElementsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","export class ValueComparator {\n  static valueComparator(v1, v2): boolean {\n    if (typeof v1 === 'object' && typeof v2 === 'object') {\n      return ObjectUtil.equals(v1, v2);\n    } else if (v1 === v2) {\n      return true;\n    } else if (!v1 && !v2) {\n      return true;\n    }\n\n    return false;\n  }\n}\n\nclass ObjectUtil {\n  public static equals(a: any, b: any): boolean {\n    const countProps = (obj) => {\n      let count = 0;\n      for (const k in obj) {\n        if (obj.hasOwnProperty(k)) {\n          count++;\n        }\n      }\n      return count;\n    };\n\n    const objectEquals = (v1: any, v2: any) => {\n      if (typeof (v1) !== typeof (v2)) {\n        return false;\n      }\n\n      if (typeof (v1) === 'function') {\n        return v1.toString() === v2.toString();\n      }\n\n      if (v1 instanceof Object && v2 instanceof Object) {\n        if (countProps(v1) !== countProps(v2)) {\n          return false;\n        }\n\n        let r = true;\n\n        for (const k in v1) {\n          r = objectEquals(v1[k], v2[k]);\n          if (!r) {\n            return false;\n          }\n        }\n        return true;\n      } else {\n        return v1 === v2;\n      }\n    };\n\n    return objectEquals(a, b);\n  }\n\n  public static getPropDiff(newObj: {}, oldObj: {}): string[] {\n    return Object.keys(newObj).reduce<string[]>((acc: string[], key) => {\n      if (ObjectUtil.equals(newObj[key], oldObj[key])) {\n        return acc;\n      }\n\n      acc.push(key);\n      return acc;\n    }, []);\n  }\n\n  public static getTruthyProps(obj: {}): string[] {\n    return Object.keys(obj).filter((key) => !!obj[key]);\n  }\n\n  public static toOrderedString(obj: {}): string {\n    return JSON.stringify(Object.keys(obj).sort().reduce<{}>((acc, k) => {\n      acc[k] = obj[k];\n      return acc;\n    }, {}));\n  }\n}\n","import {Component, Input, OnChanges, OnDestroy, OnInit, Output, SimpleChanges, EventEmitter} from '@angular/core';\nimport {FormControl} from '@angular/forms';\nimport {Observable, Subject, Subscription} from 'rxjs';\nimport {FieldConfigOption, FieldConfigOptionsBuilder} from '../common-form-config';\nimport {tap} from 'rxjs/operators';\nimport {ValueComparator} from '../utilities/value-comparator';\n\n@Component({\n  selector: 'sb-dropdown',\n  templateUrl: './dropdown.component.html',\n  styleUrls: ['./dropdown.component.css']\n})\nexport class DropdownComponent implements OnInit, OnChanges, OnDestroy {\n  ValueComparator = ValueComparator;\n\n  @Input() disabled?: boolean;\n  @Input() options: any = [];\n  @Input() label?: string;\n  @Input() placeHolder?: string;\n  @Input() isMultiple?: boolean;\n  @Input() context?: FormControl;\n  @Input() formControlRef?: FormControl;\n  @Input() default?: any;\n  @Input() contextData: any;\n  @Input() dataLoadStatusDelegate: Subject<'LOADING' | 'LOADED'>;\n  @Input() type?: string;\n  @Input() styleClass?: string;\n  @Output() onChangeFilter: EventEmitter<any> = new EventEmitter();\n  options$?: Observable<FieldConfigOption<any>[]>;\n  contextValueChangesSubscription?: Subscription;\n  selectedType: any;\n  constructor() {\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (!this.options) {\n      this.options = [];\n    }\n\n    if (this.isOptionsClosure(this.options)) {\n      this.options$ = (this.options as FieldConfigOptionsBuilder<any>)(\n        this.formControlRef,\n        this.context,\n        () => this.dataLoadStatusDelegate.next('LOADING'),\n        () => this.dataLoadStatusDelegate.next('LOADED')\n      ) as any;\n    }\n  }\n\n  ngOnInit() {\n    if (this.context) {\n      this.contextValueChangesSubscription = this.context.valueChanges.pipe(\n        tap(() => {\n          this.formControlRef.patchValue(null);\n        })\n      ).subscribe();\n    }\n  }\n\n  ngOnDestroy(): void {\n  }\n\n  isOptionsArray(options: any) {\n    return Array.isArray(options);\n\n  }\n\n  isOptionsClosure(options: any) {\n    return typeof options === 'function';\n  }\n\n  isOptionsMap(input: any) {\n    return !Array.isArray(input) && typeof input === 'object';\n  }\n\n  onChangeFacet($event) {\n    const selectedObject = this.options.data[$event.currentTarget.options.selectedIndex - 1];\n    let emitPayload = JSON.parse(JSON.stringify(this.options));\n    emitPayload['data'] = selectedObject;\n    emitPayload['selectedLabel'] = selectedObject.label;\n    emitPayload['selectedValue'] = selectedObject.value;\n    this.onChangeFilter.emit(emitPayload);\n  }\n}\n","import {Component, Input, OnInit, AfterViewInit, OnChanges, ViewChild, ElementRef} from '@angular/core';\nimport {FormControl} from '@angular/forms';\nimport { FieldConfigAsyncValidation } from '../common-form-config';\n\n@Component({\n  selector: 'sb-textbox',\n  templateUrl: './textbox.component.html',\n  styleUrls: ['./textbox.component.css']\n})\nexport class TextboxComponent implements OnInit, AfterViewInit, OnChanges {\n  @Input() asyncValidation?: FieldConfigAsyncValidation;\n  @Input() label: String;\n  @Input() labelHtml: any;\n  @Input() placeholder: String;\n  @Input() validations?: any;\n  @Input() formControlRef?: FormControl;\n  @Input() prefix?: String;\n  @ViewChild('validationTrigger', { static:false }) validationTrigger: ElementRef;\n\n  constructor() {\n  }\n\n  ngOnInit() {\n  }\n\n  ngOnChanges() {\n    \n  }\n\n  ngAfterViewInit() {\n    if (this.asyncValidation && this.asyncValidation.asyncValidatorFactory && this.formControlRef) {\n      if (this.formControlRef.asyncValidator) {\n        return;\n      }\n\n      this.formControlRef.setAsyncValidators(this.asyncValidation.asyncValidatorFactory(\n        this.asyncValidation.marker,\n        this.validationTrigger.nativeElement\n      ));\n    }\n  }\n\n}\n","import {Observable} from 'rxjs';\nimport {AsyncValidatorFn, FormControl, FormGroup} from '@angular/forms';\n\nexport enum FieldConfigInputType {\n  INPUT = 'input',\n  CHECKBOX = 'checkbox',\n  SELECT = 'select',\n  LABEL = 'label',\n  TEXTAREA = 'textarea',\n  NESTED_SELECT = 'nested_select',\n  NESTED_GROUP = 'nested_group',\n  MULTIPLE_SELECT = 'multiple_select'\n}\n\nexport enum FieldConfigValidationType {\n  REQUIRED = 'required',\n  MAXLENGTH = 'maxLength',\n  REQUIRED_TRUE = 'required_true',\n  MINLENGTH = 'minLength',\n  PATTERN = 'pattern'\n}\n\nexport type FieldConfigOptionsBuilder<T> =\n  (control: FormControl, context?: FormControl, notifyLoading?: () => void,\n    notifyLoaded?: () => void) => Observable<FieldConfigOption<T>[]> | Promise<FieldConfigOption<T>[]>;\nexport type AsyncValidatorFactory = (marker: string, trigger: HTMLElement) => AsyncValidatorFn;\n\nexport interface FieldConfigOption<T> {\n  label: string;\n  value: T;\n  extras?: T;\n}\nexport interface FieldConfigOptionAssociations<T> {\n  [key: string]: FieldConfigOption<T>[];\n}\nexport interface FieldConfigAsyncValidation {\n  marker: string;\n  message?: string;\n  trigger?: string;\n  asyncValidatorFactory?: AsyncValidatorFactory;\n}\nexport interface FieldConfig<T> {\n  code: string;\n  type?: FieldConfigInputType;\n  fieldName?: string;\n  default?: any;\n  context?: string;\n  children?: { [key: string]: FieldConfig<T>[] } | FieldConfig<T>[];\n  templateOptions?: {\n    type?: string,\n    label?: string,\n    placeHolder?: string,\n    prefix?: string,\n    multiple?: boolean,\n    hidden?: boolean,\n    disabled?: boolean,\n    options?: FieldConfigOption<T>[] | FieldConfigOptionsBuilder<T> | FieldConfigOptionAssociations<T>,\n    labelHtml?: {\n      contents: string,\n      values?: { [key: string]: string }\n    }\n  };\n  validations?: {\n    type: FieldConfigValidationType,\n    value?: string | boolean | number | RegExp,\n    message?: string,\n    name?: string,\n    validator?: any\n  }[];\n  asyncValidation?: FieldConfigAsyncValidation;\n  visible?: boolean;\n  editable?: boolean;\n  dataType?: string;\n  renderingHints?: any;\n  name?: string;\n  description?: string;\n  inputType?: string;\n  index?: number;\n  placeholder?: string;\n  required?: boolean;\n  label?: string;\n  options?: string[];\n  collections?: any;\n  value?: any;\n  terms?: any;\n  range?: any;\n  depends?: FormControl[];\n  dependencyTerms?: any;\n  output?: string;\n  sourceCategory?: string;\n  association?: any;\n}\n\nexport enum FilterType {\n  FACET = 'facet'\n}\n\nexport interface Validator {\n  name?: string;\n  validator?: any;\n  message?: string;\n  type?: string;\n  value?: string;\n}\n\n\nexport type DynamicFieldConfigOptionsBuilder<T> =\n  (control: FormControl, depends?: FormControl[], formGroup?: FormGroup, notifyLoading?: () => void,\n    notifyLoaded?: () => void) => Observable<FieldConfigOption<T>[]> | Promise<FieldConfigOption<T>[]>;\n\n\n\nexport interface SectionConfig<T> {\n  name: string;\n  fields: FieldConfig<T>[];\n}\n","import {Component, Input, OnInit} from '@angular/core';\nimport {FormControl} from '@angular/forms';\nimport {FieldConfig, FieldConfigValidationType} from '../common-form-config';\nimport {Observable} from 'rxjs';\nimport {map, startWith} from 'rxjs/operators';\n\n@Component({\n  selector: 'sb-textarea',\n  templateUrl: './textarea.component.html',\n  styleUrls: ['./textarea.component.css']\n})\nexport class TextareaComponent implements OnInit {\n  @Input() label: String;\n  @Input() placeholder: String;\n  @Input() formControlRef: FormControl;\n  @Input() config: FieldConfig<String>;\n\n  remainderValidLength$?: Observable<number>;\n\n  constructor() {\n  }\n\n  ngOnInit() {\n    const maxLengthValidation = this.config.validations && this.config.validations.find((validation) => validation.type === FieldConfigValidationType.MAXLENGTH);\n\n    if (maxLengthValidation) {\n      this.remainderValidLength$ = this.formControlRef.valueChanges.pipe(\n        startWith(''),\n        map((v) => ((typeof maxLengthValidation.value === 'number') ? maxLengthValidation.value : 0) - (v || '').length)\n      );\n    }\n  }\n\n}\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { FormControl } from '@angular/forms';\n\n@Component({\n  selector: 'sb-checkbox',\n  templateUrl: './checkbox.component.html',\n  styleUrls: ['./checkbox.component.css']\n})\nexport class CheckboxComponent implements OnInit {\n  @Input() label: any;\n  @Input() code: any;\n  @Input() value?: any;\n  @Input() formControlRef?: FormControl;\n  @Input() labelHtml?: any;\n  @Output() clickedLink = new EventEmitter();\n\n  constructor() { }\n\n  ngOnInit() {\n    console.log('label', this.label);\n    console.log('labelHtml', this.labelHtml);\n  }\n\n  handleLinkClick(event: MouseEvent) {\n    if (event.target && event.target['hasAttribute'] && (event.target as HTMLAnchorElement).hasAttribute('href')) {\n      this.clickedLink.emit((event.target as HTMLAnchorElement).getAttribute('href'));\n    }\n  }\n\n}\n","import {\n  AfterViewInit,\n  Component,\n  EventEmitter,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Output,\n  QueryList,\n  SimpleChanges,\n  ViewChildren\n} from '@angular/core';\nimport {AsyncValidatorFactory, FieldConfig, FieldConfigInputType, FieldConfigValidationType} from '../common-form-config';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {Subject, Subscription} from 'rxjs';\nimport {distinctUntilChanged, map, scan, tap} from 'rxjs/operators';\n\n@Component({\n  selector: 'sb-form',\n  templateUrl: './form.component.html',\n  styleUrls: ['./form.component.css']\n})\nexport class FormComponent implements OnInit, OnChanges, OnDestroy {\n  @Output() initialize = new EventEmitter();\n  @Output() finalize = new EventEmitter();\n  @Output() linkClicked = new EventEmitter();\n  @Output() valueChanges = new EventEmitter();\n  @Output() statusChanges = new EventEmitter();\n  @Input() platform: 'mobile' | 'web' = 'web';\n  @Output() dataLoadStatus = new EventEmitter<'LOADING' | 'LOADED'>();\n  @Input() config;\n  @Input() dataLoadStatusDelegate = new Subject<'LOADING' | 'LOADED'>();\n  @Input() asyncValidatorFactory?: AsyncValidatorFactory;\n\n  formGroup: FormGroup;\n\n  FieldConfigInputType = FieldConfigInputType;\n\n  private statusChangesSubscription: Subscription;\n  private valueChangesSubscription: Subscription;\n  private dataLoadStatusSinkSubscription: Subscription;\n\n  constructor(\n    private formBuilder: FormBuilder\n  ) {\n    if (!window['forms']) {\n      window['forms'] = [];\n    }\n    window['forms'].push(this);\n  }\n\n  ngOnDestroy(): void {\n    this.finalize.emit();\n\n    if (this.statusChangesSubscription) {\n      this.statusChangesSubscription.unsubscribe();\n    }\n\n    if (this.valueChangesSubscription) {\n      this.valueChangesSubscription.unsubscribe();\n    }\n\n    if (this.dataLoadStatusSinkSubscription) {\n      this.dataLoadStatusSinkSubscription.unsubscribe();\n    }\n  }\n\n  ngOnInit() {\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes['config']) {\n      if ((changes['config'].currentValue && changes['config'].firstChange) || changes['config'].previousValue !== changes['config'].currentValue) {\n        this.initializeForm();\n      }\n    }\n\n    if (this.dataLoadStatusSinkSubscription) {\n      this.dataLoadStatusSinkSubscription.unsubscribe();\n    }\n\n    if (this.statusChangesSubscription) {\n      this.statusChangesSubscription.unsubscribe();\n    }\n\n    if (this.valueChangesSubscription) {\n      this.valueChangesSubscription.unsubscribe();\n    }\n\n    this.dataLoadStatusSinkSubscription = this.dataLoadStatusDelegate.pipe(\n      scan<'LOADING' | 'LOADED', { loadingCount: 0, loadedCount: 0 }>((acc, event) => {\n        if (event === 'LOADED') {\n          acc.loadedCount++;\n          return acc;\n        }\n\n        acc.loadingCount++;\n        return acc;\n      }, {loadingCount: 0, loadedCount: 0}),\n      map<{ loadingCount: 0, loadedCount: 0 }, 'LOADING' | 'LOADED'>((aggregates) => {\n        if (aggregates.loadingCount !== aggregates.loadedCount) {\n          return 'LOADING';\n        }\n\n        return 'LOADED';\n      }),\n      distinctUntilChanged(),\n      tap((result) => {\n        if (result === 'LOADING') {\n          this.dataLoadStatus.emit('LOADING');\n        } else {\n          this.dataLoadStatus.emit('LOADED');\n        }\n      })\n    ).subscribe();\n\n    this.statusChangesSubscription = this.formGroup.statusChanges.pipe(\n      tap((v) => {\n        this.statusChanges.emit({\n          isPristine: this.formGroup.pristine,\n          isDirty: this.formGroup.dirty,\n          isInvalid: this.formGroup.invalid,\n          isValid: this.formGroup.valid\n        });\n      })\n    ).subscribe();\n\n    this.valueChangesSubscription = this.formGroup.valueChanges.pipe(\n      tap((v) => {\n        this.valueChanges.emit(v);\n      })\n    ).subscribe();\n  }\n\n  onNestedFormFinalize(nestedFormGroup: FormGroup, fieldConfig: FieldConfig<any>) {\n    if (!this.formGroup.get('children') || !this.formGroup.get(`children.${fieldConfig.code}`)) {\n      return;\n    }\n\n    (this.formGroup.get('children') as FormGroup).removeControl(fieldConfig.code);\n\n    if (!Object.keys((this.formGroup.get('children') as FormGroup).controls).length) {\n      this.formGroup.removeControl('children');\n    }\n  }\n\n  onNestedFormInitialize(nestedFormGroup: FormGroup, fieldConfig: FieldConfig<any>) {\n    if (!this.formGroup.get('children')) {\n      this.formGroup.addControl('children', new FormGroup({}));\n    }\n\n    (this.formGroup.get('children') as FormGroup).removeControl(fieldConfig.code);\n    (this.formGroup.get('children') as FormGroup).addControl(fieldConfig.code, nestedFormGroup);\n  }\n\n  private initializeForm() {\n    if (!this.config.length) {\n      console.error('FORM LIST IS EMPTY');\n      return;\n    }\n    const formGroupData = {};\n    this.config.forEach((element: any, index) => {\n      if (element.type !== FieldConfigInputType.LABEL) {\n        const formValueList = this.prepareFormValidationData(element, index);\n        formGroupData[element.code] = formValueList;\n      }\n    });\n\n    this.formGroup = this.formBuilder.group(formGroupData);\n    this.initialize.emit(this.formGroup);\n  }\n\n  private prepareFormValidationData(element: FieldConfig<any>, index) {\n    const formValueList = [];\n    const validationList = [];\n\n    let defaultVal: any = '';\n    switch (element.type) {\n      case FieldConfigInputType.INPUT:\n        defaultVal = element.templateOptions.type === 'number' ?\n          (element.default && Number.isInteger(element.default) ? element.default : 0) :\n          (element.default && (typeof element.default) === 'string' ? element.default : '');\n        break;\n      case FieldConfigInputType.SELECT:\n      case FieldConfigInputType.NESTED_SELECT:\n        defaultVal = element.templateOptions.multiple ?\n          (element.default && Array.isArray(element.default) ? element.default : []) : (element.default || null);\n        break;\n      case FieldConfigInputType.CHECKBOX:\n        defaultVal = false || !!element.default;\n        break;\n    }\n\n    formValueList.push(defaultVal);\n\n    if (element.validations && element.validations.length) {\n      element.validations.forEach((data, i) => {\n        switch (data.type) {\n          case FieldConfigValidationType.REQUIRED:\n            if (element.type === FieldConfigInputType.CHECKBOX) {\n              validationList.push(Validators.requiredTrue);\n            } else if (element.type === FieldConfigInputType.SELECT || element.type === FieldConfigInputType.NESTED_SELECT) {\n              validationList.push((c) => {\n                if (element.templateOptions.multiple) {\n                  return c.value && c.value.length ? null : 'error';\n                }\n                return !!c.value ? null : 'error';\n              });\n            } else {\n              validationList.push(Validators.required);\n            }\n            break;\n          case FieldConfigValidationType.PATTERN:\n            validationList.push(Validators.pattern(element.validations[i].value as string));\n            break;\n          case FieldConfigValidationType.MINLENGTH:\n            validationList.push(Validators.minLength(element.validations[i].value as number));\n            break;\n          case FieldConfigValidationType.MAXLENGTH:\n            validationList.push(Validators.maxLength(element.validations[i].value as number));\n            break;\n        }\n      });\n    }\n\n    formValueList.push(Validators.compose(validationList));\n\n    return formValueList;\n  }\n\n  clickedLink(event) {\n    this.linkClicked.emit(event);\n  }\n}\n","import {ChangeDetectionStrategy, Component, OnInit} from '@angular/core';\n\n@Component({\n  selector: 'sb-option-group',\n  templateUrl: './option-group.component.html',\n  styleUrls: ['./option-group.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class OptionGroupComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'sb-icon-dropdown',\n  templateUrl: './dropdownIcon.component.html',\n  styleUrls: ['./dropdownIcon.component.css']\n})\nexport class DropdownIconComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import {ChangeDetectionStrategy, ChangeDetectorRef, Component, Input, OnChanges, OnDestroy, OnInit, SimpleChanges} from '@angular/core';\nimport {FormControl} from '@angular/forms';\nimport {from, Subject} from 'rxjs';\nimport {FieldConfigOptionsBuilder} from '../common-form-config';\nimport {takeUntil, tap} from 'rxjs/operators';\nimport {fromJS, List, Map, Set} from 'immutable';\n\n\n@Component({\n  selector: 'sb-multiple-dropdown',\n  templateUrl: './multiple-dropdown.component.html',\n  styleUrls: ['./multiple-dropdown.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class MultipleDropdownComponent implements OnInit, OnChanges, OnDestroy {\n  @Input() disabled?: boolean;\n  @Input() options: any;\n  @Input() label?: string;\n  @Input() labelHtml: any;\n  @Input() placeHolder?: string;\n  @Input() isMultiple?: boolean;\n  @Input() context?: FormControl;\n  @Input() formControlRef?: FormControl;\n  @Input() default?: any;\n  @Input() contextData: any;\n  @Input() dataLoadStatusDelegate: Subject<'LOADING' | 'LOADED'>;\n  showModal = false;\n  tempValue = Set<any>();\n  resolvedOptions = List<Map<string, string>>();\n  optionValueToOptionLabelMap = Map<any, string>();\n\n  fromJS = fromJS;\n\n  private dispose$ = new Subject<undefined>();\n\n  constructor(\n    private changeDetectionRef: ChangeDetectorRef\n  ) {\n  }\n  ngOnInit() {\n    if (this.context) {\n      this.context.valueChanges.pipe(\n        tap(() => {\n          this.formControlRef.patchValue(null);\n          this.tempValue = this.tempValue.clear();\n          this.setupOptions();\n        }),\n        takeUntil(this.dispose$)\n      ).subscribe();\n    }\n\n    this.formControlRef.valueChanges.pipe(\n      tap((value) => {\n        this.setTempValue(value);\n        this.changeDetectionRef.detectChanges();\n      }),\n      takeUntil(this.dispose$)\n    ).subscribe();\n  }\n  ngOnChanges(changes: SimpleChanges): void {\n    if (!changes['options'] || !changes['options'].currentValue) {\n      return;\n    }\n\n    this.setupOptions();\n  }\n\n  onSubmit() {\n    const finalValue = this.tempValue.toList().toJS();\n    this.formControlRef.patchValue(this.isMultiple ? finalValue : finalValue[0]);\n    this.formControlRef.markAsDirty();\n    this.showModal = false;\n  }\n  openModal() {\n    if (this.context && this.context.invalid) {\n      return;\n    }\n\n    this.setTempValue(this.formControlRef.value);\n\n    this.showModal = true;\n  }\n\n  addSelected(option: Map<string, string>) {\n    if (this.isMultiple) {\n      if (this.tempValue.includes(option.get('value'))) {\n        this.tempValue = this.tempValue.remove(option.get('value'));\n      } else {\n        this.tempValue = this.tempValue.add(option.get('value'));\n      }\n    } else {\n      this.tempValue = this.tempValue.clear();\n      this.tempValue = this.tempValue.add(option.get('value'));\n    }\n  }\n  onCancel() {\n    this.formControlRef.markAsDirty();\n    this.showModal = false;\n  }\n\n  ngOnDestroy(): void {\n    this.dispose$.next(null);\n    this.dispose$.complete();\n  }\n\n  private isOptionsArray() {\n    return Array.isArray(this.options);\n  }\n\n  private isOptionsClosure() {\n    return typeof this.options === 'function';\n  }\n\n  private isOptionsMap() {\n    return !Array.isArray(this.options) && typeof this.options === 'object';\n  }\n\n  private setTempValue(value: any) {\n    if (value) {\n      if (Array.isArray(value)) {\n        this.tempValue = Set(fromJS(value));\n      } else {\n        this.tempValue = Set(fromJS([value]));\n      }\n    }\n  }\n\n  private setupOptions() {\n    if (!this.options) {\n      this.options = [];\n      this.resolvedOptions = this.resolvedOptions.clear();\n    }\n\n    if (this.isOptionsArray()) {\n      this.resolvedOptions = fromJS(this.options);\n    } else if (this.isOptionsMap()) {\n      this.resolvedOptions = (this.context && this.context.value) ?\n        fromJS(this.options[this.context.value]) :\n        this.resolvedOptions;\n    } else if (this.isOptionsClosure()) {\n      from((this.options as FieldConfigOptionsBuilder<any>)(\n        this.formControlRef,\n        this.context,\n        () => this.dataLoadStatusDelegate.next('LOADING'),\n        () => this.dataLoadStatusDelegate.next('LOADED')\n      )).pipe(\n        tap((options = []) => {\n          this.resolvedOptions = fromJS(options);\n\n          this.resolvedOptions.forEach((option) => {\n            this.optionValueToOptionLabelMap = this.optionValueToOptionLabelMap.set(option.get('value'), option.get('label'));\n          });\n\n          this.setTempValue(this.default);\n\n          this.changeDetectionRef.detectChanges();\n        }),\n        takeUntil(this.dispose$)\n      ).subscribe();\n    }\n\n    this.resolvedOptions.forEach((option) => {\n      this.optionValueToOptionLabelMap = this.optionValueToOptionLabelMap.set(option.get('value'), option.get('label'));\n    });\n\n    this.setTempValue(this.default);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'sb-caret-down',\n  templateUrl: './caret-down.component.html',\n  styleUrls: ['./caret-down.component.css']\n})\nexport class CaretDownComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe(\n    { name: 'transposeHtml' }\n)\n\nexport class TransposeHtmlPipe implements PipeTransform {\n\n  constructor() {}\n\n  transform(value: { contents: string, values: string[] }): string {\n\n    return Object.keys(value.values).reduce((acc, val) => {\n      return acc.replace(val, value.values[val] ? value.values[val] : '');\n    }, value.contents);\n\n  }\n}\n","\nimport { NgModule } from '@angular/core';\nimport { CommonModule, DatePipe } from '@angular/common';\nimport { TransposeHtmlPipe } from './transpose-html/transpose-html';\n\n@NgModule({\n  declarations: [TransposeHtmlPipe],\n  imports: [CommonModule],\n  exports: [TransposeHtmlPipe],\n  providers: [DatePipe]\n})\nexport class PipesModule {\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'sb-red-exclamation',\n  templateUrl: './red-exclamation.component.html',\n  styleUrls: ['./red-exclamation.component.css']\n})\nexport class RedExclamationComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'sb-green-tick',\n  templateUrl: './green-tick.component.html',\n  styleUrls: ['./green-tick.component.css']\n})\nexport class GreenTickComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'sb-empty-circle',\n  templateUrl: './empty-circle.component.html',\n  styleUrls: ['./empty-circle.component.css']\n})\nexport class EmptyCircleComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\n\nimport { FilterType } from '../common-form-config';\n\n@Component({\n  selector: 'sb-filters',\n  templateUrl: './filters.component.html',\n  styleUrls: ['./filters.component.css']\n})\nexport class FiltersComponent implements OnInit {\n\n  @Input() type: string;\n  @Input() facets: any = [];\n  @Input() config?: object;\n  @Input() styleClass?: string;\n  @Output() selectedFilter: EventEmitter<any> = new EventEmitter();\n  FilterType = FilterType;\n  formGroup: FormGroup;\n\n  formattedFacets: any = [];\n\n  constructor() {\n  }\n\n  ngOnInit() {\n    this.formatFacets();\n  }\n\n  formatFacets () {\n    this.facets.forEach((facet, index) => {\n      let facetObj = {};\n      facetObj['name']        = facet['name'];\n      facetObj['type']        = this.config[facet['name']] && this.config[facet['name']]['type'] ? this.config[facet['name']]['type'] : 'dropdown';\n      facetObj['index']       = this.config[facet['name']] && this.config[facet['name']]['index'] ? this.config[facet['name']]['index'] : index;\n      facetObj['label']       = this.config[facet['name']] && this.config[facet['name']]['label'] ? this.config[facet['name']]['label'] : facet['name'];\n      facetObj['placeHolder'] = this.config[facet['name']] && this.config[facet['name']]['placeHolder'] ? this.config[facet['name']]['placeHolder'] : 'Select ' + facet['name'];\n\n      facetObj['default']     = this.config[facet['name']] && this.config[facet['name']]['default'] ? this.config[facet['name']]['default'] : '';\n      \n      facetObj['data'] = [];\n      facet['values'].forEach(facetValue => {\n        facetObj['data'].push({\n          label: facetValue['name'],\n          value: facetValue['name']\n        });\n      });\n      this.formattedFacets.push(facetObj);\n      this.formattedFacets.sort((a, b) => a.index - b.index);\n    });\n  }\n}\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'sb-pills',\n  templateUrl: './pills.component.html',\n  styleUrls: ['./pills.component.css']\n})\nexport class PillsComponent implements OnInit {\n  @Input() options: any = [];\n  @Input() label?: string;\n  @Input() styleClass?: string;\n  @Output() onChangeFilter: EventEmitter<any> = new EventEmitter();\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  onChangeFacet(selectedValue) {\n    let emitPayload = JSON.parse(JSON.stringify(this.options));\n    emitPayload['data'] = selectedValue;\n    emitPayload['selectedLabel'] = selectedValue.label;\n    emitPayload['selectedValue'] = selectedValue.value;\n    this.onChangeFilter.emit(emitPayload);\n  }\n}\n","import { AfterViewInit, Component, EventEmitter, Input, OnChanges, OnDestroy, OnInit,\n  Output, QueryList, SimpleChanges, ViewChildren } from '@angular/core';\n  import {AsyncValidatorFactory, FieldConfig, FieldConfigInputType, FieldConfigValidationType, SectionConfig} from '../common-form-config';\nimport {FormBuilder, FormControl, FormGroup, Validators} from '@angular/forms';\nimport {Subject, Subscription} from 'rxjs';\nimport {distinctUntilChanged, map, scan, tap} from 'rxjs/operators';\nimport * as _ from 'lodash-es';\n\n@Component({\n  selector: 'sb-dynamic-form',\n  templateUrl: './dynamic-form.component.html',\n  styleUrls: ['./dynamic-form.component.css']\n})\nexport class DynamicFormComponent implements OnInit, OnChanges, OnDestroy  {\n  @Input() config;\n  @Output() initialize = new EventEmitter();\n  @Output() finalize = new EventEmitter();\n\n  @Input() dataLoadStatusDelegate = new Subject<'LOADING' | 'LOADED'>();\n\n  @Output() valueChanges = new EventEmitter();\n  @Output() statusChanges = new EventEmitter();\n\n  private statusChangesSubscription: Subscription;\n  private valueChangesSubscription: Subscription;\n\n\n  _: any = _;\n\n  formGroup: FormGroup;\n  FieldConfigInputType = FieldConfigInputType;\n  fieldDependency: {};\n  isSection = false;\n  flattenSectionFields;\n\n  constructor(\n    private formBuilder: FormBuilder\n  ) { }\n\n  ngOnInit() {\n\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    const formGroupData = {};\n    const dependency = [];\n    if (changes['config']) {\n      if ((changes['config'].currentValue && changes['config'].firstChange)\n      || changes['config'].previousValue !== changes['config'].currentValue) {\n        this.initialize.emit(this.formGroup);\n      }\n    }\n\n    if (this.statusChangesSubscription) {\n      this.statusChangesSubscription.unsubscribe();\n    }\n\n    if (this.valueChangesSubscription) {\n      this.valueChangesSubscription.unsubscribe();\n    }\n\n    this.isSection = !_.isEmpty(_.find(this.config, 'fields'));\n    if (this.isSection) {\n      this.config.forEach((sections) => {\n          sections.fields.forEach((element: any, index) => {\n            const formValueList = this.prepareFormValidationData(element, index);\n          if (!_.isEmpty(element.depends)) {\n            dependency.push({code: element.code, depends: element.depends});\n          }\n          formGroupData[element.code] = formValueList;\n          });\n      });\n    } else {\n      let defaultSection: any = [];\n      defaultSection = [\n        {\n          'name': '',\n          'fields': _.cloneDeep(this.config)\n        }\n      ];\n\n      this.config = _.cloneDeep(defaultSection);\n      defaultSection.forEach((sections) => {\n        sections.fields.forEach((element: any, index) => {\n          const formValueList = this.prepareFormValidationData(element, index);\n        if (!_.isEmpty(element.depends)) {\n          dependency.push({code: element.code, depends: element.depends});\n        }\n        formGroupData[element.code] = formValueList;\n        });\n    });\n    }\n    this.flattenSectionFields = this.getFlattenedSectionFields();\n    this.formGroup = this.formBuilder.group(formGroupData);\n\n    this.statusChangesSubscription = this.formGroup.valueChanges.pipe(\n      tap((v) => {\n        this.statusChanges.emit({\n          isPristine: this.formGroup.pristine,\n          isDirty: this.formGroup.dirty,\n          isInvalid: this.formGroup.invalid,\n          isValid: this.formGroup.valid,\n          controls: this.getFormValidationErrors()\n        });\n      })\n    ).subscribe();\n\n    this.valueChangesSubscription =  this.formGroup.valueChanges.pipe(\n      tap((data) => {\n        this.valueChanges.emit(data);\n      })\n    ).subscribe();\n  }\n\n  ngOnDestroy(): void {\n    this.finalize.emit();\n\n    if (this.statusChangesSubscription) {\n      this.statusChangesSubscription.unsubscribe();\n    }\n\n    if (this.valueChangesSubscription) {\n      this.valueChangesSubscription.unsubscribe();\n    }\n  }\n\n  getFormValidationErrors() {\n    const errors = [];\n    _.keys(this.formGroup.controls).forEach(key => {\n      const controlErrors = this.formGroup.get(key).errors;\n      if (controlErrors != null) {\n        _.keys(controlErrors).forEach(keyError => {\n          errors.push({\n            control_name: key,\n            error_name: keyError,\n            error_value: controlErrors[ keyError ]\n          });\n        });\n      }\n    });\n    return errors;\n  }\n\n\n  private prepareFormValidationData(element: any, index) {\n    const formValueList = [];\n    const validationList = [];\n\n    let defaultVal: any = '';\n    switch (element.inputType) {\n      case 'text':\n        defaultVal = element.default || null;\n        break;\n      case 'textarea':\n        defaultVal = element.default || null;\n        break;\n      case 'select':\n        if (element.default) {\n          if (element.dataType === 'list') {\n            if (_.isArray(element.default)) {\n              defaultVal = element.default;\n            } else {\n              defaultVal = _.toArray(element.default);\n            }\n          } else if (element.dataType === 'text') {\n            if (_.isString(element.default)) {\n              defaultVal = element.default;\n            } else {\n              defaultVal = _.toString(element.default);\n            }\n          }\n        } else {\n          defaultVal = null;\n        }\n        break;\n      case 'multiselect':\n          if (element.default) {\n            if (element.dataType === 'list' && _.isArray(element.default)) {\n              defaultVal = element.default;\n            } else if (element.dataType === 'list' && _.isString(element.default)) {\n              if (_.includes(element.default, ',')) {\n                defaultVal = _.split(element.default, ',');\n              } else {\n                defaultVal = [element.default];\n              }\n            } else if (element.dataType === 'text') {\n              if (_.includes(element.default, ',')) {\n                defaultVal = _.split(element.default, ',');\n              } else {\n                defaultVal = [element.default];\n              }\n            }\n          } else {\n            defaultVal = [];\n          }\n          break;\n      case 'nestedselect':\n          defaultVal = element.dataType === 'list' ?\n          (element.default && Array.isArray(element.default) ? element.default :\n          _.isEmpty(element.default) ? [] : [element.default]) :\n          (element.default || null);\n          break;\n      case 'checkbox':\n        defaultVal = (element.dataType === 'text') ? (element.default === 'Yes' ? 'Yes' : 'No') : !!element.default;\n        break;\n    }\n\n    formValueList.push(defaultVal);\n\n    if (element.validations && element.validations.length) {\n      element.validations.forEach((data, i) => {\n        switch (data.type) {\n          case 'required':\n            if (element.inputType === 'select' || element.inputType === 'multiselect' || element.inputType === 'nestedselect') {\n              validationList.push(Validators.required);\n            } else if (element.type === 'checkbox') {\n              validationList.push(Validators.requiredTrue);\n            } else {\n              validationList.push(Validators.required);\n            }\n            break;\n          case 'pattern':\n            validationList.push(Validators.pattern(element.validations[i].value as string));\n            break;\n          case 'min':\n            validationList.push(Validators.minLength(element.validations[i].value as number));\n            break;\n          case 'max':\n            validationList.push(Validators.maxLength(element.validations[i].value as number));\n            break;\n        }\n      });\n    }\n\n    formValueList.push(Validators.compose(validationList));\n\n    return formValueList;\n  }\n\n\n  fetchContextTerms(config: FieldConfig<any>, context) {\n    return _.get(_.find(config, {'code': context}), 'terms') || null;\n  }\n\n  getAllDependsFormControl(code, depends) {\n    const fieldDepends: any = {};\n    _.forEach(depends, depend => {\n        if (this.formGroup.get(depend)) {\n            fieldDepends[depend] = this.formGroup.get(depend);\n        }\n      });\n    return fieldDepends || null;\n  }\n\n  fetchDependencyTerms(code, depends) {\n    const dependsTerms = _.map(_.filter(this.flattenSectionFields, c => {\n      return _.includes(depends, c.code);\n    }), (depend) => {\n      return depend.terms || depend.range;\n    });\n    return _.flatten(dependsTerms);\n  }\n\n  getAppIcon(config, val) {\n    if (val) {\n      return config.filter(field => {\n        return field.code === 'appicon';\n      });\n    } else {\n       return config.filter(field => {\n        return field.code !== 'appicon';\n      });\n    }\n  }\n\n  groupBySection(config) {\n    const fields = this.getAppIcon(config, false);\n    return _.groupBy(fields, 'section.index');\n  }\n\n  getFlattenedSectionFields() {\n    return _.flatten(_.map(this.config, 'fields'));\n  }\n\n}\n","import {Component, Input, OnInit, AfterViewInit, OnChanges, ViewChild, ElementRef} from '@angular/core';\nimport {FormControl} from '@angular/forms';\nimport { FieldConfigAsyncValidation } from '../common-form-config';\n\n@Component({\n  selector: 'sb-dynamic-textbox',\n  templateUrl: './dynamic-textbox.component.html',\n  styleUrls: ['./dynamic-textbox.component.css']\n})\nexport class DynamicTextboxComponent implements OnInit,  AfterViewInit, OnChanges  {\n\n  @Input() asyncValidation?: FieldConfigAsyncValidation;\n  @Input() label: String;\n  @Input() labelHtml: any;\n  @Input() placeholder: String;\n  @Input() validations?: any;\n  @Input() formControlRef?: FormControl;\n  @Input() prefix?: String;\n  @Input() default: String;\n  @Input() disabled: Boolean;\n  @ViewChild('validationTrigger', {static: false}) validationTrigger: ElementRef;\n\n  constructor() {\n  }\n\n  ngOnInit() {\n  }\n\n  ngOnChanges() {\n  }\n\n  ngAfterViewInit() {\n    if (this.asyncValidation && this.asyncValidation.asyncValidatorFactory && this.formControlRef) {\n      if (this.formControlRef.asyncValidator) {\n        return;\n      }\n\n      this.formControlRef.setAsyncValidators(this.asyncValidation.asyncValidatorFactory(\n        this.asyncValidation.marker,\n        this.validationTrigger.nativeElement\n      ));\n    }\n  }\n\n}\n","import {Component, Input, OnInit} from '@angular/core';\nimport {FormControl} from '@angular/forms';\nimport {FieldConfig, FieldConfigValidationType} from '../common-form-config';\nimport {Observable} from 'rxjs';\nimport {map, startWith} from 'rxjs/operators';\n\n@Component({\n  selector: 'sb-dynamic-textarea',\n  templateUrl: './dynamic-textarea.component.html',\n  styleUrls: ['./dynamic-textarea.component.css']\n})\nexport class DynamicTextareaComponent implements OnInit {\n\n  @Input() label: String;\n  @Input() placeholder: String;\n  @Input() formControlRef: FormControl;\n  @Input() field: FieldConfig<String>;\n  @Input() validations?: any;\n  @Input() default: String;\n  @Input() disabled: Boolean;\n\n  remainderValidLength$?: Observable<number>;\n\n  constructor() {\n  }\n\n  ngOnInit() {\n    const maxLengthValidation = this.field.validations &&\n    this.field.validations.find((validation) => validation.type === FieldConfigValidationType.MAXLENGTH);\n\n    if (maxLengthValidation) {\n      this.remainderValidLength$ = this.formControlRef.valueChanges.pipe(\n        startWith(''),\n        map((v) => ((typeof maxLengthValidation.value === 'number') ? maxLengthValidation.value : 0) - (v || '').length)\n      );\n    }\n  }\n\n}\n","import {Component, Input, OnChanges, OnDestroy, OnInit, Output, SimpleChanges, EventEmitter} from '@angular/core';\nimport {FormControl, FormGroup} from '@angular/forms';\nimport {Observable, Subject, Subscription, combineLatest, merge} from 'rxjs';\nimport {FieldConfig, FieldConfigOption, FieldConfigOptionsBuilder, DynamicFieldConfigOptionsBuilder} from '../common-form-config';\nimport {tap} from 'rxjs/operators';\nimport * as _ from 'lodash-es';\nimport {ValueComparator} from '../utilities/value-comparator';\n\n@Component({\n  selector: 'sb-dynamic-dropdown',\n  templateUrl: './dynamic-dropdown.component.html',\n  styleUrls: ['./dynamic-dropdown.component.css']\n})\nexport class DynamicDropdownComponent implements OnInit, OnChanges, OnDestroy {\n  ValueComparator = ValueComparator;\n  @Input() field: FieldConfig<String>;\n  @Input() disabled?: boolean;\n  @Input() options: any;\n  @Input() label?: string;\n  @Input() placeholder?: string;\n  @Input() isMultiple?: boolean;\n  @Input() context?: FormControl;\n  @Input() contextTerms?: any;\n  @Input() formControlRef?: FormControl;\n  @Input() formGroup?: FormGroup;\n  @Input() default?: any;\n  @Input() contextData: any;\n  @Input() dataLoadStatusDelegate: Subject<'LOADING' | 'LOADED'>;\n  @Input() type?: string;\n  @Input() styleClass?: string;\n  @Output() onChangeFilter: EventEmitter<any> = new EventEmitter();\n  @Input() validations?: any;\n\n  @Input() depends?: FormControl[];\n  @Input() dependencyTerms?: any = [];\n\n  public isDependsInvalid: any;\n\n  options$?: Observable<FieldConfigOption<any>[]>;\n  contextValueChangesSubscription?: Subscription;\n  selectedType: any;\n  tempAssociation: any;\n  latestParentValue: string;\n  constructor() {\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (!this.options) {\n      this.options = [];\n    }\n    if (this.isOptionsClosure(this.options)) {\n      this.options$ = (this.options as DynamicFieldConfigOptionsBuilder<any>)(\n        this.formControlRef,\n        this.depends,\n        this.formGroup,\n        () => this.dataLoadStatusDelegate.next('LOADING'),\n        () => this.dataLoadStatusDelegate.next('LOADED')\n      ) as any;\n    }\n  }\n\n  ngOnInit() {\n    if (!this.options) {\n      this.options = [];\n    }\n\n    // if (this.context) {\n      // this.contextValueChangesSubscription = this.context.valueChanges.pipe(\n      //   tap(() => {\n      //     this.formControlRef.patchValue(null);\n      //   })\n      // ).subscribe();\n    // }\n\n    this.dataLoadStatusDelegate.subscribe(\n      console.log\n    );\n\n    if (this.field && this.field.range) {\n      this.options = this.field.range;\n    } else if (_.isEmpty(this.options) && _.isEmpty(this.field.range) && this.default) {\n      this.field.range = [];\n      this.field.range.push(this.default);\n    }\n\n\n    if (!_.isEmpty(this.depends)) {\n     this.contextValueChangesSubscription =  merge(..._.map(this.depends, depend => depend.valueChanges)).pipe(\n      tap((value: any) => {\n        this.latestParentValue = value;\n        this.isDependsInvalid = _.includes(_.map(this.depends, depend => depend.invalid), true);\n        this.formControlRef.patchValue(null);\n      })\n      ).subscribe();\n\n      this.isDependsInvalid = _.includes(_.map(this.depends, depend => depend.invalid), true);\n    }\n\n\n    if (this.isOptionsClosure(this.options)) {\n      // tslint:disable-next-line:max-line-length\n      this.options$ = (this.options as DynamicFieldConfigOptionsBuilder<any>)(this.formControlRef, this.depends, this.formGroup, () => this.dataLoadStatusDelegate.next('LOADING'), () => this.dataLoadStatusDelegate.next('LOADED')) as any;\n    }\n  }\n\n  ngOnDestroy(): void {\n    if (this.contextValueChangesSubscription) {\n      this.contextValueChangesSubscription.unsubscribe();\n    }\n  }\n\n  isOptionsArray(options: any) {\n    return Array.isArray(options);\n\n  }\n\n  isOptionsClosure(options: any) {\n    return typeof options === 'function';\n  }\n\n  isOptionsMap(input: any) {\n    return !Array.isArray(input) && typeof input === 'object';\n  }\n\n  isOptionsArrayMap(input: any) {\n    return Array.isArray(input) && typeof input[0] === 'object';\n  }\n\n  onChangeFacet($event) {\n    const selectedObject = this.options.data[$event.currentTarget.options.selectedIndex - 1];\n    const emitPayload = JSON.parse(JSON.stringify(this.options));\n    emitPayload['data'] = selectedObject;\n    emitPayload['selectedLabel'] = selectedObject.label;\n    emitPayload['selectedValue'] = selectedObject.value;\n    this.onChangeFilter.emit(emitPayload);\n  }\n\n  fetchAssociations() {\n    // && this.context.value && this.field.association\n    if (!_.isEmpty(this.depends)) {\n      const filteredTerm = _.find(this.dependencyTerms, terms => {\n        return !_.isEmpty(this.field.output) ?\n        _.includes(this.getParentValue(), terms[this.field.output]) :\n        _.includes(this.getParentValue(), terms.name) ;\n      });\n      if (filteredTerm) {\n        this.tempAssociation =  _.filter(filteredTerm.associations, association => {\n          return (this.field.sourceCategory) ?\n          (association.category === this.field.sourceCategory) :\n          association.category === this.field.code;\n        });\n        return this.tempAssociation;\n      } else  {\n        return this.options;\n      }\n    } else {\n      return this.options;\n    }\n  }\n\n\n  getParentValue() {\n    return this.latestParentValue || _.compact(_.map(this.depends, 'value'));\n  }\n\n  getOptionValueForTerms(option) {\n    if (this.field.output) {\n      if (this.field.dataType === 'list') {\n        return [option[this.field.output]];\n      }\n      return option[this.field.output];\n    } else {\n      return this.field.dataType === 'list' ? [option.name] : option.name;\n    }\n  }\n\n  getOptionValueForRange(option, optionsType) {\n    if (this.field.output) {\n      if (this.field.dataType === 'list') {\n        if (optionsType === 'map' || optionsType === 'closure') {\n          return [option[this.field.output]] || [option.value] || [option.identifier] || [option.name] || [option.label];\n        } else  {\n          return [option];\n        }\n      } else {\n        if (optionsType === 'map' || optionsType === 'closure') {\n          return option[this.field.output] || option.value || option.identifier || option.name || option.label;\n        } else  {\n          return option;\n        }\n      }\n    } else {\n      if (this.field.dataType === 'list') {\n        if (optionsType === 'map' || optionsType === 'closure') {\n          return [option.value] || [option.identifier] || [option.name] || [option.label];\n        } else  {\n          return [option];\n        }\n      } else {\n        if (optionsType === 'map' || optionsType === 'closure') {\n          return  option.name || option.label || option.value || option.identifier;\n        } else  {\n          return option;\n        }\n      }\n    }\n  }\n\n  convertOptionToArray(option, output?) {\n\n  }\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, Input, OnChanges, OnDestroy,\n  OnInit, SimpleChanges, HostListener, ViewChild } from '@angular/core';\nimport {FormControl, FormGroup} from '@angular/forms';\nimport {from, Subject, merge} from 'rxjs';\nimport {FieldConfig, FieldConfigOptionsBuilder, DynamicFieldConfigOptionsBuilder} from '../common-form-config';\nimport {takeUntil, tap} from 'rxjs/operators';\nimport {fromJS, List, Map, Set} from 'immutable';\nimport * as _ from 'lodash-es';\n@Component({\n  selector: 'sb-dynamic-multiple-dropdown',\n  templateUrl: './dynamic-multiple-dropdown.component.html',\n  styleUrls: ['./dynamic-multiple-dropdown.component.css']\n})\nexport class DynamicMultipleDropdownComponent implements OnInit, OnChanges, OnDestroy {\n\n  @Input() disabled?: boolean;\n  @Input() field: FieldConfig<String>;\n  @Input() options: any;\n  @Input() label?: string;\n  @Input() labelHtml: any;\n  @Input() placeholder?: string;\n  @Input() isMultiple = true;\n  @Input() context?: FormControl;\n  @Input() formControlRef?: FormControl;\n  @Input() formGroup?: FormGroup;\n  @Input() platform: any = 'web';\n  @Input() default?: any;\n  @Input() contextData: any;\n  @Input() dataLoadStatusDelegate: Subject<'LOADING' | 'LOADED'>;\n  @Input() depends?: FormControl[];\n  @Input() dependencyTerms?: any = [];\n\n  _: any = _;\n\n\n  public isDependsInvalid: any;\n\n  showModal = false;\n  tempValue = Set<any>();\n  resolvedOptions = List<Map<string, string>>();\n  optionValueToOptionLabelMap = Map<any, string>();\n\n  fromJS = fromJS;\n\n  private dispose$ = new Subject<undefined>();\n\n  @HostListener('document:click')\n  docClick() {\n    if (this.showModal) {\n      this.showModal = false;\n    }\n  }\n  constructor(\n    private changeDetectionRef: ChangeDetectorRef\n  ) {\n  }\n  ngOnInit() {\n    if (this.field && this.field.range) {\n      this.options = this.field.range;\n    }\n\n    if (!_.isEmpty(this.depends)) {\n      merge(..._.map(this.depends, depend => depend.valueChanges)).pipe(\n        tap(() => {\n          this.formControlRef.patchValue(null);\n          this.resetTempValue();\n        }),\n        takeUntil(this.dispose$)\n      ).subscribe();\n\n      merge(..._.map(this.depends, depend => depend.statusChanges)).pipe(\n        tap(() => {\n          this.isDependsInvalid = _.includes(_.map(this.depends, depend => depend.invalid), true);\n        }),\n        takeUntil(this.dispose$)\n      ).subscribe();\n\n      this.isDependsInvalid = _.includes(_.map(this.depends, depend => depend.invalid), true);\n    }\n\n    this.formControlRef.valueChanges.pipe(\n      tap((value) => {\n        this.setTempValue(value);\n        this.changeDetectionRef.detectChanges();\n      }),\n      takeUntil(this.dispose$)\n    ).subscribe();\n    this.setupOptions();\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (!changes['options'] || !changes['options'].currentValue) {\n      return;\n    }\n  }\n\n  onSubmit() {\n    const finalValue = this.tempValue.toList().toJS();\n    this.formControlRef.patchValue(this.isMultiple ? finalValue : finalValue[0]);\n    this.formControlRef.markAsDirty();\n    this.showModal = false;\n  }\n\n  openModal(event) {\n    if (this.context && this.context.invalid) {\n      return;\n    }\n    if (this.disabled === true || this.isDependsInvalid) {\n      return;\n    }\n\n    this.setTempValue(this.formControlRef.value);\n    const htmlCollection = document.getElementsByClassName('sb-modal-dropdown-web');\n    const modalElements = Array.from(htmlCollection);\n    const isModalAlreadyOpened = modalElements.some((element: HTMLElement) => element.hidden === false );\n\n    if (this.platform === 'web' && isModalAlreadyOpened && !this.showModal) {\n      modalElements.forEach((item: HTMLElement) => {\n        item.hidden = true;\n      });\n    }\n\n    if (this.platform === 'web' && this.showModal) {\n      this.showModal = false;\n    } else {\n      this.showModal = true;\n    }\n\n    event.stopPropagation();\n  }\n\n  addSelected(option: Map<string, string>) {\n    if (this.isMultiple) {\n      if(this.field.output) {\n        if(this.tempValue.includes(option.get(this.field.output))) {\n          this.tempValue = this.tempValue.remove(option.get(this.field.output));\n        } else {\n          this.tempValue = this.tempValue.add(option.get(this.field.output));\n        }\n      } else if (this.tempValue.includes(option.get('name'))) {\n        this.tempValue = this.tempValue.remove(option.get('name'));\n      } else if (this.tempValue.includes(option.get('identifier'))) {\n        this.tempValue = this.tempValue.remove(option.get('identifier'));\n      } else {\n        this.tempValue = this.tempValue.add(option.get('name'));\n      }\n    } else {\n      if(this.field.output) {\n        this.tempValue = this.tempValue.clear();\n        this.tempValue = this.tempValue.add(option.get(this.field.output))\n      } else {\n        this.tempValue = this.tempValue.clear();\n        this.tempValue = this.tempValue.add(option.get('name'));\n      }\n    }\n  }\n\n  onCancel() {\n    this.formControlRef.markAsDirty();\n    this.showModal = false;\n  }\n\n  ngOnDestroy(): void {\n    this.dispose$.next(null);\n    this.dispose$.complete();\n  }\n\n  private isOptionsArray() {\n    return Array.isArray(this.options);\n  }\n\n  private isOptionsClosure() {\n    return typeof this.options === 'function';\n  }\n\n  private isOptionsMap() {\n    return !Array.isArray(this.options) && typeof this.options === 'object';\n  }\n\n  private setTempValue(value: any) {\n    if (value) {\n      if (Array.isArray(value)) {\n        this.tempValue = Set(fromJS(value));\n      } else {\n        this.tempValue = Set(fromJS([value]));\n      }\n      // this.onSubmit();\n    }\n  }\n\n  private resetTempValue() {\n    this.tempValue = Set(null);\n  }\n\n  private setupOptions() {\n    if (!this.options) {\n      this.options = [];\n      this.resolvedOptions = this.resolvedOptions.clear();\n    }\n\n    if (this.isOptionsArray()) {\n      const optionMap = _.map(this.options, option => {\n        return {\n          identifier: option.value || option.identifier || option.name || option,\n          name: option.label || option.name || option.value || option,\n        };\n      });\n      this.resolvedOptions = fromJS(optionMap);\n    } else if (this.isOptionsMap()) {\n      this.resolvedOptions = (this.depends) ?\n        fromJS(this.options[this.context.value]) :\n        this.resolvedOptions;\n    } else if (this.isOptionsClosure()) {\n      from((this.options as DynamicFieldConfigOptionsBuilder<any>)(\n        this.formControlRef,\n        this.depends,\n        this.formGroup,\n        () => this.dataLoadStatusDelegate.next('LOADING'),\n        () => this.dataLoadStatusDelegate.next('LOADED')\n      )).pipe(\n        tap((options = []) => {\n          this.resolvedOptions = fromJS(options);\n\n          this.resolvedOptions.forEach((option) => {\n            const value: any = !_.isEmpty(this.field.output) ? option.get(this.field.output) :\n             option.get('name') || option.get('identifier') || option.get('value') || option;\n            const labelVal: any = option.get('name') || option.get('label') || option;\n\n            this.optionValueToOptionLabelMap = this.optionValueToOptionLabelMap.set(value, labelVal);\n          });\n\n          this.setTempValue(this.default);\n\n          this.changeDetectionRef.detectChanges();\n        }),\n        takeUntil(this.dispose$)\n      ).subscribe();\n    }\n\n    this.resolvedOptions.forEach((option) => {\n      const value: any = !_.isEmpty(this.field.output) ? option.get(this.field.output) :\n      option.get('name') || option.get('identifier') || option.get('value') || option;\n\n      const labelVal: any = option.get('name') || option.get('label') || option;\n\n      this.optionValueToOptionLabelMap = this.optionValueToOptionLabelMap.set(value, labelVal);\n    });\n\n    this.setTempValue(this.default);\n  }\n\n}\n","import { Component, Input, OnInit, Output, EventEmitter } from '@angular/core';\nimport {FormControl, FormGroup} from '@angular/forms';\nimport {Observable, Subject, Subscription, combineLatest, merge} from 'rxjs';\nimport {FieldConfig, FieldConfigOption, FieldConfigOptionsBuilder} from '../common-form-config';\nimport {tap} from 'rxjs/operators';\nimport * as _ from 'lodash-es';\nimport {ValueComparator} from '../utilities/value-comparator';\n\n\n@Component({\n  selector: 'sb-dynamic-checkbox',\n  templateUrl: './dynamic-checkbox.component.html',\n  styleUrls: ['./dynamic-checkbox.component.css']\n})\nexport class DynamicCheckboxComponent implements OnInit {\n\n  ValueComparator = ValueComparator;\n  @Input() field: FieldConfig<String>;\n  @Input() disabled?: boolean;\n  @Input() options: any;\n  @Input() label?: string;\n  @Input() placeholder?: string;\n  @Input() isMultiple?: boolean;\n  @Input() context?: FormControl;\n  @Input() contextTerms?: any;\n  @Input() formControlRef?: FormControl;\n  @Input() formGroup?: FormGroup;\n  @Input() default?: any;\n  @Input() contextData: any;\n  @Input() dataLoadStatusDelegate: Subject<'LOADING' | 'LOADED'>;\n  @Input() type?: string;\n  @Input() styleClass?: string;\n  @Output() onChangeFilter: EventEmitter<any> = new EventEmitter();\n  @Input() validations?: any;\n\n  @Input() depends?: FormControl[];\n  @Input() dependencyTerms?: any = [];\n\n  _: any = _;\n\n  public checked: boolean;\n\n  constructor() { }\n\n  ngOnInit() {\n    const desiredValue = (this.field.dataType === 'text') ? (this.field.default === 'Yes' ? true : false) : !!this.field.default;\n    this.checked = desiredValue;\n  }\n\n  onChecklistChange(checked) {\n    this.checked = checked;\n    const desiredValue = (this.field.dataType === 'text') ? (checked === true ? 'Yes' : 'No') : checked;\n    this.formControlRef.setValue(desiredValue);\n  }\n\n\n}\n","import { Component, EventEmitter, Input, OnDestroy, OnInit, Output, AfterViewInit } from '@angular/core';\nimport { Subscription, combineLatest, Subject, merge, from } from 'rxjs';\nimport * as _ from 'lodash-es';\nimport { FormControl , FormGroup} from '@angular/forms';\nimport { FieldConfig } from '../common-form-config';\nimport { tap, takeUntil } from 'rxjs/operators';\n\ndeclare var treePicker: any;\ndeclare var $: any;\ninterface TopicTreeNode {\n  id: string;\n  name: string;\n  selectable: string;\n  nodes: Array<TopicTreeNode>;\n}\ninterface JQuery {\n  treePicker(options?: any);\n}\n\n\n@Component({\n  selector: 'sb-topicpicker',\n  templateUrl: './topicpicker.component.html',\n  styleUrls: ['./topicpicker.component.css']\n})\nexport class TopicpickerComponent implements OnInit, OnDestroy, AfterViewInit {\n\n  @Input() selectedTopics: any;\n  @Input() topicPickerClass: string;\n  @Input() label: String;\n  @Input() disabled?: boolean;\n  @Input() placeholder: String;\n  @Input() formControlRef: FormControl;\n  @Input() field: FieldConfig<String>;\n  @Output() topicChange = new EventEmitter();\n  @Input() validations?: any;\n  @Input() formGroup?: FormGroup;\n  @Input() default?: any;\n\n  @Input() depends?: FormControl[];\n  @Input() dependencyTerms?: any = [];\n  public selectedNodes: any;\n  public placeHolder: string;\n\n  public isDependsInvalid: any;\n  private dispose$ = new Subject<undefined>();\n  latestParentValue: string;\n  tempAssociation: any;\n\n  constructor() { }\n\n  ngOnInit() {\n\n    this.formControlRef.valueChanges.pipe(\n      tap(val => {\n        console.log(val);\n      }),\n      takeUntil(this.dispose$)\n    ).subscribe();\n    const selectedTopics = _.reduce(this.default, (collector, element) => {\n      if (typeof element === 'string') {\n        collector.unformatted.push(element);\n      } else if (_.get(element, 'identifier')) {\n        collector.formatted.push(element);\n      }\n      return collector;\n    }, { formatted: [], unformatted: [] });\n\n    this.formatSelectedTopics(this.field.terms, selectedTopics.unformatted, selectedTopics.formatted);\n    this.default = selectedTopics.unformatted;\n    this.selectedNodes = { ...selectedTopics.formatted };\n    this.topicChange.emit(this.selectedTopics);\n\n\n\n\n    if (!_.isEmpty(this.default)) {\n      this.placeHolder = this.default &&  this.default.length + ' topics selected';\n      this.formControlRef.setValue(this.default);\n    }\n\n\n    if (!_.isEmpty(this.depends)) {\n      merge(..._.map(this.depends, depend => depend.valueChanges)).pipe(\n       tap((value: any) => {\n         this.latestParentValue = value;\n         this.isDependsInvalid = _.includes(_.map(this.depends, depend => depend.invalid), true);\n         this.formControlRef.patchValue(null);\n         this.placeHolder = '';\n         this.default = [];\n         this.selectedNodes = {};\n         this.initTopicPicker(this.formatTopics(this.fetchAssociations()));\n       }),\n       takeUntil(this.dispose$)\n       ).subscribe();\n\n       this.isDependsInvalid = _.includes(_.map(this.depends, depend => depend.invalid), true);\n     }\n\n  }\n\n  // tslint:disable-next-line:use-life-cycle-interface\n  ngAfterViewInit() {\n    this.initTopicPicker(this.formatTopics(this.field.terms));\n\n  }\n\n  ngOnDestroy(): void {\n    this.dispose$.next(null);\n    this.dispose$.complete();\n  }\n\n  private formatTopics(topics, subTopic = false): Array<TopicTreeNode> {\n    return _.map(topics, (topic) => ({\n      id: topic.identifier,\n      name: topic.name,\n      selectable: subTopic ? 'selectable' : 'notselectable',\n      nodes: this.formatTopics(topic.children, true)\n    }));\n  }\n\n  private formatSelectedTopics(topics, unformatted, formatted) {\n    _.forEach(topics, (topic) => {\n      if (unformatted.includes(this.field.output ? topic[this.field.output] : topic.name) && !topic.children) {\n        formatted.push({\n          identifier: topic.identifier,\n          name: topic.name\n        });\n      }\n      if (topic.children) {\n        this.formatSelectedTopics(topic.children, unformatted, formatted);\n      }\n    });\n  }\n\n  private initTopicPicker(data: Array<TopicTreeNode>) {\n      $(`.topic-picker-selector_${this.field.code}`).treePicker({\n        data: data,\n        name: 'Topics',\n        noDataMessage: 'noDataMessage',\n        submitButtonText: 'Done',\n        cancelButtonText: 'Cancel',\n        removeAllText: 'Remove All',\n        chooseAllText: 'Choose All',\n        searchText: 'Search',\n        selectedText: 'selected',\n        picked: (!_.isEmpty(this.selectedNodes)) ? _.map(this.selectedNodes, 'identifier') : (!_.isEmpty(this.default) ? this.default : []),\n        onSubmit: (selectedNodes) => {\n          this.selectedNodes = selectedNodes;\n          this.selectedTopics = _.map(selectedNodes, node => ({\n            identifier: node.id,\n            name: node.name\n          }));\n          this.placeHolder = this.selectedTopics.length + ' topics selected';\n          this.topicChange.emit(this.selectedTopics);\n          const topics = [];\n          _.forEach(this.selectedTopics, (value, index) => {\n            if (this.field.output) {\n             topics.push(value[this.field.output]);\n            } else {\n              topics.push(value.name);\n            }\n          });\n          this.formControlRef.setValue(topics);\n        },\n        nodeName: `topicSelector_${this.field.code}`,\n        displayFormat: function(picked) { return this.placeHolder; } ,\n        minSearchQueryLength: 1,\n        disabled: (node)  => {\n          return this.disabled ? true : ( this.depends ? (this.isDependsInvalid ? true : false) : false )\n        }\n      });\n      setTimeout(() => document.getElementById(`topicSelector_${this.field.code}`).classList.add(this.topicPickerClass), 0);\n  }\n\n  fetchAssociations() {\n    // && this.context.value && this.field.association\n    if (!_.isEmpty(this.depends)) {\n      const filteredTerm = _.find(this.dependencyTerms, terms => {\n        return !_.isEmpty(this.field.output) ? _.includes(this.getParentValue(), terms[this.field.output]) :\n         _.includes(this.getParentValue(), terms.name) ;\n      });\n      if (filteredTerm) {\n        this.tempAssociation =  _.filter(filteredTerm.associations, association => {\n          return (this.field.sourceCategory) ? (association.category === this.field.sourceCategory) :\n           association.category === this.field.code;\n        });\n        return this.tempAssociation;\n      } else  {\n        return this.field.terms;\n      }\n    } else {\n      return this.field.terms;\n    }\n  }\n\n  getParentValue() {\n    return this.latestParentValue || _.compact(_.map(this.depends, 'value'));\n  }\n\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { FieldConfig } from '../common-form-config';\nimport * as _ from 'lodash-es';\n\n@Component({\n  selector: 'sb-keywords',\n  templateUrl: './keywords.component.html',\n  styleUrls: ['./keywords.component.css']\n})\nexport class KeywordsComponent implements OnInit {\n  @Input() label: String;\n  @Input() placeholder: String;\n  @Input() formControlRef: FormControl;\n  @Input() field: FieldConfig<String>;\n  @Input() validations?: any;\n  @Input() disabled: Boolean;\n  @Input() default: String;\n\n\n  public items: any;\n  inputText = '';\n  constructor() { }\n\n  ngOnInit() {\n    if (!_.isEmpty(this.default)) {\n      this.items = this.default;\n    }\n  }\n\n}\n","import {Component, Input, OnChanges, OnDestroy, OnInit, Output, SimpleChanges, EventEmitter} from '@angular/core';\nimport {FormControl, FormGroup} from '@angular/forms';\nimport {Observable, Subject, Subscription, combineLatest, merge} from 'rxjs';\nimport {FieldConfig, FieldConfigOption, FieldConfigOptionsBuilder, DynamicFieldConfigOptionsBuilder} from '../common-form-config';\nimport {tap} from 'rxjs/operators';\nimport * as _ from 'lodash-es';\nimport {ValueComparator} from '../utilities/value-comparator';\n@Component({\n  selector: 'sb-dynamic-multi-select',\n  templateUrl: './dynamic-multi-select.component.html',\n  styleUrls: ['./dynamic-multi-select.component.css']\n})\nexport class DynamicMultiSelectComponent implements OnInit, OnChanges, OnDestroy {\n  ValueComparator = ValueComparator;\n  @Input() field: FieldConfig<String>;\n  @Input() disabled?: boolean;\n  @Input() options: any;\n  @Input() label?: string;\n  @Input() placeHolder?: string;\n  @Input() isMultiple?: boolean;\n  @Input() context?: FormControl;\n  @Input() contextTerms?: any;\n  @Input() formControlRef?: FormControl;\n  @Input() formGroup?: FormGroup;\n  @Input() default?: any;\n  @Input() contextData: any;\n  @Input() dataLoadStatusDelegate: Subject<'LOADING' | 'LOADED'>;\n  @Input() type?: string;\n  @Input() styleClass?: string;\n  @Output() onChangeFilter: EventEmitter<any> = new EventEmitter();\n  @Input() validations?: any;\n\n  @Input() depends?: FormControl[];\n  @Input() dependencyTerms?: any = [];\n\n  options$?: Observable<FieldConfigOption<any>[]>;\n  contextValueChangesSubscription?: Subscription;\n  selectedType: any;\n  tempAssociation: any;\n  latestParentValue: string;\n  constructor() {\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (!this.options) {\n      this.options = [];\n    }\n    if (this.isOptionsClosure(this.options)) {\n      this.options$ = (this.options as DynamicFieldConfigOptionsBuilder<any>)(\n        this.formControlRef,\n        this.depends,\n        this.formGroup,\n        () => this.dataLoadStatusDelegate.next('LOADING'),\n        () => this.dataLoadStatusDelegate.next('LOADED')\n      ) as any;\n    }\n  }\n\n  ngOnInit() {\n    // if (this.context) {\n      // this.contextValueChangesSubscription = this.context.valueChanges.pipe(\n      //   tap(() => {\n      //     this.formControlRef.patchValue(null);\n      //   })\n      // ).subscribe();\n    // }\n\n    this.dataLoadStatusDelegate.subscribe(\n      console.log\n    );\n\n    if (this.field && this.field.range) {\n      this.options = this.field.range;\n    }\n\n\n    if (!_.isEmpty(this.depends) && !this.isOptionsClosure(this.options)) {\n     this.contextValueChangesSubscription =  merge(..._.map(this.depends, depend => depend.valueChanges)).pipe(\n      tap((value: any) => {\n        this.latestParentValue = value;\n      })\n      ).subscribe();\n    }\n\n    if (!_.isEmpty(this.field.depends)) {\n      merge(..._.map(this.depends, depend => depend.valueChanges)).pipe(\n          tap(() => {\n            // _.forEach(this.field.depends, depend => {\n            //   if (!_.isEmpty(this.formGroup.get(depend))) {\n            //     this.formGroup.get(depend).patchValue(null);\n            //   }\n            // });\n            this.formControlRef.patchValue(null);\n          })\n      ).subscribe();\n    }\n\n\n    if (this.isOptionsClosure(this.options)) {\n      // tslint:disable-next-line:max-line-length\n      this.options$ = (this.options as DynamicFieldConfigOptionsBuilder<any>)(this.formControlRef, this.depends, this.formGroup, () => this.dataLoadStatusDelegate.next('LOADING'), () => this.dataLoadStatusDelegate.next('LOADED')) as any;\n    }\n\n\n\n  }\n\n  ngOnDestroy(): void {\n    if (this.contextValueChangesSubscription) {\n      this.contextValueChangesSubscription.unsubscribe();\n    }\n  }\n\n  isOptionsArray(options: any) {\n    return Array.isArray(options);\n\n  }\n\n  isOptionsClosure(options: any) {\n    return typeof options === 'function';\n  }\n\n  isOptionsMap(input: any) {\n    return !Array.isArray(input) && typeof input === 'object';\n  }\n\n  isOptionsArrayMap(input: any) {\n    return Array.isArray(input) && typeof input[0] === 'object';\n  }\n\n  onChangeFacet($event) {\n    const selectedObject = this.options.data[$event.currentTarget.options.selectedIndex - 1];\n    const emitPayload = JSON.parse(JSON.stringify(this.options));\n    emitPayload['data'] = selectedObject;\n    emitPayload['selectedLabel'] = selectedObject.label;\n    emitPayload['selectedValue'] = selectedObject.value;\n    this.onChangeFilter.emit(emitPayload);\n  }\n\n  fetchAssociations() {\n    // && this.context.value && this.field.association\n    if (!_.isEmpty(this.depends)) {\n      const filteredTerm = _.find(this.dependencyTerms, terms => {\n        return _.includes(this.getParentValue(), terms.identifier);\n      });\n      if (filteredTerm) {\n        this.tempAssociation =  _.filter(filteredTerm.associations, association => {\n          return association.category === this.field.code;\n        });\n        return this.tempAssociation;\n      } else  {\n        return this.options;\n      }\n    } else {\n      return this.options;\n    }\n  }\n\n\n  getParentValue() {\n    return this.latestParentValue || _.compact(_.map(this.depends, 'value'));\n  }\n}\n","import { ComponentFactoryResolver, ComponentRef, Directive, Input, OnInit, ViewContainerRef, Renderer2, ElementRef} from '@angular/core';\n\nimport { FormGroup, FormControl } from '@angular/forms';\nimport { FieldConfig } from '../common-form-config';\n// import { InputComponent } from '../input/input.component';\n// import { ButtonComponent } from '../button/button.component';\n// import { SelectComponent } from '../select/select.component';\nimport * as _ from 'lodash-es';\nimport {Subject} from 'rxjs';\n\n\nimport { DynamicTextboxComponent } from '../dynamic-textbox/dynamic-textbox.component'\nimport { DynamicTextareaComponent } from '../dynamic-textarea/dynamic-textarea.component';\nimport { TopicpickerComponent } from '../topicpicker/topicpicker.component';\nimport { KeywordsComponent } from '../keywords/keywords.component';\nimport { DynamicMultiSelectComponent } from '../dynamic-multi-select/dynamic-multi-select.component';\nimport { DynamicDropdownComponent } from '../dynamic-dropdown/dynamic-dropdown.component';\nimport { DynamicMultipleDropdownComponent } from '../dynamic-multiple-dropdown/dynamic-multiple-dropdown.component';\nimport { DynamicCheckboxComponent } from '../dynamic-checkbox/dynamic-checkbox.component';\n\n\nconst componentMapper = {\n  textarea: DynamicTextareaComponent,\n  text: DynamicTextboxComponent,\n  select: DynamicDropdownComponent,\n  multiselect: DynamicMultiSelectComponent,\n  nestedselect: DynamicMultipleDropdownComponent,\n  keywords: KeywordsComponent,\n  dialcode: DynamicTextboxComponent,\n  topicselector: TopicpickerComponent,\n  licenses: DynamicDropdownComponent,\n  label: DynamicTextboxComponent,\n  number: DynamicTextboxComponent,\n  checkbox: DynamicCheckboxComponent\n};\n\n@Directive({\n  selector: '[sbDynamicField]'\n})\nexport class DynamicFieldDirective implements OnInit {\n\n\n\n  @Input() field: FieldConfig<String>;\n  @Input() formGroup: FormGroup;\n  @Input() formControlRef?: FormControl;\n  @Input() disabled?: boolean;\n  @Input() label: String;\n  @Input() options?: any = [];\n  @Input() placeholder?: string;\n  @Input() context?: FormControl;\n  @Input() validations?: any;\n  @Input() contextTerms?: any = [];\n  @Input() depends?: FormControl[];\n  @Input() dependencyTerms?: any = [];\n  @Input() default: any;\n  @Input() dataLoadStatusDelegate: Subject<'LOADING' | 'LOADED'>;\n\n  componentRef: any;\n\n\n  constructor(\n    private resolver: ComponentFactoryResolver,\n    private container: ViewContainerRef,\n    private renderer2: Renderer2,\n    private elementRef: ElementRef\n\n  ) { }\n\n  ngOnInit() {\n    const factory = this.resolver.resolveComponentFactory(componentMapper[this.field.inputType]);\n    this.componentRef = this.container.createComponent(factory);\n    // this.renderer2.appendChild(this.elementRef.nativeElement, this.componentRef.location.nativeElement);\n    if (this.field.renderingHints && this.field.renderingHints.class) {\n      this.setClassListOnElement(this.field.renderingHints.class);\n    }\n    this.componentRef.instance.field = this.field;\n    this.componentRef.instance.formGroup = this.formGroup;\n    this.componentRef.instance.formControlRef = this.formControlRef;\n    this.componentRef.instance.label = this.label;\n    this.componentRef.instance.placeholder = this.placeholder;\n    this.componentRef.instance.options = this.options;\n    this.componentRef.instance.context = this.context;\n    this.componentRef.instance.contextTerms = this.contextTerms;\n    this.componentRef.instance.depends = this.depends;\n    this.componentRef.instance.dependencyTerms = this.dependencyTerms;\n    this.componentRef.instance.default = this.default;\n    this.componentRef.instance.dataLoadStatusDelegate = this.dataLoadStatusDelegate;\n    this.componentRef.instance.validations = this.validations;\n    this.componentRef.instance.disabled = this.disabled;\n\n    // this.componentRef.instance = {\n    //   field : this.field,\n    //   formGroup : this.formGroup,\n    //   formControlRef : this.formControlRef,\n    //   label : this.label,\n    //   options : this.options,\n    //   context : this.context\n    // };\n  }\n\n  setClassListOnElement (cssClasses) {\n    const classList = cssClasses.split(' ');\n    _.forEach(classList, cssClass => {\n      this.renderer2.addClass(this.componentRef.location.nativeElement, cssClass);\n    });\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CommonFormElementsComponent } from './common-form-elements.component';\nimport { DropdownComponent } from './dropdown/dropdown.component';\nimport { TextboxComponent } from './textbox/textbox.component';\nimport { TextareaComponent } from './textarea/textarea.component';\nimport { CheckboxComponent } from './checkbox/checkbox.component';\nimport { FormComponent } from './form/form.component';\nimport { OptionGroupComponent } from './option-group/option-group.component';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { DropdownIconComponent } from './icon/dropdown/dropdownIcon.component';\nimport { MultipleDropdownComponent } from './multiple-dropdown/multiple-dropdown.component';\nimport { CaretDownComponent } from './icon/caret-down/caret-down.component';\nimport { PipesModule } from './pipes/pipes.module';\nimport { RedExclamationComponent } from './icon/red-exclamation/red-exclamation.component';\nimport { GreenTickComponent } from './icon/green-tick/green-tick.component';\nimport { EmptyCircleComponent } from './icon/empty-circle/empty-circle.component';\nimport { FiltersComponent } from './filters/filters.component';\nimport { PillsComponent } from './pills/pills.component';\n\n\nimport { DynamicFormComponent } from './dynamic-form/dynamic-form.component';\nimport { DynamicTextboxComponent } from './dynamic-textbox/dynamic-textbox.component';\nimport { DynamicTextareaComponent } from './dynamic-textarea/dynamic-textarea.component';\nimport { DynamicDropdownComponent } from './dynamic-dropdown/dynamic-dropdown.component';\nimport { DynamicMultipleDropdownComponent } from './dynamic-multiple-dropdown/dynamic-multiple-dropdown.component';\nimport { DynamicCheckboxComponent } from './dynamic-checkbox/dynamic-checkbox.component';\nimport { DynamicFieldDirective } from './dynamic-field/dynamic-field.directive';\nimport { DynamicMultiSelectComponent } from './dynamic-multi-select/dynamic-multi-select.component';\nimport { TopicpickerComponent } from './topicpicker/topicpicker.component';\nimport { KeywordsComponent } from './keywords/keywords.component';\nimport { TagInputModule } from 'ngx-chips';\n\n@NgModule({\n   declarations: [\n      CommonFormElementsComponent,\n      DropdownComponent,\n      TextboxComponent,\n      TextareaComponent,\n      CheckboxComponent,\n      FormComponent,\n      OptionGroupComponent,\n      DropdownIconComponent,\n      MultipleDropdownComponent,\n      CaretDownComponent,\n      RedExclamationComponent,\n      GreenTickComponent,\n      EmptyCircleComponent,\n      FiltersComponent,\n      PillsComponent,\n      DynamicFormComponent,\n      DynamicTextboxComponent,\n      DynamicTextareaComponent,\n      DynamicDropdownComponent,\n      DynamicMultipleDropdownComponent,\n      DynamicCheckboxComponent,\n      DynamicFieldDirective,\n      TopicpickerComponent,\n      KeywordsComponent,\n      DynamicMultiSelectComponent\n   ],\n   imports: [\n      CommonModule,\n      ReactiveFormsModule,\n      FormsModule,\n      PipesModule,\n      TagInputModule\n   ],\n   exports: [\n      CommonFormElementsComponent,\n      DropdownComponent,\n      CaretDownComponent,\n      TextboxComponent,\n      TextareaComponent,\n      CheckboxComponent,\n      FormComponent,\n      OptionGroupComponent,\n      DropdownIconComponent,\n      RedExclamationComponent,\n      GreenTickComponent,\n      EmptyCircleComponent,\n      MultipleDropdownComponent,\n      FiltersComponent,\n      DynamicFormComponent,\n      DynamicTextboxComponent,\n      DynamicTextareaComponent,\n      DynamicDropdownComponent,\n      DynamicMultipleDropdownComponent,\n      DynamicCheckboxComponent,\n      DynamicMultiSelectComponent,\n      TopicpickerComponent,\n      KeywordsComponent,\n      DynamicFieldDirective\n   ],\n   entryComponents: [\n      DynamicFormComponent,\n      CommonFormElementsComponent,\n      DynamicTextboxComponent,\n      DynamicTextareaComponent,\n      DynamicDropdownComponent,\n      DynamicMultipleDropdownComponent,\n      DynamicCheckboxComponent,\n      DynamicMultiSelectComponent,\n      TopicpickerComponent,\n      KeywordsComponent\n   ]\n})\nexport class CommonFormElementsModule { }\n"],"names":["_.isEmpty","_.find","_.cloneDeep","_.keys","_.isArray","_.toArray","_.isString","_.toString","_.includes","_.split","_.get","_.forEach","_.map","_.filter","_.flatten","_.groupBy","_.compact","_.reduce"],"mappings":"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"}
