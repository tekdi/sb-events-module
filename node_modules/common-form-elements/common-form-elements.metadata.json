{"__symbolic":"module","version":4,"metadata":{"CommonFormElementsComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":2,"character":1},"arguments":[{"selector":"sb-common-form-elements","template":"\n    <p>\n      common-form-elements works!\n    </p>\n  ","styles":[]}]}],"members":{"__ctor__":[{"__symbolic":"constructor"}],"ngOnInit":[{"__symbolic":"method"}]}},"CommonFormElementsModule":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"NgModule","line":33,"character":1},"arguments":[{"declarations":[{"__symbolic":"reference","name":"CommonFormElementsComponent"},{"__symbolic":"reference","name":"ɵa"},{"__symbolic":"reference","name":"ɵb"},{"__symbolic":"reference","name":"ɵc"},{"__symbolic":"reference","name":"ɵd"},{"__symbolic":"reference","name":"ɵe"},{"__symbolic":"reference","name":"ɵf"},{"__symbolic":"reference","name":"ɵg"},{"__symbolic":"reference","name":"ɵh"},{"__symbolic":"reference","name":"ɵi"},{"__symbolic":"reference","name":"ɵj"},{"__symbolic":"reference","name":"ɵk"},{"__symbolic":"reference","name":"ɵl"},{"__symbolic":"reference","name":"ɵm"},{"__symbolic":"reference","name":"ɵn"},{"__symbolic":"reference","name":"ɵo"},{"__symbolic":"reference","name":"ɵp"},{"__symbolic":"reference","name":"ɵq"},{"__symbolic":"reference","name":"ɵr"},{"__symbolic":"reference","name":"ɵs"},{"__symbolic":"reference","name":"ɵt"},{"__symbolic":"reference","name":"ɵu"},{"__symbolic":"reference","name":"ɵv"},{"__symbolic":"reference","name":"ɵw"},{"__symbolic":"reference","name":"ɵx"}],"imports":[{"__symbolic":"reference","module":"@angular/common","name":"CommonModule","line":62,"character":6},{"__symbolic":"reference","module":"@angular/forms","name":"ReactiveFormsModule","line":63,"character":6},{"__symbolic":"reference","module":"@angular/forms","name":"FormsModule","line":64,"character":6},{"__symbolic":"reference","name":"ɵy"},{"__symbolic":"reference","module":"ngx-chips","name":"TagInputModule","line":66,"character":6}],"exports":[{"__symbolic":"reference","name":"CommonFormElementsComponent"},{"__symbolic":"reference","name":"ɵa"},{"__symbolic":"reference","name":"ɵi"},{"__symbolic":"reference","name":"ɵb"},{"__symbolic":"reference","name":"ɵc"},{"__symbolic":"reference","name":"ɵd"},{"__symbolic":"reference","name":"ɵe"},{"__symbolic":"reference","name":"ɵf"},{"__symbolic":"reference","name":"ɵg"},{"__symbolic":"reference","name":"ɵj"},{"__symbolic":"reference","name":"ɵk"},{"__symbolic":"reference","name":"ɵl"},{"__symbolic":"reference","name":"ɵh"},{"__symbolic":"reference","name":"ɵm"},{"__symbolic":"reference","name":"ɵo"},{"__symbolic":"reference","name":"ɵp"},{"__symbolic":"reference","name":"ɵq"},{"__symbolic":"reference","name":"ɵr"},{"__symbolic":"reference","name":"ɵs"},{"__symbolic":"reference","name":"ɵt"},{"__symbolic":"reference","name":"ɵx"},{"__symbolic":"reference","name":"ɵv"},{"__symbolic":"reference","name":"ɵw"},{"__symbolic":"reference","name":"ɵu"}],"entryComponents":[{"__symbolic":"reference","name":"ɵo"},{"__symbolic":"reference","name":"CommonFormElementsComponent"},{"__symbolic":"reference","name":"ɵp"},{"__symbolic":"reference","name":"ɵq"},{"__symbolic":"reference","name":"ɵr"},{"__symbolic":"reference","name":"ɵs"},{"__symbolic":"reference","name":"ɵt"},{"__symbolic":"reference","name":"ɵx"},{"__symbolic":"reference","name":"ɵv"},{"__symbolic":"reference","name":"ɵw"}]}]}],"members":{}},"FieldConfigInputType":{"INPUT":"input","CHECKBOX":"checkbox","SELECT":"select","LABEL":"label","TEXTAREA":"textarea","NESTED_SELECT":"nested_select","NESTED_GROUP":"nested_group","MULTIPLE_SELECT":"multiple_select"},"FieldConfigValidationType":{"REQUIRED":"required","MAXLENGTH":"maxLength","REQUIRED_TRUE":"required_true","MINLENGTH":"minLength","PATTERN":"pattern"},"FieldConfigOptionsBuilder":{"__symbolic":"interface"},"AsyncValidatorFactory":{"__symbolic":"interface"},"FieldConfigOption":{"__symbolic":"interface"},"FieldConfigOptionAssociations":{"__symbolic":"interface"},"FieldConfigAsyncValidation":{"__symbolic":"interface"},"FieldConfig":{"__symbolic":"interface"},"FilterType":{"FACET":"facet"},"Validator":{"__symbolic":"interface"},"DynamicFieldConfigOptionsBuilder":{"__symbolic":"interface"},"SectionConfig":{"__symbolic":"interface"},"ɵa":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":7,"character":1},"arguments":[{"selector":"sb-dropdown","template":"<div class=\"sb-dropdown\" *ngIf=\"!type\">\n  <label>{{label}}</label>\n  <ng-container *ngIf=\"options\">\n    <div class=\"dropdown-container\">\n      <sb-icon-dropdown class=\"dropdown-icon\"></sb-icon-dropdown>\n      <select [attr.disabled]=\"disabled ? true : ( context ? (context.invalid ? true : null) : null )\"\n              [formControl]=\"formControlRef\"\n              [compareWith]=\"ValueComparator.valueComparator\" class=\"sb-dropdown-select\" id=\"sb-dropdown\"\n              name=\"sb-dropdown\">\n        <option [defaultSelected]=\"!default\" [ngValue]=\"null\" disabled>{{placeHolder}}\n        </option>\n        <ng-container *ngIf=\"isOptionsArray(options)\">\n          <option *ngFor=\"let option of options\" [ngValue]=\"option.value\">{{option.label}}</option>\n        </ng-container>\n\n        <ng-container *ngIf=\"isOptionsClosure(options)\">\n          <option *ngFor=\"let option of options$ | async\" [ngValue]=\"option.value\">{{option.label}}</option>\n        </ng-container>\n\n        <ng-container *ngIf=\"isOptionsMap(options) && context && context.value\">\n          <option *ngFor=\"let option of options[context.value]\" [ngValue]=\"option.value\">{{option.label}}</option>\n        </ng-container>\n      </select>\n    </div>\n  </ng-container>\n</div>\n\n<!-- Dropdown for filters component -->\n<div class=\"sb-dropdown\" *ngIf=\"type === 'facet'\">\n  <label>{{label}}</label>\n  <ng-container *ngIf=\"options && options.data\">\n    <div class=\"dropdown-container\">\n      <sb-icon-dropdown class=\"dropdown-icon\"></sb-icon-dropdown>\n      <select [attr.disabled]=\"disabled ? true : ( context ? (context.invalid ? true : null) : null )\"\n        class=\"sb-dropdown-select\" [ngClass]=\"(styleClass ? styleClass : 'default-dropdown')\" id=\"sb-dropdown\" name=\"sb-dropdown\"\n        (change)=\"onChangeFacet($event)\" placeholder=\"placeHolder\">\n        <option *ngIf=\"!default\" [disabled]=\"true\" selected>{{placeHolder}}</option>\n        <option *ngFor=\"let option of options.data\" [ngValue]=\"option\" [selected]=\"options.default === option.value\">{{option.label}}</option>\n      </select>\n    </div>\n  </ng-container>\n</div>\n\n<!-- Dropdown for filters component -->\n","styles":["label{display:block;padding:10px;font-size:1rem}.dropdown-icon{position:absolute;top:.5rem;right:18px;z-index:1}.dropdown-container{position:relative}select[disabled]{opacity:.3}select{-webkit-appearance:none;-moz-appearance:none;text-indent:1px;text-overflow:''}.sb-dropdown-select{opacity:.99;color:#333;font-family:\"Noto Sans\";font-size:12px;font-weight:700;letter-spacing:0;line-height:17px}.sb-dropdown{margin-bottom:8px}.placeholder select option:first-child{color:#999}.option-default{color:#333;font-weight:700;font-size:12px}.sb-dropdown select{background-color:#fff;padding:10px 20px;font-size:14px;width:100%;border:.5px solid #333}"]}]}],"members":{"disabled":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":15,"character":3}}]}],"options":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":16,"character":3}}]}],"label":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":17,"character":3}}]}],"placeHolder":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":18,"character":3}}]}],"isMultiple":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":19,"character":3}}]}],"context":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":20,"character":3}}]}],"formControlRef":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":21,"character":3}}]}],"default":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":22,"character":3}}]}],"contextData":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":23,"character":3}}]}],"dataLoadStatusDelegate":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":24,"character":3}}]}],"type":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":25,"character":3}}]}],"styleClass":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":26,"character":3}}]}],"onChangeFilter":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":27,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor"}],"ngOnChanges":[{"__symbolic":"method"}],"ngOnInit":[{"__symbolic":"method"}],"ngOnDestroy":[{"__symbolic":"method"}],"isOptionsArray":[{"__symbolic":"method"}],"isOptionsClosure":[{"__symbolic":"method"}],"isOptionsMap":[{"__symbolic":"method"}],"onChangeFacet":[{"__symbolic":"method"}]}},"ɵb":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":4,"character":1},"arguments":[{"selector":"sb-textbox","template":"<div class=\"sb-input\">\n  <label *ngIf=\"label\">{{label}}</label>\n  <div *ngIf=\"labelHtml\" [innerHTML]=\"labelHtml | transposeHtml\"></div>\n\n  <div [ngClass]=\"{'async-text': (asyncValidation && asyncValidation?.trigger), '': (!asyncValidation || !asyncValidation?.trigger)}\">\n    <div class=\"prefix\" *ngIf=\"prefix\">\n      <span>{{prefix}}</span>\n    </div>\n    <input [formControl]=\"formControlRef\" class=\"sb-textbox\" placeholder={{placeholder}} type=\"text\">\n    <div class=\"async-icons\" *ngIf=\"asyncValidation && asyncValidation?.trigger\">\n      <sb-green-tick *ngIf=\"formControlRef.value && formControlRef.status === 'VALID'\"></sb-green-tick>\n      <sb-red-exclamation *ngIf=\"formControlRef.value && formControlRef.status !== 'VALID'\"></sb-red-exclamation>\n      <sb-empty-circle *ngIf=\"!formControlRef.value\"></sb-empty-circle>\n    </div>\n  </div>\n  \n  <ng-container *ngFor=\"let validation of validations\">\n    <div class=\"cf-error\"\n      *ngIf=\"(validation.type && (validation.type).toLowerCase && validation.message && formControlRef.errors && formControlRef.errors[(validation.type).toLowerCase()] && (formControlRef.dirty || formControlRef.touched))\">\n      {{ validation.message }}\n    </div>\n  </ng-container>\n  \n  <ng-container *ngIf=\"asyncValidation?.trigger\">\n    <div class=\"async-validator\"\n      [hidden]=\"formControlRef.status === 'VALID' || formControlRef.status !== 'PENDING' || !formControlRef.value\">\n      <div class=\"cf-error\" *ngIf=\"asyncValidation?.message\">\n        {{ asyncValidation.message }}\n      </div>\n      <div class=\"async-container\">\n        <button class=\"async-btn\" #validationTrigger [attr.data-marker]=\"asyncValidation.marker\">\n          {{asyncValidation.trigger}}\n        </button>\n      </div>\n    </div>\n  </ng-container>\n\n</div>\n","styles":["label{display:block;font-size:1rem;margin:0}.sb-textbox{width:100%;padding:8px 16px;border:.5px solid #333;box-sizing:border-box}::-webkit-input-placeholder{padding:.25rem;opacity:.99;color:#999;font-family:\"Noto Sans\";font-size:12px;font-weight:700}::-moz-placeholder{padding:.25rem;opacity:.99;color:#999;font-family:\"Noto Sans\";font-size:12px;font-weight:700}:-ms-input-placeholder{padding:.25rem;opacity:.99;color:#999;font-family:\"Noto Sans\";font-size:12px;font-weight:700}::-ms-input-placeholder{padding:.25rem;opacity:.99;color:#999;font-family:\"Noto Sans\";font-size:12px;font-weight:700}::placeholder{padding:.25rem;opacity:.99;color:#999;font-family:\"Noto Sans\";font-size:12px;font-weight:700}.sb-input{margin:1rem 0}.cf-error{color:red;font-family:\"Noto Sans\";font-size:12px}.async-container{text-align:center}.async-btn{padding:12px 16px;background-color:#008840;color:#fff;border-radius:20px!important}.async-text{display:-webkit-box;display:flex;-webkit-box-align:center;align-items:center;border:.5px solid #333}.async-text>input{border:none}.normal-text>.async-icons>sb-empty-circle,.normal-text>.async-icons>sb-green-tick,.normal-text>.async-icons>sb-red-exclamation{display:none}.prefix{white-space:nowrap;padding:0 4px}.async-icons{margin:auto;padding:0 4px}"]}]}],"members":{"asyncValidation":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":10,"character":3}}]}],"label":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":11,"character":3}}]}],"labelHtml":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":12,"character":3}}]}],"placeholder":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":13,"character":3}}]}],"validations":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":14,"character":3}}]}],"formControlRef":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":15,"character":3}}]}],"prefix":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":16,"character":3}}]}],"validationTrigger":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild","line":17,"character":3},"arguments":["validationTrigger",{"static":false}]}]}],"__ctor__":[{"__symbolic":"constructor"}],"ngOnInit":[{"__symbolic":"method"}],"ngOnChanges":[{"__symbolic":"method"}],"ngAfterViewInit":[{"__symbolic":"method"}]}},"ɵc":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":6,"character":1},"arguments":[{"selector":"sb-textarea","template":"<div class=\"sb-textarea-container\">\n  <label>{{label}}</label>\n  <textarea class=\"sb-textarea\" [formControl]=\"formControlRef\" rows=\"5\" name=\"sb-textarea\" placeholder={{placeholder}}>\n  </textarea>\n  <div class=\"remaining-length\" *ngIf=\"remainderValidLength$\">\n     {{remainderValidLength$ | async}} Characters left\n  </div>\n</div>\n","styles":["label{display:block;padding:8px 0 0;font-size:14px}.sb-textarea{width:100%;padding:8px;box-sizing:border-box;border:1px solid #ccc;border-radius:.25rem;resize:vertical}.sb-textarea-container{margin-bottom:10px;position:relative}.remaining-length{position:absolute;bottom:.5rem;right:1rem;font-size:10px;color:#999}::-webkit-input-placeholder{padding:.25rem;color:#999;font-family:\"Noto Sans\";font-size:14px;letter-spacing:0;line-height:20px}::-moz-placeholder{padding:.25rem;color:#999;font-family:\"Noto Sans\";font-size:14px;letter-spacing:0;line-height:20px}:-ms-input-placeholder{padding:.25rem;color:#999;font-family:\"Noto Sans\";font-size:14px;letter-spacing:0;line-height:20px}::-ms-input-placeholder{padding:.25rem;color:#999;font-family:\"Noto Sans\";font-size:14px;letter-spacing:0;line-height:20px}::placeholder{padding:.25rem;color:#999;font-family:\"Noto Sans\";font-size:14px;letter-spacing:0;line-height:20px}"]}]}],"members":{"label":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":12,"character":3}}]}],"placeholder":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":13,"character":3}}]}],"formControlRef":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":14,"character":3}}]}],"config":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":15,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor"}],"ngOnInit":[{"__symbolic":"method"}]}},"ɵd":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":3,"character":1},"arguments":[{"selector":"sb-checkbox","template":"<div class=\"sb-checkbox\">\n    <div class=\"checkbox-row\">\n        <label class=\"container\">\n            <input type=\"checkbox\" [formControl]=\"formControlRef\" name=\"checkbox\" value=\"value\">\n            <span class=\"checkmark\"></span>\n        </label>\n        <label *ngIf=\"label\" class=\"checkbox-label\">{{label}}</label>\n        <label class=\"label-html\" *ngIf=\"labelHtml\">\n            <div [innerHTML]=\"labelHtml | transposeHtml\" (click)=\"handleLinkClick($event)\"></div>\n        </label>\n    </div>\n</div>","styles":["label{font-size:16px}.sb-checkbox{padding:0 0 0 8px}.container{position:relative;cursor:pointer;font-size:22px;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.container input{position:absolute;opacity:0;cursor:pointer;height:0;width:0}.container .checkmark{position:absolute;top:0;left:0;height:22px;width:22px;border:2px solid #000;border-radius:4px}.container input:checked~.checkmark{background-color:#2196f3}.checkmark:after{content:\"\";position:absolute;display:none}.container input:checked~.checkmark:after{display:block}.container .checkmark:after{left:7px;top:4px;width:5px;height:9px;border:solid #fff;border-width:0 3px 3px 0;-webkit-transform:rotate(45deg);transform:rotate(45deg)}.checkbox-label{padding:2px 0 0 32px}.checkbox-row{display:-ms-grid;display:grid;-ms-grid-columns:10% 90%;grid-template-columns:10% 90%;grid-gap:0}.label-html{font-size:14px}"]}]}],"members":{"label":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":9,"character":3}}]}],"code":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":10,"character":3}}]}],"value":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":11,"character":3}}]}],"formControlRef":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":12,"character":3}}]}],"labelHtml":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":13,"character":3}}]}],"clickedLink":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":14,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor"}],"ngOnInit":[{"__symbolic":"method"}],"handleLinkClick":[{"__symbolic":"method"}]}},"ɵe":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":18,"character":1},"arguments":[{"selector":"sb-form","template":"<div [formGroup]=\"formGroup\">\n  <ng-container *ngFor=\"let field of config; let index = i\">\n      <!-- <div *ngIf=\"field.type === FieldConfigInputType.SELECT && !field.templateOptions.multiple\" [hidden]=\"field.templateOptions?.hidden || null\">\n        <sb-dropdown [context]=\"field.context ? formGroup.get(field.context) : null \" [default]=\"field.default\"\n          [formControlRef]=\"formGroup.get(field.code)\" [label]=\"field.templateOptions.label\"\n          [dataLoadStatusDelegate]=\"dataLoadStatusDelegate\" [options]=\"field.templateOptions?.options\"\n          [disabled]=\"field.templateOptions?.disabled\" [placeHolder]=\"field?.templateOptions?.placeHolder\">\n        </sb-dropdown>\n      </div>\n    <div *ngIf=\"field.type === FieldConfigInputType.NESTED_SELECT\" [hidden]=\"field.templateOptions?.hidden || null\">\n      <sb-dropdown [context]=\"field.context ? formGroup.get(field.context) : null \" [default]=\"field.default\"\n        [formControlRef]=\"formGroup.get(field.code)\" [label]=\"field.templateOptions.label\"\n        [dataLoadStatusDelegate]=\"dataLoadStatusDelegate\" [options]=\"field.templateOptions?.options\"\n        [disabled]=\"field.templateOptions?.disabled\" [placeHolder]=\"field?.templateOptions?.placeHolder\">\n      </sb-dropdown>\n    </div> -->\n    <div *ngIf=\"field.type === FieldConfigInputType.SELECT || field.type === FieldConfigInputType.NESTED_SELECT\" [hidden]=\"field.templateOptions?.hidden || null\">\n      <sb-multiple-dropdown [context]=\"field.context ? formGroup.get(field.context) : null \" [default]=\"field.default\"\n        [formControlRef]=\"formGroup.get(field.code)\" [options]=\"field.templateOptions?.options\"\n        [label]=\"field.templateOptions.label\" [dataLoadStatusDelegate]=\"dataLoadStatusDelegate\"\n        [disabled]=\"field.templateOptions?.disabled\" [placeHolder]=\"field?.templateOptions?.placeHolder\" \n        [isMultiple]=\"field.templateOptions.multiple\" [labelHtml]=\"field.templateOptions.labelHtml\">\n      </sb-multiple-dropdown>\n    </div>\n    <div *ngIf=\"field.type === FieldConfigInputType.INPUT\" [hidden]=\"field.templateOptions?.hidden || null\">\n      <sb-textbox [formControlRef]=\"formGroup.get(field.code)\" [asyncValidation]=\"field.asyncValidation\" [label]=\"field.templateOptions.label\"\n        [placeholder]=\"field.templateOptions.placeHolder\" [validations]=\"field.validations\" [prefix]=\"field.templateOptions.prefix\"\n        [labelHtml]=\"field.templateOptions.labelHtml\">\n      </sb-textbox>\n    </div>\n    <div *ngIf=\"field.type === FieldConfigInputType.TEXTAREA\" [hidden]=\"field.templateOptions?.hidden || null\">\n      <sb-textarea [config]=\"field\" [formControlRef]=\"formGroup.get(field.code)\" [label]=\"field.templateOptions.label\"\n        [placeholder]=\"field.templateOptions.placeHolder\">\n      </sb-textarea>\n    </div>\n    <div *ngIf=\"field.type === FieldConfigInputType.CHECKBOX\" [hidden]=\"field.templateOptions?.hidden || null\">\n      <sb-checkbox [code]=\"field.code\" [formControlRef]=\"formGroup.get(field.code)\"\n        [label]=\"field.templateOptions.label\" [labelHtml]=\"field.templateOptions.labelHtml\" [value]=\"field.default\"\n        (clickedLink)=\"clickedLink($event)\"></sb-checkbox>\n    </div>\n    <div *ngIf=\"asyncValidatorFactory && field.asyncValidation?.trigger\">\n      <button #validationTrigger [attr.data-marker]=\"field.asyncValidation.marker\">\n        {{field.asyncValidation.trigger}}\n      </button>\n    </div>\n    <ng-container *ngIf=\"formGroup.get(field.code) as ref\">\n      <div *ngIf=\"field.type === FieldConfigInputType.NESTED_SELECT && ref && ref.value && field.children && field.children[ref.value]\">\n        <sb-form (initialize)=\"onNestedFormInitialize($event, field)\" (finalize)=\"onNestedFormFinalize($event, field)\"\n          [dataLoadStatusDelegate]=\"dataLoadStatusDelegate\" [config]=\"field.children[ref.value]\"></sb-form>\n      </div>\n\n      <div *ngIf=\"field.type === FieldConfigInputType.NESTED_GROUP && field.children\">\n        <sb-form (initialize)=\"onNestedFormInitialize($event, field)\" (finalize)=\"onNestedFormFinalize($event, field)\"\n          [dataLoadStatusDelegate]=\"dataLoadStatusDelegate\" [config]=\"field.children\"></sb-form>\n      </div>\n    </ng-container>\n\n    <ng-container *ngIf=\"field.type === FieldConfigInputType.LABEL\">\n      <label *ngIf=\"field.templateOptions?.label\">{{field.templateOptions?.label}}</label>\n      <div *ngIf=\"field.templateOptions?.labelHtml\" [innerHTML]=\"field.templateOptions?.labelHtml | transposeHtml\"></div>\n    </ng-container>\n    \n  </ng-container>\n</div>","styles":[""]}]}],"members":{"initialize":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":24,"character":3}}]}],"finalize":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":25,"character":3}}]}],"linkClicked":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":26,"character":3}}]}],"valueChanges":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":27,"character":3}}]}],"statusChanges":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":28,"character":3}}]}],"platform":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":29,"character":3}}]}],"dataLoadStatus":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":30,"character":3}}]}],"config":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":31,"character":3}}]}],"dataLoadStatusDelegate":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":32,"character":3}}]}],"asyncValidatorFactory":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":33,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/forms","name":"FormBuilder","line":44,"character":25}]}],"ngOnDestroy":[{"__symbolic":"method"}],"ngOnInit":[{"__symbolic":"method"}],"ngOnChanges":[{"__symbolic":"method"}],"onNestedFormFinalize":[{"__symbolic":"method"}],"onNestedFormInitialize":[{"__symbolic":"method"}],"initializeForm":[{"__symbolic":"method"}],"prepareFormValidationData":[{"__symbolic":"method"}],"clickedLink":[{"__symbolic":"method"}]}},"ɵf":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":2,"character":1},"arguments":[{"selector":"sb-option-group","changeDetection":{"__symbolic":"select","expression":{"__symbolic":"reference","module":"@angular/core","name":"ChangeDetectionStrategy","line":6,"character":19},"member":"OnPush"},"template":"<p>\n  option-group works!\n</p>\n","styles":[""]}]}],"members":{"__ctor__":[{"__symbolic":"constructor"}],"ngOnInit":[{"__symbolic":"method"}]}},"ɵg":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":2,"character":1},"arguments":[{"selector":"sb-icon-dropdown","template":"<svg width=\"14px\" height=\"8px\" viewBox=\"0 0 14 8\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n    <!-- Generator: sketchtool 63.1 (101010) - https://sketch.com -->\n    <title>BE94B3C8-E695-41FA-A0FC-2CE95714B444@1.5x</title>\n    <desc>Created with sketchtool.</desc>\n    <g id=\"Schooling-@-home\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\n        <g id=\"My-classes-Copy\" transform=\"translate(-316.000000, -248.000000)\" fill=\"#333333\">\n            <g id=\"Group\" transform=\"translate(16.000000, 205.000000)\">\n                <polygon id=\"Path\" transform=\"translate(306.894756, 47.000000) rotate(-270.000000) translate(-306.894756, -47.000000) \" points=\"304.599756 40.7073171 303.189756 42.1860976 307.769756 47 303.189756 51.8139024 304.599756 53.2926829 310.599756 47\"></polygon>\n            </g>\n        </g>\n    </g>\n</svg>\n","styles":[""]}]}],"members":{"__ctor__":[{"__symbolic":"constructor"}],"ngOnInit":[{"__symbolic":"method"}]}},"ɵh":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":8,"character":1},"arguments":[{"selector":"sb-multiple-dropdown","changeDetection":{"__symbolic":"select","expression":{"__symbolic":"reference","module":"@angular/core","name":"ChangeDetectionStrategy","line":12,"character":19},"member":"OnPush"},"template":"<div class=\"multi-select-section\">\n  <label class=\"input-label\" *ngIf=\"label\">{{label}}</label>\n  <div *ngIf=\"labelHtml\" [innerHTML]=\"labelHtml | transposeHtml\"></div>\n  <div class=\"multi-select-container\">\n    <sb-caret-down class=\"caret-down\"\n      [attr.disabled]=\"disabled ? true : ( context ? (context.invalid ? true : null) : null )\" (click)=\"openModal()\">\n    </sb-caret-down>\n    <div class=\"list-border\" (click)=\"openModal()\">\n      <ul [attr.disabled]=\"disabled ? true : ( context ? (context.invalid ? true : null) : null )\">\n        <ng-container *ngIf=\"isMultiple\">\n          <li *ngIf=\"!formControlRef.value || !formControlRef.value.length\" class=\"placeholder\">{{placeHolder}}</li>\n\n          <ng-container *ngIf=\"formControlRef.value?.length\">\n            <span *ngFor=\"let value of formControlRef.value; let index=index\">\n              {{optionValueToOptionLabelMap.get(fromJS(value))}}<span\n            *ngIf=\"index < formControlRef.value.length - 1\">, </span>\n            </span>\n          </ng-container>\n        </ng-container>\n\n        <ng-container *ngIf=\"!isMultiple\">\n          <li *ngIf=\"!formControlRef.value\" class=\"placeholder\">{{placeHolder}}</li>\n\n          <span *ngIf=\"formControlRef.value\">{{optionValueToOptionLabelMap.get(fromJS(formControlRef.value))}}</span>\n        </ng-container>\n      </ul>\n    </div>\n    <div class=\"sb-modal-container\" [hidden]=\"!showModal\" (click)=\"showModal=false;\">\n      <div class=\"sb-modal-overlay\">\n        <div class=\"sb-modal\" (click)=\"$event.stopPropagation()\">\n          <div class=\"header\">\n            {{placeHolder}}\n          </div>\n          <div class=\"body\">\n            <ul>\n              <li *ngFor=\"let option of resolvedOptions; let i=index\">\n                <div (click)=\"addSelected(option)\" class=\"row\">\n                  <label class=\"container\" style=\"pointer-events: none\">\n                    <input [checked]=\"tempValue.includes(option.get('value'))\" class=\"sb-checkbox\" type=\"checkbox\">\n                    <span class=\"checkmark\"></span>\n                  </label>\n                  <span>{{option.get('label')}}</span>\n                </div>\n              </li>\n            </ul>\n          </div>\n          <div class=\"footer\">\n            <div class=\"sb-form-button\">\n              <button class=\"sb-btn-primary-outline\" (click)=\"onCancel()\">cancel</button>\n            </div>\n            <div class=\"sb-form-button\">\n              <button class=\"sb-btn-primary\" (click)=\"onSubmit()\">submit</button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>","styles":[".multi-select-section{margin:1rem 0}label{font-size:1rem;margin:0}.multi-select-container{position:relative;margin-bottom:8px}.multi-select-container .caret-down{position:absolute;top:11px;right:19px;z-index:0}.multi-select-container .list-border .placeholder{font-size:12px;font-weight:700;margin-left:12px;color:var(--gray-100)}.multi-select-container .list-border ul[disabled]{opacity:.3;pointer-events:none}.multi-select-container .list-border ul{list-style-type:none;margin-top:3px;margin-left:8px;position:absolute;top:0;left:0}.multi-select-container .list-border{border:.5px solid var(--gray-400);padding:1.3rem;cursor:pointer}.multi-select-container .list-border li{float:left;font-size:12px;font-weight:700;margin-left:4px}.multi-select-container .dropdown li{cursor:pointer;padding:8px;border:1px solid var(--white)}.multi-select-container .dropdown ul{list-style-type:none;margin:0;padding:0}.multi-select-container .row{display:-ms-grid;display:grid;-ms-grid-columns:1fr 10fr;grid-template-columns:1fr 10fr;grid-gap:0}.multi-select-container .footer{display:-ms-grid;display:grid;-ms-grid-columns:1fr 1fr;grid-template-columns:1fr 1fr;grid-gap:0;padding-left:8px;padding-bottom:8px;padding-top:8px}.multi-select-container .sb-modal-container{position:fixed;height:100vh;overflow:hidden;width:100%;left:0;top:0;right:0;z-index:10}.multi-select-container .sb-modal-overlay{position:absolute;width:100%;height:100%;top:0;background:rgba(0,0,0,.6);left:0;z-index:10}.multi-select-container .fa .fa-close{float:right}.multi-select-container .sb-modal{display:block;position:absolute;bottom:0;width:100%;--border-top:0.5px solid var(--white);z-index:11;background:var(--white)}.multi-select-container .sb-modal ul{list-style-type:none}.multi-select-container .sb-modal li{cursor:pointer;padding-bottom:8px;padding-top:8px;padding-left:16px}.value-label{width:270px;white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.multi-select-container .sb-forms-radio{margin-top:6px}.multi-select-container .sb-form-button{display:inline;padding:10px}.multi-select-container .sb-btn-primary-outline{color:var(--primary-color);background-color:transparent;border:.5px solid var(--primary-color);border-radius:4px;padding:10px 40px;font-size:16px;text-transform:uppercase;width:100%}.multi-select-container .sb-btn-primary{color:var(--white);background-color:var(--primary-color);border:.5px solid var(--primary-color);border-radius:4px;padding:10px 40px;font-size:16px;text-transform:uppercase;width:100%}.multi-select-container .header{padding:16px;margin-left:8px;font-weight:700}.multi-select-container .body{padding-top:8px;border-bottom:.5px solid var(--gray-100);border-top:.5px solid var(--gray-100);max-height:300px;overflow:scroll}.list-with-ellipsis:nth-child(3){float:left;font-size:12px;font-weight:700;margin-left:4px;width:50px;white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.list-with-ellipsis:nth-child(n+4){visibility:hidden}.multi-select-container .container{display:block;position:relative;padding-left:35px;margin-bottom:12px;cursor:pointer;font-size:22px;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.container input{position:absolute;opacity:0;cursor:pointer;height:0;width:0}.checkmark{position:absolute;top:3px;left:0;height:15px;width:15px;border:.4px solid var(--black)}.container:hover input~.checkmark{background-color:var(--white)}.container input:checked~.checkmark{background-color:var(--primary-600)}.checkmark:after{content:\"\";position:absolute;display:none}.container input:checked~.checkmark:after{display:block}.container .checkmark:after{left:5px;top:0;width:5px;height:10px;border:solid var(--white);border-width:0 2px 2px 0;-webkit-transform:rotate(45deg);transform:rotate(45deg)}"]}]}],"members":{"disabled":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":15,"character":3}}]}],"options":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":16,"character":3}}]}],"label":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":17,"character":3}}]}],"labelHtml":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":18,"character":3}}]}],"placeHolder":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":19,"character":3}}]}],"isMultiple":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":20,"character":3}}]}],"context":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":21,"character":3}}]}],"formControlRef":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":22,"character":3}}]}],"default":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":23,"character":3}}]}],"contextData":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":24,"character":3}}]}],"dataLoadStatusDelegate":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":25,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/core","name":"ChangeDetectorRef","line":36,"character":32}]}],"ngOnInit":[{"__symbolic":"method"}],"ngOnChanges":[{"__symbolic":"method"}],"onSubmit":[{"__symbolic":"method"}],"openModal":[{"__symbolic":"method"}],"addSelected":[{"__symbolic":"method"}],"onCancel":[{"__symbolic":"method"}],"ngOnDestroy":[{"__symbolic":"method"}],"isOptionsArray":[{"__symbolic":"method"}],"isOptionsClosure":[{"__symbolic":"method"}],"isOptionsMap":[{"__symbolic":"method"}],"setTempValue":[{"__symbolic":"method"}],"setupOptions":[{"__symbolic":"method"}]}},"ɵi":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":2,"character":1},"arguments":[{"selector":"sb-caret-down","template":"<!-- Generator: Adobe Illustrator 16.0.0, SVG Export Plug-In . SVG Version: 6.00 Build 0)  -->\n<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\" \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\n<svg version=\"1.1\" id=\"Capa_1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\n\t width=\"12px\" height=\"12px\" viewBox=\"0 0 451.847 451.847\" style=\"enable-background:new 0 0 451.847 451.847;\"\n\t xml:space=\"preserve\">\n<g>\n\t<path d=\"M225.923,354.706c-8.098,0-16.195-3.092-22.369-9.263L9.27,151.157c-12.359-12.359-12.359-32.397,0-44.751\n\t\tc12.354-12.354,32.388-12.354,44.748,0l171.905,171.915l171.906-171.909c12.359-12.354,32.391-12.354,44.744,0\n\t\tc12.365,12.354,12.365,32.392,0,44.751L248.292,345.449C242.115,351.621,234.018,354.706,225.923,354.706z\"/>\n</g>\n<g>\n</g>\n<g>\n</g>\n<g>\n</g>\n<g>\n</g>\n<g>\n</g>\n<g>\n</g>\n<g>\n</g>\n<g>\n</g>\n<g>\n</g>\n<g>\n</g>\n<g>\n</g>\n<g>\n</g>\n<g>\n</g>\n<g>\n</g>\n<g>\n</g>\n</svg>\n","styles":[""]}]}],"members":{"__ctor__":[{"__symbolic":"constructor"}],"ngOnInit":[{"__symbolic":"method"}]}},"ɵj":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":2,"character":1},"arguments":[{"selector":"sb-red-exclamation","template":"<svg width=\"24px\" height=\"24px\" viewBox=\"0 0 24 24\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" style=\"padding-top:4px\">\n    <title>F7461929-9D59-4C06-97CD-845F9C506BE5</title>\n    <g id=\"Profile-Page\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\n        <g id=\"Self-Declaration-Teacher-04-.1\" transform=\"translate(-304.000000, -325.000000)\" fill-rule=\"nonzero\">\n            <g id=\"Group-3-Copy-6\" transform=\"translate(16.000000, 290.000000)\">\n                <g id=\"Red\" transform=\"translate(288.000000, 35.000000)\">\n                    <path d=\"M12,0 C18.627417,0 24,5.372583 24,12 C24,18.627417 18.627417,24 12,24 C5.372583,24 0,18.627417 0,12 C0,5.372583 5.372583,0 12,0 Z\" id=\"Oval\" fill=\"#E55A28\"></path>\n                    <path d=\"M13,8.66891892 L13,7 L11,7 L11,8.66891892 L13,8.66891892 Z M13,17.3378378 L13,9.91891892 L11,9.91891892 L11,17.3378378 L13,17.3378378 Z\" id=\"i\" fill=\"#FFFFFF\" transform=\"translate(12.000000, 12.168919) rotate(-180.000000) translate(-12.000000, -12.168919) \"></path>\n                </g>\n            </g>\n        </g>\n    </g>\n</svg>","styles":[""]}]}],"members":{"__ctor__":[{"__symbolic":"constructor"}],"ngOnInit":[{"__symbolic":"method"}]}},"ɵk":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":2,"character":1},"arguments":[{"selector":"sb-green-tick","template":"<svg width=\"24px\" height=\"24px\" viewBox=\"0 0 24 24\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" style=\"padding-top:4px\">\n    <title>8B4CB432-FD76-4469-94B8-BCC3D605009F</title>\n    <g id=\"Profile-Page\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\n        <g id=\"Self-Declaration-Teacher-04.4\" transform=\"translate(-304.000000, -325.000000)\" fill-rule=\"nonzero\">\n            <g id=\"Group-3-Copy-6\" transform=\"translate(16.000000, 290.000000)\">\n                <g id=\"Green\" transform=\"translate(288.000000, 35.000000)\">\n                    <path d=\"M12,0 C18.627417,0 24,5.372583 24,12 C24,18.627417 18.627417,24 12,24 C5.372583,24 0,18.627417 0,12 C0,5.372583 5.372583,0 12,0 Z\" id=\"Oval\" fill=\"#008840\"></path>\n                    <path d=\"M12,2 C6.4771525,2 2,6.4771525 2,12 C2,17.5228475 6.4771525,22 12,22 C17.5228475,22 22,17.5228475 22,12 C22,6.4771525 17.5228475,2 12,2 Z\" id=\"Path\" fill=\"#008840\"></path>\n                    <polygon id=\"Path\" fill=\"#FFFFFF\" points=\"16.59 7 10 13.9957537 7.41 11.2569002 6 12.7537155 10 17 18 8.507431\"></polygon>\n                </g>\n            </g>\n        </g>\n    </g>\n</svg>","styles":[""]}]}],"members":{"__ctor__":[{"__symbolic":"constructor"}],"ngOnInit":[{"__symbolic":"method"}]}},"ɵl":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":2,"character":1},"arguments":[{"selector":"sb-empty-circle","template":"<svg width=\"24px\" height=\"24px\" viewBox=\"0 0 24 24\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" style=\"padding-top:4px\">\n    <title>0A5AE039-B21E-4EB7-98C2-533D33CCFEB7</title>\n    <g id=\"Profile-Page\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\n        <g id=\"Self-Declaration-Teacher-04\" transform=\"translate(-304.000000, -325.000000)\" stroke=\"#CCCCCC\" stroke-width=\"2\">\n            <g id=\"Group-3-Copy-6\" transform=\"translate(16.000000, 290.000000)\">\n                <circle id=\"Oval\" cx=\"300\" cy=\"47\" r=\"11\"></circle>\n            </g>\n        </g>\n    </g>\n</svg>","styles":[""]}]}],"members":{"__ctor__":[{"__symbolic":"constructor"}],"ngOnInit":[{"__symbolic":"method"}]}},"ɵm":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":5,"character":1},"arguments":[{"selector":"sb-filters","template":"<div *ngIf=\"type === FilterType.FACET\">\n  <div *ngFor=\"let facet of formattedFacets\">\n\n    <!-- Start of Dropdown -->\n    <sb-dropdown *ngIf=\"facet.type === 'dropdown'\" [type]=\"type\" [label]=\"facet.label\" [options]=\"facet\"\n      [placeHolder]=\"facet.placeHolder\" [default]=\"facet.default\" [styleClass]=\"styleClass\"\n      (onChangeFilter)=\"selectedFilter.emit($event)\">\n    </sb-dropdown>\n    <!-- End of Dropdown -->\n\n    <!-- Start of pills -->\n    <div *ngIf=\"facet.type === 'pills'\">\n      <sb-pills [label]=\"facet.label\" [options]=\"facet\" [styleClass]=\"styleClass\"\n        (onChangeFilter)=\"selectedFilter.emit($event)\"></sb-pills>\n    </div>\n    <!-- End of pills -->\n\n  </div>\n</div>","styles":[""]}]}],"members":{"type":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":12,"character":3}}]}],"facets":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":13,"character":3}}]}],"config":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":14,"character":3}}]}],"styleClass":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":15,"character":3}}]}],"selectedFilter":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":16,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor"}],"ngOnInit":[{"__symbolic":"method"}],"formatFacets":[{"__symbolic":"method"}]}},"ɵn":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":2,"character":1},"arguments":[{"selector":"sb-pills","template":"<div class=\"sbt-class-bar\">\n  <label>{{label}}</label>\n  <div class=\"sb-slider-pills-container\">\n    <div class=\"sb-pills-container sb-grade-pills-container\" id=\"gradeScroll\">\n      <div class=\"pill rounded\" *ngFor=\"let facet of options.data; let i = index;\" [ngClass]=\"((options.default === facet.value ? 'active' : '')  + ' ' + styleClass)\"\n      attr.id=\"class{{i}}\" (click)=\"onChangeFacet(facet)\">\n      {{facet.value}}\n      </div>\n    </div>\n  </div>\n</div>\n","styles":[".sbt-class-bar .sb-slider-pills-container{overflow-x:inherit!important}.sbt-class-bar .sb-slider-pills-container .sb-grade-pills-container{background:inherit!important;padding-top:0!important}.sbt-class-bar .sb-slider-pills-container .sb-pills-container{display:-webkit-box!important;display:flex!important;flex-wrap:wrap;-webkit-box-pack:start;justify-content:flex-start;margin:0 -8px 0 0}html[dir=rtl] .sbt-class-bar .sb-slider-pills-container .sb-pills-container{margin:0 0 0 -8px!important}.sbt-class-bar .sb-slider-pills-container .sb-pills-container .pill{padding:8px 16px!important;color:#fff!important;margin:0 8px 8px 0!important;background-color:#07f;font-size:12px!important;display:unset!important;width:100px;flex-basis:100px;-webkit-box-flex:1;flex-grow:1}html[dir=rtl] .sbt-class-bar .sb-slider-pills-container .sb-pills-container .pill{margin:0 0 8px 8px!important}.sbt-class-bar .sb-slider-pills-container .sb-pills-container .pill.active,.sbt-class-bar .sb-slider-pills-container .sb-pills-container .pill:hover{color:#fff!important;background-color:#0076fe!important;box-shadow:rgba(0,0,0,.1) 3px 3px 2px 0}.sb-slider-pills-container{overflow-x:auto}.sb-slider-pills-container .sb-pills-container{display:-webkit-inline-box;display:inline-flex;-webkit-box-align:center;align-items:center;box-sizing:border-box}.sb-slider-pills-container .sb-pills-container .pill{background-color:#fff;white-space:nowrap;-webkit-appearance:none;text-overflow:ellipsis;min-height:32px;cursor:pointer;-webkit-transition:.25s ease-in-out;transition:.25s ease-in-out;border-radius:2px;text-transform:capitalize;text-decoration:none;text-align:center;font-weight:400;font-style:normal;font-stretch:normal;font-size:12px;box-sizing:border-box;display:-webkit-box;display:flex;-webkit-box-align:center;align-items:center;line-height:16px}.sb-slider-pills-container .sb-medium-pills-container{min-height:64px;background:#fff;min-width:100%}.sb-slider-pills-container .sb-medium-pills-container .pill{border:1px solid #008840;color:#008840}.sb-slider-pills-container .sb-medium-pills-container .pill.active,.sb-slider-pills-container .sb-medium-pills-container .pill:active,.sb-slider-pills-container .sb-medium-pills-container .pill:hover{color:#fff;background-color:#008840;box-shadow:0 3px 4px 0 rgba(0,0,0,)}.sb-slider-pills-container .sb-grade-pills-container{min-height:48px;min-width:100%}.sb-slider-pills-container .sb-grade-pills-container .pill{border-radius:16px;color:#024f9d;min-height:32px}.sb-slider-pills-container .sb-grade-pills-container .pill.active,.sb-slider-pills-container .sb-grade-pills-container .pill:active,.sb-slider-pills-container .sb-grade-pills-container .pill:hover{background-color:#024f9d;color:#fff;box-shadow:0 3px 4px 0 rgba(0,0,0,)}.sb-slider-pills-container .sb-grade-pills-container .pill.active .icon-svg svg,.sb-slider-pills-container .sb-grade-pills-container .pill:active .icon-svg svg,.sb-slider-pills-container .sb-grade-pills-container .pill:hover .icon-svg svg{fill:#fff}.sb-slider-pills-container .sb-grade-pills-container .pill.rounded{font-size:14px}.sb-slider-pills-container .sb-grade-pills-container .pill.rounded-with-icon .icon-svg{margin-right:4px;top:0}html[dir=rtl] .sb-slider-pills-container .sb-grade-pills-container .pill.rounded-with-icon .icon-svg{margin-left:4px;margin-right:inherit}.sb-slider-pills-container .sb-grade-pills-container .pill.rounded-with-icon .name{-ms-grid-row-align:center;align-self:center;display:inline-block;line-height:16px}"]}]}],"members":{"options":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":8,"character":3}}]}],"label":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":9,"character":3}}]}],"styleClass":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":10,"character":3}}]}],"onChangeFilter":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":11,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor"}],"ngOnInit":[{"__symbolic":"method"}],"onChangeFacet":[{"__symbolic":"method"}]}},"ɵo":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":8,"character":1},"arguments":[{"selector":"sb-dynamic-form","template":"\n<div class=\"dynamic-form\" [formGroup]=\"formGroup\">\n  <div *ngFor=\"let section of config\" class=\"formSection grid two-column-grid\">\n      <ng-container *ngFor=\"let field of section['fields']\" sbDynamicField\n      [depends]=\"getAllDependsFormControl(field.code, field.depends)\" [dependencyTerms]=\"field.depends ? fetchDependencyTerms(field.code, field.depends) : []\"\n      [context]=\"field.context ? formGroup.get(field.context) : null\" [contextTerms]=\"fetchContextTerms(config, field.context)\"\n      [options]=\"field.terms\" [field]=\"field\" [formGroup]=\"formGroup\" [default]=\"field.default || ''\" [label]=\"field.label\" [formControlRef]=\"formGroup.get(field.code)\"\n      [dataLoadStatusDelegate]=\"dataLoadStatusDelegate\" [placeholder]=\"field.placeholder || ''\" [validations]=\"field.validations || []\"\n      [disabled]=\"field.editable === true ? false : true\">\n    </ng-container>\n  </div>\n</div>\n\n","styles":[""]}]}],"members":{"config":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":14,"character":3}}]}],"initialize":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":15,"character":3}}]}],"finalize":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":16,"character":3}}]}],"dataLoadStatusDelegate":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":18,"character":3}}]}],"valueChanges":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":20,"character":3}}]}],"statusChanges":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":21,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/forms","name":"FormBuilder","line":36,"character":25}]}],"ngOnInit":[{"__symbolic":"method"}],"ngOnChanges":[{"__symbolic":"method"}],"ngOnDestroy":[{"__symbolic":"method"}],"getFormValidationErrors":[{"__symbolic":"method"}],"prepareFormValidationData":[{"__symbolic":"method"}],"fetchContextTerms":[{"__symbolic":"method"}],"getAllDependsFormControl":[{"__symbolic":"method"}],"fetchDependencyTerms":[{"__symbolic":"method"}],"getAppIcon":[{"__symbolic":"method"}],"groupBySection":[{"__symbolic":"method"}],"getFlattenedSectionFields":[{"__symbolic":"method"}]}},"ɵp":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":4,"character":1},"arguments":[{"selector":"sb-dynamic-textbox","template":"<div class=\"sb-input\">\n  <label *ngIf=\"label\">{{label}}</label>\n  <!-- <div *ngIf=\"labelHtml\" [innerHTML]=\"labelHtml | transposeHtml\"></div> -->\n\n  <div [ngClass]=\"{'async-text': (asyncValidation && asyncValidation?.trigger), '': (!asyncValidation || !asyncValidation?.trigger)}\">\n    <div class=\"prefix\" *ngIf=\"prefix\">\n      <span>{{prefix}}</span>\n    </div>\n    <input [formControl]=\"formControlRef\" [class.valid]=\"formControlRef.valid &&\n    (formControlRef.dirty || formControlRef.touched)\"\n[class.invalid]=\"formControlRef.invalid &&\n(formControlRef.dirty || formControlRef.touched)\" class=\"sb-textbox {{disabled}}\" placeholder={{placeholder}} type=\"text\"\n[attr.disabled]=\"disabled ? true : null\">\n    <div class=\"async-icons\" *ngIf=\"asyncValidation && asyncValidation?.trigger\">\n      <!-- <sb-green-tick *ngIf=\"formControlRef.value && formControlRef.status === 'VALID'\"></sb-green-tick> -->\n      <!-- <sb-red-exclamation *ngIf=\"formControlRef.value && formControlRef.status !== 'VALID'\"></sb-red-exclamation> -->\n      <!-- <sb-empty-circle *ngIf=\"!formControlRef.value\"></sb-empty-circle> -->\n    </div>\n  </div>\n\n  <ng-container *ngFor=\"let validation of validations\">\n    <div class=\"cf-error\"\n      *ngIf=\"(validation.type && (validation.type).toLowerCase() && validation.message && formControlRef.errors && formControlRef.errors[(validation.type).toLowerCase()] && (formControlRef.dirty || formControlRef.touched))\">\n      {{ validation.message }}\n    </div>\n  </ng-container>\n\n  <ng-container *ngIf=\"asyncValidation?.trigger\">\n    <div class=\"async-validator\"\n      [hidden]=\"formControlRef.status === 'VALID' || formControlRef.status !== 'PENDING' || !formControlRef.value\">\n      <div class=\"cf-error\" *ngIf=\"asyncValidation?.message\">\n        {{ asyncValidation.message }}\n      </div>\n      <div class=\"async-container\">\n        <button class=\"async-btn\" #validationTrigger [attr.data-marker]=\"asyncValidation.marker\">\n          {{asyncValidation.trigger}}\n        </button>\n      </div>\n    </div>\n  </ng-container>\n\n</div>\n","styles":["label{display:block;font-size:1rem;margin:0}.sb-textbox{width:100%;padding:8px 16px;border:.5px solid #333;box-sizing:border-box}::-webkit-input-placeholder{padding:.25rem;opacity:.99;color:#999;font-family:\"Noto Sans\";font-size:12px;font-weight:700}::-moz-placeholder{padding:.25rem;opacity:.99;color:#999;font-family:\"Noto Sans\";font-size:12px;font-weight:700}:-ms-input-placeholder{padding:.25rem;opacity:.99;color:#999;font-family:\"Noto Sans\";font-size:12px;font-weight:700}::-ms-input-placeholder{padding:.25rem;opacity:.99;color:#999;font-family:\"Noto Sans\";font-size:12px;font-weight:700}::placeholder{padding:.25rem;opacity:.99;color:#999;font-family:\"Noto Sans\";font-size:12px;font-weight:700}.sb-input{margin:1rem 0}.cf-error{color:red;font-family:\"Noto Sans\";font-size:12px}.async-container{text-align:center}.async-btn{padding:12px 16px;background-color:#008840;color:#fff;border-radius:20px!important}.async-text{display:-webkit-box;display:flex;-webkit-box-align:center;align-items:center;border:.5px solid #333}.async-text>input{border:none}.normal-text>.async-icons>sb-empty-circle,.normal-text>.async-icons>sb-green-tick,.normal-text>.async-icons>sb-red-exclamation{display:none}.prefix{white-space:nowrap;padding:0 4px}.async-icons{margin:auto;padding:0 4px}"]}]}],"members":{"asyncValidation":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":11,"character":3}}]}],"label":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":12,"character":3}}]}],"labelHtml":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":13,"character":3}}]}],"placeholder":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":14,"character":3}}]}],"validations":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":15,"character":3}}]}],"formControlRef":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":16,"character":3}}]}],"prefix":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":17,"character":3}}]}],"default":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":18,"character":3}}]}],"disabled":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":19,"character":3}}]}],"validationTrigger":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild","line":20,"character":3},"arguments":["validationTrigger",{"static":false}]}]}],"__ctor__":[{"__symbolic":"constructor"}],"ngOnInit":[{"__symbolic":"method"}],"ngOnChanges":[{"__symbolic":"method"}],"ngAfterViewInit":[{"__symbolic":"method"}]}},"ɵq":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":6,"character":1},"arguments":[{"selector":"sb-dynamic-textarea","template":"<div class=\"sb-textarea-container\">\n  <label>{{label}}</label>\n  <textarea class=\"sb-textarea\" [formControl]=\"formControlRef\" rows=\"5\" name=\"sb-textarea\" placeholder={{placeholder}} [attr.disabled]=\"disabled ? true : null\">\n  </textarea>\n  <div class=\"remaining-length\" *ngIf=\"remainderValidLength$\">\n     {{remainderValidLength$ | async}} Characters left\n  </div>\n  <ng-container *ngFor=\"let validation of validations\">\n    <div class=\"cf-error\"\n      *ngIf=\"(validation.type && (validation.type).toLowerCase() && validation.message && formControlRef.errors && formControlRef.errors[(validation.type).toLowerCase()] && (formControlRef.dirty || formControlRef.touched))\">\n      {{ validation.message }}\n    </div>\n  </ng-container>\n</div>\n","styles":["label{display:block;padding:8px 0 0;font-size:14px}.sb-textarea{width:100%;padding:8px;box-sizing:border-box;border:1px solid #ccc;border-radius:.25rem;resize:vertical}.sb-textarea-container{margin-bottom:10px;position:relative}.remaining-length{position:absolute;bottom:.5rem;right:1rem;font-size:10px;color:#999}::-webkit-input-placeholder{padding:.25rem;color:#999;font-family:\"Noto Sans\";font-size:14px;letter-spacing:0;line-height:20px}::-moz-placeholder{padding:.25rem;color:#999;font-family:\"Noto Sans\";font-size:14px;letter-spacing:0;line-height:20px}:-ms-input-placeholder{padding:.25rem;color:#999;font-family:\"Noto Sans\";font-size:14px;letter-spacing:0;line-height:20px}::-ms-input-placeholder{padding:.25rem;color:#999;font-family:\"Noto Sans\";font-size:14px;letter-spacing:0;line-height:20px}::placeholder{padding:.25rem;color:#999;font-family:\"Noto Sans\";font-size:14px;letter-spacing:0;line-height:20px}.cf-error{color:red;font-family:\"Noto Sans\";font-size:12px}"]}]}],"members":{"label":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":13,"character":3}}]}],"placeholder":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":14,"character":3}}]}],"formControlRef":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":15,"character":3}}]}],"field":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":16,"character":3}}]}],"validations":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":17,"character":3}}]}],"default":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":18,"character":3}}]}],"disabled":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":19,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor"}],"ngOnInit":[{"__symbolic":"method"}]}},"ɵr":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":8,"character":1},"arguments":[{"selector":"sb-dynamic-dropdown","template":"<div class=\"sb-dropdown\" *ngIf=\"!type\">\n  <label>{{label}} {{context && 'has context'}}  {{context ?  field.context : '' }}</label>\n  <ng-container *ngIf=\"options\">\n    <div class=\"dropdown-container\">\n      <sb-icon-dropdown class=\"dropdown-icon\"></sb-icon-dropdown>\n      <!-- [attr.disabled]=\"disabled ? true : ( context ? (context.invalid ? true : null) : null )\" -->\n      <select [formControl]=\"formControlRef\"\n              [attr.disabled]=\"disabled ? true : ( depends ? (isDependsInvalid ? true : null) : null )\"\n              [compareWith]=\"ValueComparator.valueComparator\" class=\"sb-dropdown-select\" id=\"sb-dropdown\"\n              name=\"sb-dropdown\">\n        <option [defaultSelected]=\"!default\" [ngValue]=\"null\" disabled>{{placeholder}}\n        </option>\n        <ng-container *ngIf=\"field.range && isOptionsArrayMap(field.range) && !field.association\">\n          <option class=\"optionsArrayMap\" *ngFor=\"let option of field.range\" [ngValue]=\"getOptionValueForRange(option, 'map')\">{{option.label}}</option>\n        </ng-container>\n        <ng-container *ngIf=\"field.range && isOptionsArray(field.range) && !isOptionsArrayMap(field.range) && !field.association\">\n          <option class=\"optionsArray\" *ngFor=\"let option of field.range\" [ngValue]=\"getOptionValueForRange(option, 'array')\">{{option.name || option}}</option>\n        </ng-container>\n\n        <ng-container *ngIf=\"field.range && isOptionsClosure(field.range)\">\n          <option class=\"closure\" *ngFor=\"let option of options$ | async\" [ngValue]=\"getOptionValueForRange(option, 'closure')\">{{option.label}}</option>\n        </ng-container>\n\n        <!-- <ng-container *ngIf=\"isOptionsMap(options) && context && context.value && !field.association\">\n          <option *ngFor=\"let option of options[context.value]\" [ngValue]=\"option.value\">{{option.label}}</option>\n        </ng-container> -->\n\n        <ng-container *ngIf=\"!field.range && field.terms\">\n          <option class=\"optionsLast\" *ngFor=\"let option of fetchAssociations()\" [ngValue]=\"getOptionValueForTerms(option)\">{{option.name}}</option>\n        </ng-container>\n      </select>\n    </div>\n  </ng-container>\n</div>\n\n<!-- Dropdown for filters component -->\n<div class=\"sb-dropdown\" *ngIf=\"type === 'facet'\">\n  <label>{{label}}</label>\n  <ng-container *ngIf=\"options && options.data\">\n    <div class=\"dropdown-container\">\n      <sb-icon-dropdown class=\"dropdown-icon\"></sb-icon-dropdown>\n      <select [attr.disabled]=\"disabled ? true : ( context ? (context.invalid ? true : null) : null )\"\n        class=\"sb-dropdown-select\" [ngClass]=\"(styleClass ? styleClass : 'default-dropdown')\" id=\"sb-dropdown\" name=\"sb-dropdown\"\n        (change)=\"onChangeFacet($event)\" placeholder=\"placeholder\">\n        <option *ngIf=\"!default\" [disabled]=\"true\" selected>{{placeholder}}</option>\n        <option *ngFor=\"let option of options.data\" [ngValue]=\"option\" [selected]=\"options.default === option.value\">{{option.label}}</option>\n      </select>\n    </div>\n  </ng-container>\n</div>\n<ng-container *ngFor=\"let validation of validations\">\n  <div class=\"cf-error\"\n    *ngIf=\"(validation.type && (validation.type).toLowerCase() && validation.message && formControlRef.errors && formControlRef.errors[(validation.type).toLowerCase()] && (formControlRef.dirty || formControlRef.touched))\">\n    {{ validation.message }}\n  </div>\n</ng-container>\n\n<!-- Dropdown for filters component -->\n","styles":["label{display:block;padding:10px;font-size:1rem}.dropdown-icon{position:absolute;top:.5rem;right:18px;z-index:1}.dropdown-container{position:relative}select[disabled]{opacity:.3}select{-webkit-appearance:none;-moz-appearance:none;text-indent:1px;text-overflow:''}.sb-dropdown-select{opacity:.99;color:#333;font-family:\"Noto Sans\";font-size:12px;font-weight:700;letter-spacing:0;line-height:17px}.sb-dropdown{margin-bottom:8px}.placeholder select option:first-child{color:#999}.option-default{color:#333;font-weight:700;font-size:12px}.sb-dropdown select{background-color:#fff;padding:10px 20px;font-size:14px;width:100%;border:.5px solid #333}.cf-error{color:red;font-family:\"Noto Sans\";font-size:12px}"]}]}],"members":{"field":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":15,"character":3}}]}],"disabled":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":16,"character":3}}]}],"options":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":17,"character":3}}]}],"label":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":18,"character":3}}]}],"placeholder":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":19,"character":3}}]}],"isMultiple":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":20,"character":3}}]}],"context":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":21,"character":3}}]}],"contextTerms":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":22,"character":3}}]}],"formControlRef":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":23,"character":3}}]}],"formGroup":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":24,"character":3}}]}],"default":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":25,"character":3}}]}],"contextData":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":26,"character":3}}]}],"dataLoadStatusDelegate":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":27,"character":3}}]}],"type":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":28,"character":3}}]}],"styleClass":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":29,"character":3}}]}],"onChangeFilter":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":30,"character":3}}]}],"validations":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":31,"character":3}}]}],"depends":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":33,"character":3}}]}],"dependencyTerms":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":34,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor"}],"ngOnChanges":[{"__symbolic":"method"}],"ngOnInit":[{"__symbolic":"method"}],"ngOnDestroy":[{"__symbolic":"method"}],"isOptionsArray":[{"__symbolic":"method"}],"isOptionsClosure":[{"__symbolic":"method"}],"isOptionsMap":[{"__symbolic":"method"}],"isOptionsArrayMap":[{"__symbolic":"method"}],"onChangeFacet":[{"__symbolic":"method"}],"fetchAssociations":[{"__symbolic":"method"}],"getParentValue":[{"__symbolic":"method"}],"getOptionValueForTerms":[{"__symbolic":"method"}],"getOptionValueForRange":[{"__symbolic":"method"}],"convertOptionToArray":[{"__symbolic":"method"}]}},"ɵs":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":8,"character":1},"arguments":[{"selector":"sb-dynamic-multiple-dropdown","template":"<div class=\"multi-select-section-app\">\n  <label class=\"input-label\" *ngIf=\"label\">{{label}}</label>\n  <!-- <div *ngIf=\"labelHtml\" [innerHTML]=\"labelHtml | transposeHtml\"></div> -->\n  <div class=\"multi-select-container\">\n    <sb-caret-down class=\"caret-down\" [ngClass]=\"{'disabled': disabled === true ? true : ( depends ? (isDependsInvalid ? true : null) : null ) }\" (click)=\"openModal($event)\" [attr.disabled]=\"disabled ? true : ( depends ? (isDependsInvalid ? true : null) : null )\">\n    </sb-caret-down>\n    <div class=\"list-border\" (click)=\"openModal($event)\">\n      <ul [ngClass]=\"{'disabled': disabled === true ? true : ( depends ? (isDependsInvalid ? true : null) : null ) }\" [attr.disabled]=\"disabled ? true : ( depends ? (isDependsInvalid ? true : null) : null )\">\n        <ng-container *ngIf=\"isMultiple\">\n          <li *ngIf=\"!formControlRef.value || !formControlRef.value?.length\" class=\"placeholder\">{{placeholder}}</li>\n          <ng-container *ngIf=\"formControlRef.value?.length\">\n            <span *ngFor=\"let value of formControlRef.value; let index=index\">\n              {{optionValueToOptionLabelMap.get(fromJS(value))}}\n              <span *ngIf=\"index < formControlRef.value?.length - 1\">,\n              </span>\n            </span>\n          </ng-container>\n        </ng-container>\n\n        <ng-container *ngIf=\"!isMultiple\">\n          <li *ngIf=\"!formControlRef.value\" class=\"placeholder\">{{placeholder}}</li>\n\n          <span *ngIf=\"formControlRef.value\">{{optionValueToOptionLabelMap.get(fromJS(formControlRef.value))}}</span>\n        </ng-container>\n      </ul>\n    </div>\n    <div class=\"sb-modal-container\" *ngIf=\"platform === 'mobile'\" [hidden]=\"!showModal\" (click)=\"showModal=false;\">\n      <div class=\"sb-modal-overlay\">\n        <div class=\"sb-modal\" (click)=\"$event.stopPropagation()\">\n          <div class=\"header\">\n            {{placeholder}}\n          </div>\n          <div class=\"body\">\n            <ul>\n              <li *ngFor=\"let option of resolvedOptions; let i=index\">\n                <div (click)=\"addSelected(option)\" class=\"row\">\n                  <label class=\"container\" style=\"pointer-events: none\">\n                    <input [checked]=\"!_.isEmpty(field.output) ? tempValue.includes(option.get(field.output)) : tempValue.includes(option.get('name'))\" class=\"sb-checkbox\" type=\"checkbox\">\n                    <span class=\"checkmark\"></span>\n                  </label>\n                  <span>{{option.get('name')}}</span>\n                </div>\n              </li>\n            </ul>\n          </div>\n          <div class=\"footer\">\n            <div class=\"sb-form-button\">\n              <button class=\"sb-btn-primary-outline\" (click)=\"onCancel()\">cancel</button>\n            </div>\n            <div class=\"sb-form-button\">\n              <button class=\"sb-btn-primary\" (click)=\"onSubmit()\">submit</button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"sb-modal-dropdown-web\" *ngIf=\"platform === 'web'\"  [hidden]=\"!showModal\" (click)=\"showModal=false;\">\n      <ul>\n        <li *ngFor=\"let option of resolvedOptions; let i=index\" [ngClass]=\"{'selected-option': !_.isEmpty(field.output) ? tempValue.includes(option.get(field.output)) : tempValue.includes(option.get('name'))}\">\n          <div (click)=\"addSelected(option); onSubmit()\">\n            <span class=\"cursor-pointer\">{{option.get('name')}}</span>\n          </div>\n        </li>\n      </ul>\n    </div>\n  </div>\n</div>\n","styles":[".multi-select-section-app{margin:1rem 0}label{font-size:14px;font-weight:400;margin:0}.multi-select-container{position:relative;margin-bottom:8px}.multi-select-container .caret-down{position:absolute;top:12px;right:19px;z-index:0}.multi-select-container .list-border .placeholder{margin:0;color:var(--gray-100)}.multi-select-container .list-border ul[disabled]{opacity:.3;pointer-events:none}.multi-select-container .list-border ul{list-style-type:none;position:absolute;margin:0;font-size:14px;font-weight:700}.multi-select-container .list-border{border:.5px solid var(--gray-400);padding:1.3rem;cursor:pointer;display:-webkit-box;display:flex;-webkit-box-align:center;align-items:center;left:0;height:40px}.multi-select-container .list-border li{float:left;font-size:12px;font-weight:700;margin-left:4px}.multi-select-container .dropdown li{cursor:pointer;padding:8px;border:1px solid var(--white)}.multi-select-container .dropdown ul{list-style-type:none;margin:0;padding:0}.multi-select-container .row{display:-ms-grid;display:grid;-ms-grid-columns:1fr 10fr;grid-template-columns:1fr 10fr;grid-gap:0}.multi-select-container .footer{display:-ms-grid;display:grid;-ms-grid-columns:1fr 1fr;grid-template-columns:1fr 1fr;grid-gap:0;padding-left:8px;padding-bottom:8px;padding-top:8px}.multi-select-container .sb-modal-container{position:fixed;height:100vh;overflow:hidden;width:100%;left:0;top:0;right:0;z-index:10}.multi-select-container .sb-modal-overlay{position:absolute;width:100%;height:100%;top:0;background:rgba(0,0,0,.6);left:0;z-index:10}.multi-select-container .fa .fa-close{float:right}.multi-select-container .sb-modal{display:block;position:absolute;bottom:0;width:100%;--border-top:0.5px solid var(--white);z-index:11;background:var(--white)}.multi-select-container .sb-modal ul{list-style-type:none}.multi-select-container .sb-modal li{cursor:pointer;padding-bottom:8px;padding-top:8px;padding-left:16px}.value-label{width:270px;white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.multi-select-container .sb-forms-radio{margin-top:6px}.multi-select-container .sb-form-button{display:inline;padding:10px}.multi-select-container .sb-btn-primary-outline{color:var(--primary-color);background-color:transparent;border:.5px solid var(--primary-color);border-radius:4px;padding:10px 40px;font-size:16px;text-transform:uppercase;width:100%}.multi-select-container .sb-btn-primary{color:var(--white);background-color:var(--primary-color);border:.5px solid var(--primary-color);border-radius:4px;padding:10px 40px;font-size:16px;text-transform:uppercase;width:100%}.multi-select-container .header{padding:16px;margin-left:8px;font-weight:700}.multi-select-container .body{padding-top:8px;border-bottom:.5px solid var(--gray-100);border-top:.5px solid var(--gray-100);max-height:300px;overflow:scroll}.list-with-ellipsis:nth-child(3){float:left;font-size:12px;font-weight:700;margin-left:4px;width:50px;white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.list-with-ellipsis:nth-child(n+4){visibility:hidden}.multi-select-container .container{display:block;position:relative;padding-left:35px;margin-bottom:12px;cursor:pointer;font-size:22px;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.container input{position:absolute;opacity:0;cursor:pointer;height:0;width:0}.checkmark{position:absolute;top:3px;left:0;height:15px;width:15px;border:.4px solid var(--black)}.container:hover input~.checkmark{background-color:var(--white)}.container input:checked~.checkmark{background-color:var(--primary-600)}.checkmark:after{content:\"\";position:absolute;display:none}.container input:checked~.checkmark:after{display:block}.container .checkmark:after{left:5px;top:0;width:5px;height:10px;border:solid var(--white);border-width:0 2px 2px 0;-webkit-transform:rotate(45deg);transform:rotate(45deg)}.sb-modal-dropdown-web ul{list-style-type:none;display:block;position:absolute;top:38px;left:0;background-color:#fff;width:100%;z-index:999;box-shadow:2px 2px 2px 2px #f0f8ff;border:2px solid #80a7ce;max-height:314px;overflow:scroll}.sb-modal-dropdown-web ul li{margin-top:10px;margin-bottom:8px;padding:8px;font-size:13px}.sb-modal-dropdown-web .selected-option{font-weight:700;background-color:#eee}::-webkit-scrollbar{width:6px}::-webkit-scrollbar-track{background:#f1f1f1}::-webkit-scrollbar-thumb{background:#888}::-webkit-scrollbar-thumb:hover{background:#555}.cursor-pointer{cursor:pointer}"]}]}],"members":{"disabled":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":15,"character":3}}]}],"field":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":16,"character":3}}]}],"options":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":17,"character":3}}]}],"label":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":18,"character":3}}]}],"labelHtml":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":19,"character":3}}]}],"placeholder":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":20,"character":3}}]}],"isMultiple":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":21,"character":3}}]}],"context":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":22,"character":3}}]}],"formControlRef":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":23,"character":3}}]}],"formGroup":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":24,"character":3}}]}],"platform":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":25,"character":3}}]}],"default":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":26,"character":3}}]}],"contextData":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":27,"character":3}}]}],"dataLoadStatusDelegate":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":28,"character":3}}]}],"depends":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":29,"character":3}}]}],"dependencyTerms":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":30,"character":3}}]}],"docClick":[{"__symbolic":"method","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"HostListener","line":46,"character":3},"arguments":["document:click"]}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/core","name":"ChangeDetectorRef","line":53,"character":32}]}],"ngOnInit":[{"__symbolic":"method"}],"ngOnChanges":[{"__symbolic":"method"}],"onSubmit":[{"__symbolic":"method"}],"openModal":[{"__symbolic":"method"}],"addSelected":[{"__symbolic":"method"}],"onCancel":[{"__symbolic":"method"}],"ngOnDestroy":[{"__symbolic":"method"}],"isOptionsArray":[{"__symbolic":"method"}],"isOptionsClosure":[{"__symbolic":"method"}],"isOptionsMap":[{"__symbolic":"method"}],"setTempValue":[{"__symbolic":"method"}],"resetTempValue":[{"__symbolic":"method"}],"setupOptions":[{"__symbolic":"method"}]}},"ɵt":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":9,"character":1},"arguments":[{"selector":"sb-dynamic-checkbox","template":"<div class=\"sb-checkbox sb-checkbox-primary\">\n  <input [attr.disabled]=\"disabled ? true : null\" type=\"checkbox\" [formControl]=\"formControlRef\" id=\"{{_.kebabCase(field.name) || field.code}}\"\n  name=\"{{_.kebabCase(field.name) || field.code}}\" [checked]=\"checked\" (change)=\"onChecklistChange($event.target.checked)\">\n  <label *ngIf=\"label\" for=\"{{_.kebabCase(field.name) || field.code}}\">{{label}}</label>\n</div>\n","styles":["label{font-size:16px}.sb-checkbox{padding:0 0 0 8px}.container{position:relative;cursor:pointer;font-size:22px;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.container input{position:absolute;opacity:0;cursor:pointer;height:0;width:0}.container .checkmark{position:absolute;top:0;left:0;height:22px;width:22px;border:2px solid #000;border-radius:4px}.container input:checked~.checkmark{background-color:#2196f3}.checkmark:after{content:\"\";position:absolute;display:none}.container input:checked~.checkmark:after{display:block}.container .checkmark:after{left:7px;top:4px;width:5px;height:9px;border:solid #fff;border-width:0 3px 3px 0;-webkit-transform:rotate(45deg);transform:rotate(45deg)}.checkbox-label{padding:2px 0 0 32px}.checkbox-row{display:-ms-grid;display:grid;-ms-grid-columns:10% 90%;grid-template-columns:10% 90%;grid-gap:0}.label-html{font-size:14px}"]}]}],"members":{"field":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":17,"character":3}}]}],"disabled":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":18,"character":3}}]}],"options":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":19,"character":3}}]}],"label":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":20,"character":3}}]}],"placeholder":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":21,"character":3}}]}],"isMultiple":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":22,"character":3}}]}],"context":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":23,"character":3}}]}],"contextTerms":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":24,"character":3}}]}],"formControlRef":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":25,"character":3}}]}],"formGroup":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":26,"character":3}}]}],"default":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":27,"character":3}}]}],"contextData":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":28,"character":3}}]}],"dataLoadStatusDelegate":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":29,"character":3}}]}],"type":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":30,"character":3}}]}],"styleClass":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":31,"character":3}}]}],"onChangeFilter":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":32,"character":3}}]}],"validations":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":33,"character":3}}]}],"depends":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":35,"character":3}}]}],"dependencyTerms":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":36,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor"}],"ngOnInit":[{"__symbolic":"method"}],"onChecklistChange":[{"__symbolic":"method"}]}},"ɵu":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Directive","line":36,"character":1},"arguments":[{"selector":"[sbDynamicField]"}]}],"members":{"field":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":43,"character":3}}]}],"formGroup":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":44,"character":3}}]}],"formControlRef":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":45,"character":3}}]}],"disabled":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":46,"character":3}}]}],"label":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":47,"character":3}}]}],"options":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":48,"character":3}}]}],"placeholder":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":49,"character":3}}]}],"context":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":50,"character":3}}]}],"validations":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":51,"character":3}}]}],"contextTerms":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":52,"character":3}}]}],"depends":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":53,"character":3}}]}],"dependencyTerms":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":54,"character":3}}]}],"default":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":55,"character":3}}]}],"dataLoadStatusDelegate":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":56,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/core","name":"ComponentFactoryResolver","line":62,"character":22},{"__symbolic":"reference","module":"@angular/core","name":"ViewContainerRef","line":63,"character":23},{"__symbolic":"reference","module":"@angular/core","name":"Renderer2","line":64,"character":23},{"__symbolic":"reference","module":"@angular/core","name":"ElementRef","line":65,"character":24}]}],"ngOnInit":[{"__symbolic":"method"}],"setClassListOnElement":[{"__symbolic":"method"}]}},"ɵv":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":20,"character":1},"arguments":[{"selector":"sb-topicpicker","template":"<div class=\"treepicker-parent\">\n  <label *ngIf=\"label\">{{label}}</label>\n  <div [attr.disabled]=\"disabled ? true : ( depends ? (isDependsInvalid ? true : null) : null )\" id=\"treePicker\" class=\"topic-picker-selector_{{field.code}} cursor-pointer list-border\">\n  {{placeHolder}}\n  </div>\n\n  <input [attr.disabled]=\"disabled ? true : ( depends ? (isDependsInvalid ? true : null) : null )\" [formControl]=\"formControlRef\" [placeholder]=\"placeHolder\" readonly hidden/>\n  <ng-container *ngFor=\"let validation of validations\">\n    <div class=\"cf-error\"\n      *ngIf=\"(validation.type && (validation.type).toLowerCase() && validation.message && formControlRef.errors && formControlRef.errors[(validation.type).toLowerCase()] && (formControlRef.dirty || formControlRef.touched))\">\n      {{ validation.message }}\n    </div>\n  </ng-container>\n</div>\n","styles":[".treepicker-parent{margin:1rem 0}label{display:block;font-size:1rem;margin:0}.topic-picker-selector{width:100%;padding:8px 16px;border:.5px solid #333;box-sizing:border-box}.cf-error{color:red;font-family:\"Noto Sans\";font-size:12px}.treepicker-parent .list-border{border:.5px solid var(--gray-400);padding:1.3rem;cursor:pointer;display:-webkit-box;display:flex;-webkit-box-align:center;align-items:center;left:0;height:40px}"]}]}],"members":{"selectedTopics":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":27,"character":3}}]}],"topicPickerClass":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":28,"character":3}}]}],"label":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":29,"character":3}}]}],"disabled":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":30,"character":3}}]}],"placeholder":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":31,"character":3}}]}],"formControlRef":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":32,"character":3}}]}],"field":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":33,"character":3}}]}],"topicChange":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":34,"character":3}}]}],"validations":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":35,"character":3}}]}],"formGroup":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":36,"character":3}}]}],"default":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":37,"character":3}}]}],"depends":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":39,"character":3}}]}],"dependencyTerms":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":40,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor"}],"ngOnInit":[{"__symbolic":"method"}],"ngAfterViewInit":[{"__symbolic":"method"}],"ngOnDestroy":[{"__symbolic":"method"}],"formatTopics":[{"__symbolic":"method"}],"formatSelectedTopics":[{"__symbolic":"method"}],"initTopicPicker":[{"__symbolic":"method"}],"fetchAssociations":[{"__symbolic":"method"}],"getParentValue":[{"__symbolic":"method"}]}},"ɵw":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":5,"character":1},"arguments":[{"selector":"sb-keywords","template":"<div class=\"sb-keywords\">\n    <label *ngIf=\"label\">{{label}}</label>\n    <tag-input class=\"sb-keywordbox\" [formControl]=\"formControlRef\" [modelAsStrings]=\"true\" [(ngModel)]='items' [placeholder]=\"field.placeholder || 'Enter Keyword'\"\n    [disable]=\"disabled\"></tag-input>\n    <ng-container *ngFor=\"let validation of validations\">\n        <div class=\"cf-error\"\n          *ngIf=\"(validation.type && (validation.type).toLowerCase() && validation.message && formControlRef.errors && formControlRef.errors[(validation.type).toLowerCase()] && (formControlRef.dirty || formControlRef.touched))\">\n          {{ validation.message }}\n        </div>\n      </ng-container>\n</div>\n","styles":[".sb-keywords{margin:1rem 0}label{display:block;font-size:1rem;margin:0}.sb-keywordbox{width:100%;padding:8px 16px;border-bottom:.5px solid #333;box-sizing:border-box}.cf-error{color:red;font-family:\"Noto Sans\";font-size:12px}"]}]}],"members":{"label":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":11,"character":3}}]}],"placeholder":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":12,"character":3}}]}],"formControlRef":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":13,"character":3}}]}],"field":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":14,"character":3}}]}],"validations":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":15,"character":3}}]}],"disabled":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":16,"character":3}}]}],"default":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":17,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor"}],"ngOnInit":[{"__symbolic":"method"}]}},"ɵx":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":7,"character":1},"arguments":[{"selector":"sb-dynamic-multi-select","template":"<div class=\"sb-dropdown\" *ngIf=\"!type\">\n  <label>{{label}} {{context && 'has context'}}  {{context ?  field.context : '' }}</label>\n  <ng-container *ngIf=\"options\">\n    <div class=\"dropdown-container\">\n      <sb-icon-dropdown class=\"dropdown-icon\"></sb-icon-dropdown>\n      <!-- [attr.disabled]=\"disabled ? true : ( context ? (context.invalid ? true : null) : null )\" -->\n      <select [formControl]=\"formControlRef\"\n              [compareWith]=\"ValueComparator.valueComparator\" class=\"sb-dropdown-select\" id=\"sb-dropdown\"\n              name=\"sb-dropdown\" multiple>\n        <option [defaultSelected]=\"!default\" [ngValue]=\"null\" disabled>{{placeHolder}}\n        </option>\n        <ng-container *ngIf=\"field.range && isOptionsArrayMap(field.range) && !field.association\">\n          <option class=\"optionsArrayMap\" *ngFor=\"let option of field.range\" [ngValue]=\"option.value\">{{option.label}}</option>\n        </ng-container>\n        <ng-container *ngIf=\"field.range && isOptionsArray(field.range) && !isOptionsArrayMap(field.range) && !field.association\">\n          <option class=\"optionsArray\" *ngFor=\"let option of field.range\" [ngValue]=\"option || option\">{{option.name || option}}</option>\n        </ng-container>\n\n        <ng-container *ngIf=\"field.range && isOptionsClosure(field.range)\">\n          <option class=\"closure\" *ngFor=\"let option of options$ | async\" [ngValue]=\"option.value\">{{option.label}}</option>\n        </ng-container>\n\n        <!-- <ng-container *ngIf=\"isOptionsMap(options) && context && context.value && !field.association\">\n          <option *ngFor=\"let option of options[context.value]\" [ngValue]=\"option.value\">{{option.label}}</option>\n        </ng-container> -->\n\n        <ng-container *ngIf=\"!field.range && field.terms\">\n          <option class=\"optionsLast\" *ngFor=\"let option of fetchAssociations()\" [ngValue]=\"option.identifier\">{{option.name}}</option>\n        </ng-container>\n      </select>\n    </div>\n  </ng-container>\n</div>\n\n<!-- Dropdown for filters component -->\n<div class=\"sb-dropdown\" *ngIf=\"type === 'facet'\">\n  <label>{{label}}</label>\n  <ng-container *ngIf=\"options && options.data\">\n    <div class=\"dropdown-container\">\n      <sb-icon-dropdown class=\"dropdown-icon\"></sb-icon-dropdown>\n      <select [attr.disabled]=\"disabled ? true : ( context ? (context.invalid ? true : null) : null )\"\n        class=\"sb-dropdown-select\" [ngClass]=\"(styleClass ? styleClass : 'default-dropdown')\" id=\"sb-dropdown\" name=\"sb-dropdown\"\n        (change)=\"onChangeFacet($event)\" placeholder=\"placeHolder\">\n        <option *ngIf=\"!default\" [disabled]=\"true\" selected>{{placeHolder}}</option>\n        <option *ngFor=\"let option of options.data\" [ngValue]=\"option\" [selected]=\"options.default === option.value\">{{option.label}}</option>\n      </select>\n    </div>\n  </ng-container>\n</div>\n<ng-container *ngFor=\"let validation of validations\">\n  <div class=\"cf-error\"\n    *ngIf=\"(validation.type && (validation.type).toLowerCase() && validation.message && formControlRef.errors && formControlRef.errors[(validation.type).toLowerCase()] && (formControlRef.dirty || formControlRef.touched))\">\n    {{ validation.message }}\n  </div>\n</ng-container>\n\n<!-- Dropdown for filters component -->\n","styles":["label{display:block;padding:10px;font-size:1rem}.dropdown-icon{position:absolute;top:.5rem;right:18px;z-index:1}.dropdown-container{position:relative}select[disabled]{opacity:.3}select{-webkit-appearance:none;-moz-appearance:none;text-indent:1px;text-overflow:''}.sb-dropdown-select{opacity:.99;color:#333;font-family:\"Noto Sans\";font-size:12px;font-weight:700;letter-spacing:0;line-height:17px}.sb-dropdown{margin-bottom:8px}.placeholder select option:first-child{color:#999}.option-default{color:#333;font-weight:700;font-size:12px}.sb-dropdown select{background-color:#fff;padding:10px 20px;font-size:14px;width:100%;border:.5px solid #333}.cf-error{color:red;font-family:\"Noto Sans\";font-size:12px}"]}]}],"members":{"field":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":14,"character":3}}]}],"disabled":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":15,"character":3}}]}],"options":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":16,"character":3}}]}],"label":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":17,"character":3}}]}],"placeHolder":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":18,"character":3}}]}],"isMultiple":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":19,"character":3}}]}],"context":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":20,"character":3}}]}],"contextTerms":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":21,"character":3}}]}],"formControlRef":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":22,"character":3}}]}],"formGroup":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":23,"character":3}}]}],"default":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":24,"character":3}}]}],"contextData":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":25,"character":3}}]}],"dataLoadStatusDelegate":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":26,"character":3}}]}],"type":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":27,"character":3}}]}],"styleClass":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":28,"character":3}}]}],"onChangeFilter":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":29,"character":3}}]}],"validations":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":30,"character":3}}]}],"depends":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":32,"character":3}}]}],"dependencyTerms":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":33,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor"}],"ngOnChanges":[{"__symbolic":"method"}],"ngOnInit":[{"__symbolic":"method"}],"ngOnDestroy":[{"__symbolic":"method"}],"isOptionsArray":[{"__symbolic":"method"}],"isOptionsClosure":[{"__symbolic":"method"}],"isOptionsMap":[{"__symbolic":"method"}],"isOptionsArrayMap":[{"__symbolic":"method"}],"onChangeFacet":[{"__symbolic":"method"}],"fetchAssociations":[{"__symbolic":"method"}],"getParentValue":[{"__symbolic":"method"}]}},"ɵy":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"NgModule","line":5,"character":1},"arguments":[{"declarations":[{"__symbolic":"reference","name":"ɵz"}],"imports":[{"__symbolic":"reference","module":"@angular/common","name":"CommonModule","line":7,"character":12}],"exports":[{"__symbolic":"reference","name":"ɵz"}],"providers":[{"__symbolic":"reference","module":"@angular/common","name":"DatePipe","line":9,"character":14}]}]}],"members":{}},"ɵz":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Pipe","line":2,"character":1},"arguments":[{"name":"transposeHtml"}]}],"members":{"__ctor__":[{"__symbolic":"constructor"}],"transform":[{"__symbolic":"method"}]}}},"origins":{"CommonFormElementsComponent":"./lib/common-form-elements.component","CommonFormElementsModule":"./lib/common-form-elements.module","FieldConfigInputType":"./lib/common-form-config","FieldConfigValidationType":"./lib/common-form-config","FieldConfigOptionsBuilder":"./lib/common-form-config","AsyncValidatorFactory":"./lib/common-form-config","FieldConfigOption":"./lib/common-form-config","FieldConfigOptionAssociations":"./lib/common-form-config","FieldConfigAsyncValidation":"./lib/common-form-config","FieldConfig":"./lib/common-form-config","FilterType":"./lib/common-form-config","Validator":"./lib/common-form-config","DynamicFieldConfigOptionsBuilder":"./lib/common-form-config","SectionConfig":"./lib/common-form-config","ɵa":"./lib/dropdown/dropdown.component","ɵb":"./lib/textbox/textbox.component","ɵc":"./lib/textarea/textarea.component","ɵd":"./lib/checkbox/checkbox.component","ɵe":"./lib/form/form.component","ɵf":"./lib/option-group/option-group.component","ɵg":"./lib/icon/dropdown/dropdownIcon.component","ɵh":"./lib/multiple-dropdown/multiple-dropdown.component","ɵi":"./lib/icon/caret-down/caret-down.component","ɵj":"./lib/icon/red-exclamation/red-exclamation.component","ɵk":"./lib/icon/green-tick/green-tick.component","ɵl":"./lib/icon/empty-circle/empty-circle.component","ɵm":"./lib/filters/filters.component","ɵn":"./lib/pills/pills.component","ɵo":"./lib/dynamic-form/dynamic-form.component","ɵp":"./lib/dynamic-textbox/dynamic-textbox.component","ɵq":"./lib/dynamic-textarea/dynamic-textarea.component","ɵr":"./lib/dynamic-dropdown/dynamic-dropdown.component","ɵs":"./lib/dynamic-multiple-dropdown/dynamic-multiple-dropdown.component","ɵt":"./lib/dynamic-checkbox/dynamic-checkbox.component","ɵu":"./lib/dynamic-field/dynamic-field.directive","ɵv":"./lib/topicpicker/topicpicker.component","ɵw":"./lib/keywords/keywords.component","ɵx":"./lib/dynamic-multi-select/dynamic-multi-select.component","ɵy":"./lib/pipes/pipes.module","ɵz":"./lib/pipes/transpose-html/transpose-html"},"importAs":"common-form-elements"}