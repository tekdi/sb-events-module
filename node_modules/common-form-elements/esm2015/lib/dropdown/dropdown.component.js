/**
 * @fileoverview added by tsickle
 * Generated from: lib/dropdown/dropdown.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input, Output, EventEmitter } from '@angular/core';
import { FormControl } from '@angular/forms';
import { Subject } from 'rxjs';
import { tap } from 'rxjs/operators';
import { ValueComparator } from '../utilities/value-comparator';
export class DropdownComponent {
    constructor() {
        this.ValueComparator = ValueComparator;
        this.options = [];
        this.onChangeFilter = new EventEmitter();
    }
    /**
     * @param {?} changes
     * @return {?}
     */
    ngOnChanges(changes) {
        if (!this.options) {
            this.options = [];
        }
        if (this.isOptionsClosure(this.options)) {
            this.options$ = (/** @type {?} */ (((/** @type {?} */ (this.options)))(this.formControlRef, this.context, (/**
             * @return {?}
             */
            () => this.dataLoadStatusDelegate.next('LOADING')), (/**
             * @return {?}
             */
            () => this.dataLoadStatusDelegate.next('LOADED')))));
        }
    }
    /**
     * @return {?}
     */
    ngOnInit() {
        if (this.context) {
            this.contextValueChangesSubscription = this.context.valueChanges.pipe(tap((/**
             * @return {?}
             */
            () => {
                this.formControlRef.patchValue(null);
            }))).subscribe();
        }
    }
    /**
     * @return {?}
     */
    ngOnDestroy() {
    }
    /**
     * @param {?} options
     * @return {?}
     */
    isOptionsArray(options) {
        return Array.isArray(options);
    }
    /**
     * @param {?} options
     * @return {?}
     */
    isOptionsClosure(options) {
        return typeof options === 'function';
    }
    /**
     * @param {?} input
     * @return {?}
     */
    isOptionsMap(input) {
        return !Array.isArray(input) && typeof input === 'object';
    }
    /**
     * @param {?} $event
     * @return {?}
     */
    onChangeFacet($event) {
        /** @type {?} */
        const selectedObject = this.options.data[$event.currentTarget.options.selectedIndex - 1];
        /** @type {?} */
        let emitPayload = JSON.parse(JSON.stringify(this.options));
        emitPayload['data'] = selectedObject;
        emitPayload['selectedLabel'] = selectedObject.label;
        emitPayload['selectedValue'] = selectedObject.value;
        this.onChangeFilter.emit(emitPayload);
    }
}
DropdownComponent.decorators = [
    { type: Component, args: [{
                selector: 'sb-dropdown',
                template: "<div class=\"sb-dropdown\" *ngIf=\"!type\">\n  <label>{{label}}</label>\n  <ng-container *ngIf=\"options\">\n    <div class=\"dropdown-container\">\n      <sb-icon-dropdown class=\"dropdown-icon\"></sb-icon-dropdown>\n      <select [attr.disabled]=\"disabled ? true : ( context ? (context.invalid ? true : null) : null )\"\n              [formControl]=\"formControlRef\"\n              [compareWith]=\"ValueComparator.valueComparator\" class=\"sb-dropdown-select\" id=\"sb-dropdown\"\n              name=\"sb-dropdown\">\n        <option [defaultSelected]=\"!default\" [ngValue]=\"null\" disabled>{{placeHolder}}\n        </option>\n        <ng-container *ngIf=\"isOptionsArray(options)\">\n          <option *ngFor=\"let option of options\" [ngValue]=\"option.value\">{{option.label}}</option>\n        </ng-container>\n\n        <ng-container *ngIf=\"isOptionsClosure(options)\">\n          <option *ngFor=\"let option of options$ | async\" [ngValue]=\"option.value\">{{option.label}}</option>\n        </ng-container>\n\n        <ng-container *ngIf=\"isOptionsMap(options) && context && context.value\">\n          <option *ngFor=\"let option of options[context.value]\" [ngValue]=\"option.value\">{{option.label}}</option>\n        </ng-container>\n      </select>\n    </div>\n  </ng-container>\n</div>\n\n<!-- Dropdown for filters component -->\n<div class=\"sb-dropdown\" *ngIf=\"type === 'facet'\">\n  <label>{{label}}</label>\n  <ng-container *ngIf=\"options && options.data\">\n    <div class=\"dropdown-container\">\n      <sb-icon-dropdown class=\"dropdown-icon\"></sb-icon-dropdown>\n      <select [attr.disabled]=\"disabled ? true : ( context ? (context.invalid ? true : null) : null )\"\n        class=\"sb-dropdown-select\" [ngClass]=\"(styleClass ? styleClass : 'default-dropdown')\" id=\"sb-dropdown\" name=\"sb-dropdown\"\n        (change)=\"onChangeFacet($event)\" placeholder=\"placeHolder\">\n        <option *ngIf=\"!default\" [disabled]=\"true\" selected>{{placeHolder}}</option>\n        <option *ngFor=\"let option of options.data\" [ngValue]=\"option\" [selected]=\"options.default === option.value\">{{option.label}}</option>\n      </select>\n    </div>\n  </ng-container>\n</div>\n\n<!-- Dropdown for filters component -->\n",
                styles: ["label{display:block;padding:10px;font-size:1rem}.dropdown-icon{position:absolute;top:.5rem;right:18px;z-index:1}.dropdown-container{position:relative}select[disabled]{opacity:.3}select{-webkit-appearance:none;-moz-appearance:none;text-indent:1px;text-overflow:''}.sb-dropdown-select{opacity:.99;color:#333;font-family:\"Noto Sans\";font-size:12px;font-weight:700;letter-spacing:0;line-height:17px}.sb-dropdown{margin-bottom:8px}.placeholder select option:first-child{color:#999}.option-default{color:#333;font-weight:700;font-size:12px}.sb-dropdown select{background-color:#fff;padding:10px 20px;font-size:14px;width:100%;border:.5px solid #333}"]
            }] }
];
/** @nocollapse */
DropdownComponent.ctorParameters = () => [];
DropdownComponent.propDecorators = {
    disabled: [{ type: Input }],
    options: [{ type: Input }],
    label: [{ type: Input }],
    placeHolder: [{ type: Input }],
    isMultiple: [{ type: Input }],
    context: [{ type: Input }],
    formControlRef: [{ type: Input }],
    default: [{ type: Input }],
    contextData: [{ type: Input }],
    dataLoadStatusDelegate: [{ type: Input }],
    type: [{ type: Input }],
    styleClass: [{ type: Input }],
    onChangeFilter: [{ type: Output }]
};
if (false) {
    /** @type {?} */
    DropdownComponent.prototype.ValueComparator;
    /** @type {?} */
    DropdownComponent.prototype.disabled;
    /** @type {?} */
    DropdownComponent.prototype.options;
    /** @type {?} */
    DropdownComponent.prototype.label;
    /** @type {?} */
    DropdownComponent.prototype.placeHolder;
    /** @type {?} */
    DropdownComponent.prototype.isMultiple;
    /** @type {?} */
    DropdownComponent.prototype.context;
    /** @type {?} */
    DropdownComponent.prototype.formControlRef;
    /** @type {?} */
    DropdownComponent.prototype.default;
    /** @type {?} */
    DropdownComponent.prototype.contextData;
    /** @type {?} */
    DropdownComponent.prototype.dataLoadStatusDelegate;
    /** @type {?} */
    DropdownComponent.prototype.type;
    /** @type {?} */
    DropdownComponent.prototype.styleClass;
    /** @type {?} */
    DropdownComponent.prototype.onChangeFilter;
    /** @type {?} */
    DropdownComponent.prototype.options$;
    /** @type {?} */
    DropdownComponent.prototype.contextValueChangesSubscription;
    /** @type {?} */
    DropdownComponent.prototype.selectedType;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZHJvcGRvd24uY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vY29tbW9uLWZvcm0tZWxlbWVudHMvIiwic291cmNlcyI6WyJsaWIvZHJvcGRvd24vZHJvcGRvd24uY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsT0FBTyxFQUFDLFNBQVMsRUFBRSxLQUFLLEVBQWdDLE1BQU0sRUFBaUIsWUFBWSxFQUFDLE1BQU0sZUFBZSxDQUFDO0FBQ2xILE9BQU8sRUFBQyxXQUFXLEVBQUMsTUFBTSxnQkFBZ0IsQ0FBQztBQUMzQyxPQUFPLEVBQWEsT0FBTyxFQUFlLE1BQU0sTUFBTSxDQUFDO0FBRXZELE9BQU8sRUFBQyxHQUFHLEVBQUMsTUFBTSxnQkFBZ0IsQ0FBQztBQUNuQyxPQUFPLEVBQUMsZUFBZSxFQUFDLE1BQU0sK0JBQStCLENBQUM7QUFPOUQsTUFBTSxPQUFPLGlCQUFpQjtJQW1CNUI7UUFsQkEsb0JBQWUsR0FBRyxlQUFlLENBQUM7UUFHekIsWUFBTyxHQUFRLEVBQUUsQ0FBQztRQVdqQixtQkFBYyxHQUFzQixJQUFJLFlBQVksRUFBRSxDQUFDO0lBS2pFLENBQUM7Ozs7O0lBRUQsV0FBVyxDQUFDLE9BQXNCO1FBQ2hDLElBQUksQ0FBQyxJQUFJLENBQUMsT0FBTyxFQUFFO1lBQ2pCLElBQUksQ0FBQyxPQUFPLEdBQUcsRUFBRSxDQUFDO1NBQ25CO1FBRUQsSUFBSSxJQUFJLENBQUMsZ0JBQWdCLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxFQUFFO1lBQ3ZDLElBQUksQ0FBQyxRQUFRLEdBQUcsbUJBQUEsQ0FBQyxtQkFBQSxJQUFJLENBQUMsT0FBTyxFQUFrQyxDQUFDLENBQzlELElBQUksQ0FBQyxjQUFjLEVBQ25CLElBQUksQ0FBQyxPQUFPOzs7WUFDWixHQUFHLEVBQUUsQ0FBQyxJQUFJLENBQUMsc0JBQXNCLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQzs7O1lBQ2pELEdBQUcsRUFBRSxDQUFDLElBQUksQ0FBQyxzQkFBc0IsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLEVBQ2pELEVBQU8sQ0FBQztTQUNWO0lBQ0gsQ0FBQzs7OztJQUVELFFBQVE7UUFDTixJQUFJLElBQUksQ0FBQyxPQUFPLEVBQUU7WUFDaEIsSUFBSSxDQUFDLCtCQUErQixHQUFHLElBQUksQ0FBQyxPQUFPLENBQUMsWUFBWSxDQUFDLElBQUksQ0FDbkUsR0FBRzs7O1lBQUMsR0FBRyxFQUFFO2dCQUNQLElBQUksQ0FBQyxjQUFjLENBQUMsVUFBVSxDQUFDLElBQUksQ0FBQyxDQUFDO1lBQ3ZDLENBQUMsRUFBQyxDQUNILENBQUMsU0FBUyxFQUFFLENBQUM7U0FDZjtJQUNILENBQUM7Ozs7SUFFRCxXQUFXO0lBQ1gsQ0FBQzs7Ozs7SUFFRCxjQUFjLENBQUMsT0FBWTtRQUN6QixPQUFPLEtBQUssQ0FBQyxPQUFPLENBQUMsT0FBTyxDQUFDLENBQUM7SUFFaEMsQ0FBQzs7Ozs7SUFFRCxnQkFBZ0IsQ0FBQyxPQUFZO1FBQzNCLE9BQU8sT0FBTyxPQUFPLEtBQUssVUFBVSxDQUFDO0lBQ3ZDLENBQUM7Ozs7O0lBRUQsWUFBWSxDQUFDLEtBQVU7UUFDckIsT0FBTyxDQUFDLEtBQUssQ0FBQyxPQUFPLENBQUMsS0FBSyxDQUFDLElBQUksT0FBTyxLQUFLLEtBQUssUUFBUSxDQUFDO0lBQzVELENBQUM7Ozs7O0lBRUQsYUFBYSxDQUFDLE1BQU07O2NBQ1osY0FBYyxHQUFHLElBQUksQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxhQUFhLENBQUMsT0FBTyxDQUFDLGFBQWEsR0FBRyxDQUFDLENBQUM7O1lBQ3BGLFdBQVcsR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFDO1FBQzFELFdBQVcsQ0FBQyxNQUFNLENBQUMsR0FBRyxjQUFjLENBQUM7UUFDckMsV0FBVyxDQUFDLGVBQWUsQ0FBQyxHQUFHLGNBQWMsQ0FBQyxLQUFLLENBQUM7UUFDcEQsV0FBVyxDQUFDLGVBQWUsQ0FBQyxHQUFHLGNBQWMsQ0FBQyxLQUFLLENBQUM7UUFDcEQsSUFBSSxDQUFDLGNBQWMsQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLENBQUM7SUFDeEMsQ0FBQzs7O1lBM0VGLFNBQVMsU0FBQztnQkFDVCxRQUFRLEVBQUUsYUFBYTtnQkFDdkIsMHRFQUF3Qzs7YUFFekM7Ozs7O3VCQUlFLEtBQUs7c0JBQ0wsS0FBSztvQkFDTCxLQUFLOzBCQUNMLEtBQUs7eUJBQ0wsS0FBSztzQkFDTCxLQUFLOzZCQUNMLEtBQUs7c0JBQ0wsS0FBSzswQkFDTCxLQUFLO3FDQUNMLEtBQUs7bUJBQ0wsS0FBSzt5QkFDTCxLQUFLOzZCQUNMLE1BQU07Ozs7SUFkUCw0Q0FBa0M7O0lBRWxDLHFDQUE0Qjs7SUFDNUIsb0NBQTJCOztJQUMzQixrQ0FBd0I7O0lBQ3hCLHdDQUE4Qjs7SUFDOUIsdUNBQThCOztJQUM5QixvQ0FBK0I7O0lBQy9CLDJDQUFzQzs7SUFDdEMsb0NBQXVCOztJQUN2Qix3Q0FBMEI7O0lBQzFCLG1EQUErRDs7SUFDL0QsaUNBQXVCOztJQUN2Qix1Q0FBNkI7O0lBQzdCLDJDQUFpRTs7SUFDakUscUNBQWdEOztJQUNoRCw0REFBK0M7O0lBQy9DLHlDQUFrQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7Q29tcG9uZW50LCBJbnB1dCwgT25DaGFuZ2VzLCBPbkRlc3Ryb3ksIE9uSW5pdCwgT3V0cHV0LCBTaW1wbGVDaGFuZ2VzLCBFdmVudEVtaXR0ZXJ9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHtGb3JtQ29udHJvbH0gZnJvbSAnQGFuZ3VsYXIvZm9ybXMnO1xuaW1wb3J0IHtPYnNlcnZhYmxlLCBTdWJqZWN0LCBTdWJzY3JpcHRpb259IGZyb20gJ3J4anMnO1xuaW1wb3J0IHtGaWVsZENvbmZpZ09wdGlvbiwgRmllbGRDb25maWdPcHRpb25zQnVpbGRlcn0gZnJvbSAnLi4vY29tbW9uLWZvcm0tY29uZmlnJztcbmltcG9ydCB7dGFwfSBmcm9tICdyeGpzL29wZXJhdG9ycyc7XG5pbXBvcnQge1ZhbHVlQ29tcGFyYXRvcn0gZnJvbSAnLi4vdXRpbGl0aWVzL3ZhbHVlLWNvbXBhcmF0b3InO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdzYi1kcm9wZG93bicsXG4gIHRlbXBsYXRlVXJsOiAnLi9kcm9wZG93bi5jb21wb25lbnQuaHRtbCcsXG4gIHN0eWxlVXJsczogWycuL2Ryb3Bkb3duLmNvbXBvbmVudC5jc3MnXVxufSlcbmV4cG9ydCBjbGFzcyBEcm9wZG93bkNvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCwgT25DaGFuZ2VzLCBPbkRlc3Ryb3kge1xuICBWYWx1ZUNvbXBhcmF0b3IgPSBWYWx1ZUNvbXBhcmF0b3I7XG5cbiAgQElucHV0KCkgZGlzYWJsZWQ/OiBib29sZWFuO1xuICBASW5wdXQoKSBvcHRpb25zOiBhbnkgPSBbXTtcbiAgQElucHV0KCkgbGFiZWw/OiBzdHJpbmc7XG4gIEBJbnB1dCgpIHBsYWNlSG9sZGVyPzogc3RyaW5nO1xuICBASW5wdXQoKSBpc011bHRpcGxlPzogYm9vbGVhbjtcbiAgQElucHV0KCkgY29udGV4dD86IEZvcm1Db250cm9sO1xuICBASW5wdXQoKSBmb3JtQ29udHJvbFJlZj86IEZvcm1Db250cm9sO1xuICBASW5wdXQoKSBkZWZhdWx0PzogYW55O1xuICBASW5wdXQoKSBjb250ZXh0RGF0YTogYW55O1xuICBASW5wdXQoKSBkYXRhTG9hZFN0YXR1c0RlbGVnYXRlOiBTdWJqZWN0PCdMT0FESU5HJyB8ICdMT0FERUQnPjtcbiAgQElucHV0KCkgdHlwZT86IHN0cmluZztcbiAgQElucHV0KCkgc3R5bGVDbGFzcz86IHN0cmluZztcbiAgQE91dHB1dCgpIG9uQ2hhbmdlRmlsdGVyOiBFdmVudEVtaXR0ZXI8YW55PiA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcbiAgb3B0aW9ucyQ/OiBPYnNlcnZhYmxlPEZpZWxkQ29uZmlnT3B0aW9uPGFueT5bXT47XG4gIGNvbnRleHRWYWx1ZUNoYW5nZXNTdWJzY3JpcHRpb24/OiBTdWJzY3JpcHRpb247XG4gIHNlbGVjdGVkVHlwZTogYW55O1xuICBjb25zdHJ1Y3RvcigpIHtcbiAgfVxuXG4gIG5nT25DaGFuZ2VzKGNoYW5nZXM6IFNpbXBsZUNoYW5nZXMpOiB2b2lkIHtcbiAgICBpZiAoIXRoaXMub3B0aW9ucykge1xuICAgICAgdGhpcy5vcHRpb25zID0gW107XG4gICAgfVxuXG4gICAgaWYgKHRoaXMuaXNPcHRpb25zQ2xvc3VyZSh0aGlzLm9wdGlvbnMpKSB7XG4gICAgICB0aGlzLm9wdGlvbnMkID0gKHRoaXMub3B0aW9ucyBhcyBGaWVsZENvbmZpZ09wdGlvbnNCdWlsZGVyPGFueT4pKFxuICAgICAgICB0aGlzLmZvcm1Db250cm9sUmVmLFxuICAgICAgICB0aGlzLmNvbnRleHQsXG4gICAgICAgICgpID0+IHRoaXMuZGF0YUxvYWRTdGF0dXNEZWxlZ2F0ZS5uZXh0KCdMT0FESU5HJyksXG4gICAgICAgICgpID0+IHRoaXMuZGF0YUxvYWRTdGF0dXNEZWxlZ2F0ZS5uZXh0KCdMT0FERUQnKVxuICAgICAgKSBhcyBhbnk7XG4gICAgfVxuICB9XG5cbiAgbmdPbkluaXQoKSB7XG4gICAgaWYgKHRoaXMuY29udGV4dCkge1xuICAgICAgdGhpcy5jb250ZXh0VmFsdWVDaGFuZ2VzU3Vic2NyaXB0aW9uID0gdGhpcy5jb250ZXh0LnZhbHVlQ2hhbmdlcy5waXBlKFxuICAgICAgICB0YXAoKCkgPT4ge1xuICAgICAgICAgIHRoaXMuZm9ybUNvbnRyb2xSZWYucGF0Y2hWYWx1ZShudWxsKTtcbiAgICAgICAgfSlcbiAgICAgICkuc3Vic2NyaWJlKCk7XG4gICAgfVxuICB9XG5cbiAgbmdPbkRlc3Ryb3koKTogdm9pZCB7XG4gIH1cblxuICBpc09wdGlvbnNBcnJheShvcHRpb25zOiBhbnkpIHtcbiAgICByZXR1cm4gQXJyYXkuaXNBcnJheShvcHRpb25zKTtcblxuICB9XG5cbiAgaXNPcHRpb25zQ2xvc3VyZShvcHRpb25zOiBhbnkpIHtcbiAgICByZXR1cm4gdHlwZW9mIG9wdGlvbnMgPT09ICdmdW5jdGlvbic7XG4gIH1cblxuICBpc09wdGlvbnNNYXAoaW5wdXQ6IGFueSkge1xuICAgIHJldHVybiAhQXJyYXkuaXNBcnJheShpbnB1dCkgJiYgdHlwZW9mIGlucHV0ID09PSAnb2JqZWN0JztcbiAgfVxuXG4gIG9uQ2hhbmdlRmFjZXQoJGV2ZW50KSB7XG4gICAgY29uc3Qgc2VsZWN0ZWRPYmplY3QgPSB0aGlzLm9wdGlvbnMuZGF0YVskZXZlbnQuY3VycmVudFRhcmdldC5vcHRpb25zLnNlbGVjdGVkSW5kZXggLSAxXTtcbiAgICBsZXQgZW1pdFBheWxvYWQgPSBKU09OLnBhcnNlKEpTT04uc3RyaW5naWZ5KHRoaXMub3B0aW9ucykpO1xuICAgIGVtaXRQYXlsb2FkWydkYXRhJ10gPSBzZWxlY3RlZE9iamVjdDtcbiAgICBlbWl0UGF5bG9hZFsnc2VsZWN0ZWRMYWJlbCddID0gc2VsZWN0ZWRPYmplY3QubGFiZWw7XG4gICAgZW1pdFBheWxvYWRbJ3NlbGVjdGVkVmFsdWUnXSA9IHNlbGVjdGVkT2JqZWN0LnZhbHVlO1xuICAgIHRoaXMub25DaGFuZ2VGaWx0ZXIuZW1pdChlbWl0UGF5bG9hZCk7XG4gIH1cbn1cbiJdfQ==