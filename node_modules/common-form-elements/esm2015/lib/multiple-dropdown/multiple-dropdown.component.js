/**
 * @fileoverview added by tsickle
 * Generated from: lib/multiple-dropdown/multiple-dropdown.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { ChangeDetectionStrategy, ChangeDetectorRef, Component, Input } from '@angular/core';
import { FormControl } from '@angular/forms';
import { from, Subject } from 'rxjs';
import { takeUntil, tap } from 'rxjs/operators';
import { fromJS, List, Map, Set } from 'immutable';
export class MultipleDropdownComponent {
    /**
     * @param {?} changeDetectionRef
     */
    constructor(changeDetectionRef) {
        this.changeDetectionRef = changeDetectionRef;
        this.showModal = false;
        this.tempValue = Set();
        this.resolvedOptions = List();
        this.optionValueToOptionLabelMap = Map();
        this.fromJS = fromJS;
        this.dispose$ = new Subject();
    }
    /**
     * @return {?}
     */
    ngOnInit() {
        if (this.context) {
            this.context.valueChanges.pipe(tap((/**
             * @return {?}
             */
            () => {
                this.formControlRef.patchValue(null);
                this.tempValue = this.tempValue.clear();
                this.setupOptions();
            })), takeUntil(this.dispose$)).subscribe();
        }
        this.formControlRef.valueChanges.pipe(tap((/**
         * @param {?} value
         * @return {?}
         */
        (value) => {
            this.setTempValue(value);
            this.changeDetectionRef.detectChanges();
        })), takeUntil(this.dispose$)).subscribe();
    }
    /**
     * @param {?} changes
     * @return {?}
     */
    ngOnChanges(changes) {
        if (!changes['options'] || !changes['options'].currentValue) {
            return;
        }
        this.setupOptions();
    }
    /**
     * @return {?}
     */
    onSubmit() {
        /** @type {?} */
        const finalValue = this.tempValue.toList().toJS();
        this.formControlRef.patchValue(this.isMultiple ? finalValue : finalValue[0]);
        this.formControlRef.markAsDirty();
        this.showModal = false;
    }
    /**
     * @return {?}
     */
    openModal() {
        if (this.context && this.context.invalid) {
            return;
        }
        this.setTempValue(this.formControlRef.value);
        this.showModal = true;
    }
    /**
     * @param {?} option
     * @return {?}
     */
    addSelected(option) {
        if (this.isMultiple) {
            if (this.tempValue.includes(option.get('value'))) {
                this.tempValue = this.tempValue.remove(option.get('value'));
            }
            else {
                this.tempValue = this.tempValue.add(option.get('value'));
            }
        }
        else {
            this.tempValue = this.tempValue.clear();
            this.tempValue = this.tempValue.add(option.get('value'));
        }
    }
    /**
     * @return {?}
     */
    onCancel() {
        this.formControlRef.markAsDirty();
        this.showModal = false;
    }
    /**
     * @return {?}
     */
    ngOnDestroy() {
        this.dispose$.next(null);
        this.dispose$.complete();
    }
    /**
     * @private
     * @return {?}
     */
    isOptionsArray() {
        return Array.isArray(this.options);
    }
    /**
     * @private
     * @return {?}
     */
    isOptionsClosure() {
        return typeof this.options === 'function';
    }
    /**
     * @private
     * @return {?}
     */
    isOptionsMap() {
        return !Array.isArray(this.options) && typeof this.options === 'object';
    }
    /**
     * @private
     * @param {?} value
     * @return {?}
     */
    setTempValue(value) {
        if (value) {
            if (Array.isArray(value)) {
                this.tempValue = Set(fromJS(value));
            }
            else {
                this.tempValue = Set(fromJS([value]));
            }
        }
    }
    /**
     * @private
     * @return {?}
     */
    setupOptions() {
        if (!this.options) {
            this.options = [];
            this.resolvedOptions = this.resolvedOptions.clear();
        }
        if (this.isOptionsArray()) {
            this.resolvedOptions = fromJS(this.options);
        }
        else if (this.isOptionsMap()) {
            this.resolvedOptions = (this.context && this.context.value) ?
                fromJS(this.options[this.context.value]) :
                this.resolvedOptions;
        }
        else if (this.isOptionsClosure()) {
            from(((/** @type {?} */ (this.options)))(this.formControlRef, this.context, (/**
             * @return {?}
             */
            () => this.dataLoadStatusDelegate.next('LOADING')), (/**
             * @return {?}
             */
            () => this.dataLoadStatusDelegate.next('LOADED')))).pipe(tap((/**
             * @param {?=} options
             * @return {?}
             */
            (options = []) => {
                this.resolvedOptions = fromJS(options);
                this.resolvedOptions.forEach((/**
                 * @param {?} option
                 * @return {?}
                 */
                (option) => {
                    this.optionValueToOptionLabelMap = this.optionValueToOptionLabelMap.set(option.get('value'), option.get('label'));
                }));
                this.setTempValue(this.default);
                this.changeDetectionRef.detectChanges();
            })), takeUntil(this.dispose$)).subscribe();
        }
        this.resolvedOptions.forEach((/**
         * @param {?} option
         * @return {?}
         */
        (option) => {
            this.optionValueToOptionLabelMap = this.optionValueToOptionLabelMap.set(option.get('value'), option.get('label'));
        }));
        this.setTempValue(this.default);
    }
}
MultipleDropdownComponent.decorators = [
    { type: Component, args: [{
                selector: 'sb-multiple-dropdown',
                template: "<div class=\"multi-select-section\">\n  <label class=\"input-label\" *ngIf=\"label\">{{label}}</label>\n  <div *ngIf=\"labelHtml\" [innerHTML]=\"labelHtml | transposeHtml\"></div>\n  <div class=\"multi-select-container\">\n    <sb-caret-down class=\"caret-down\"\n      [attr.disabled]=\"disabled ? true : ( context ? (context.invalid ? true : null) : null )\" (click)=\"openModal()\">\n    </sb-caret-down>\n    <div class=\"list-border\" (click)=\"openModal()\">\n      <ul [attr.disabled]=\"disabled ? true : ( context ? (context.invalid ? true : null) : null )\">\n        <ng-container *ngIf=\"isMultiple\">\n          <li *ngIf=\"!formControlRef.value || !formControlRef.value.length\" class=\"placeholder\">{{placeHolder}}</li>\n\n          <ng-container *ngIf=\"formControlRef.value?.length\">\n            <span *ngFor=\"let value of formControlRef.value; let index=index\">\n              {{optionValueToOptionLabelMap.get(fromJS(value))}}<span\n            *ngIf=\"index < formControlRef.value.length - 1\">, </span>\n            </span>\n          </ng-container>\n        </ng-container>\n\n        <ng-container *ngIf=\"!isMultiple\">\n          <li *ngIf=\"!formControlRef.value\" class=\"placeholder\">{{placeHolder}}</li>\n\n          <span *ngIf=\"formControlRef.value\">{{optionValueToOptionLabelMap.get(fromJS(formControlRef.value))}}</span>\n        </ng-container>\n      </ul>\n    </div>\n    <div class=\"sb-modal-container\" [hidden]=\"!showModal\" (click)=\"showModal=false;\">\n      <div class=\"sb-modal-overlay\">\n        <div class=\"sb-modal\" (click)=\"$event.stopPropagation()\">\n          <div class=\"header\">\n            {{placeHolder}}\n          </div>\n          <div class=\"body\">\n            <ul>\n              <li *ngFor=\"let option of resolvedOptions; let i=index\">\n                <div (click)=\"addSelected(option)\" class=\"row\">\n                  <label class=\"container\" style=\"pointer-events: none\">\n                    <input [checked]=\"tempValue.includes(option.get('value'))\" class=\"sb-checkbox\" type=\"checkbox\">\n                    <span class=\"checkmark\"></span>\n                  </label>\n                  <span>{{option.get('label')}}</span>\n                </div>\n              </li>\n            </ul>\n          </div>\n          <div class=\"footer\">\n            <div class=\"sb-form-button\">\n              <button class=\"sb-btn-primary-outline\" (click)=\"onCancel()\">cancel</button>\n            </div>\n            <div class=\"sb-form-button\">\n              <button class=\"sb-btn-primary\" (click)=\"onSubmit()\">submit</button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>",
                changeDetection: ChangeDetectionStrategy.OnPush,
                styles: [".multi-select-section{margin:1rem 0}label{font-size:1rem;margin:0}.multi-select-container{position:relative;margin-bottom:8px}.multi-select-container .caret-down{position:absolute;top:11px;right:19px;z-index:0}.multi-select-container .list-border .placeholder{font-size:12px;font-weight:700;margin-left:12px;color:var(--gray-100)}.multi-select-container .list-border ul[disabled]{opacity:.3;pointer-events:none}.multi-select-container .list-border ul{list-style-type:none;margin-top:3px;margin-left:8px;position:absolute;top:0;left:0}.multi-select-container .list-border{border:.5px solid var(--gray-400);padding:1.3rem;cursor:pointer}.multi-select-container .list-border li{float:left;font-size:12px;font-weight:700;margin-left:4px}.multi-select-container .dropdown li{cursor:pointer;padding:8px;border:1px solid var(--white)}.multi-select-container .dropdown ul{list-style-type:none;margin:0;padding:0}.multi-select-container .row{display:-ms-grid;display:grid;-ms-grid-columns:1fr 10fr;grid-template-columns:1fr 10fr;grid-gap:0}.multi-select-container .footer{display:-ms-grid;display:grid;-ms-grid-columns:1fr 1fr;grid-template-columns:1fr 1fr;grid-gap:0;padding-left:8px;padding-bottom:8px;padding-top:8px}.multi-select-container .sb-modal-container{position:fixed;height:100vh;overflow:hidden;width:100%;left:0;top:0;right:0;z-index:10}.multi-select-container .sb-modal-overlay{position:absolute;width:100%;height:100%;top:0;background:rgba(0,0,0,.6);left:0;z-index:10}.multi-select-container .fa .fa-close{float:right}.multi-select-container .sb-modal{display:block;position:absolute;bottom:0;width:100%;--border-top:0.5px solid var(--white);z-index:11;background:var(--white)}.multi-select-container .sb-modal ul{list-style-type:none}.multi-select-container .sb-modal li{cursor:pointer;padding-bottom:8px;padding-top:8px;padding-left:16px}.value-label{width:270px;white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.multi-select-container .sb-forms-radio{margin-top:6px}.multi-select-container .sb-form-button{display:inline;padding:10px}.multi-select-container .sb-btn-primary-outline{color:var(--primary-color);background-color:transparent;border:.5px solid var(--primary-color);border-radius:4px;padding:10px 40px;font-size:16px;text-transform:uppercase;width:100%}.multi-select-container .sb-btn-primary{color:var(--white);background-color:var(--primary-color);border:.5px solid var(--primary-color);border-radius:4px;padding:10px 40px;font-size:16px;text-transform:uppercase;width:100%}.multi-select-container .header{padding:16px;margin-left:8px;font-weight:700}.multi-select-container .body{padding-top:8px;border-bottom:.5px solid var(--gray-100);border-top:.5px solid var(--gray-100);max-height:300px;overflow:scroll}.list-with-ellipsis:nth-child(3){float:left;font-size:12px;font-weight:700;margin-left:4px;width:50px;white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.list-with-ellipsis:nth-child(n+4){visibility:hidden}.multi-select-container .container{display:block;position:relative;padding-left:35px;margin-bottom:12px;cursor:pointer;font-size:22px;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.container input{position:absolute;opacity:0;cursor:pointer;height:0;width:0}.checkmark{position:absolute;top:3px;left:0;height:15px;width:15px;border:.4px solid var(--black)}.container:hover input~.checkmark{background-color:var(--white)}.container input:checked~.checkmark{background-color:var(--primary-600)}.checkmark:after{content:\"\";position:absolute;display:none}.container input:checked~.checkmark:after{display:block}.container .checkmark:after{left:5px;top:0;width:5px;height:10px;border:solid var(--white);border-width:0 2px 2px 0;-webkit-transform:rotate(45deg);transform:rotate(45deg)}"]
            }] }
];
/** @nocollapse */
MultipleDropdownComponent.ctorParameters = () => [
    { type: ChangeDetectorRef }
];
MultipleDropdownComponent.propDecorators = {
    disabled: [{ type: Input }],
    options: [{ type: Input }],
    label: [{ type: Input }],
    labelHtml: [{ type: Input }],
    placeHolder: [{ type: Input }],
    isMultiple: [{ type: Input }],
    context: [{ type: Input }],
    formControlRef: [{ type: Input }],
    default: [{ type: Input }],
    contextData: [{ type: Input }],
    dataLoadStatusDelegate: [{ type: Input }]
};
if (false) {
    /** @type {?} */
    MultipleDropdownComponent.prototype.disabled;
    /** @type {?} */
    MultipleDropdownComponent.prototype.options;
    /** @type {?} */
    MultipleDropdownComponent.prototype.label;
    /** @type {?} */
    MultipleDropdownComponent.prototype.labelHtml;
    /** @type {?} */
    MultipleDropdownComponent.prototype.placeHolder;
    /** @type {?} */
    MultipleDropdownComponent.prototype.isMultiple;
    /** @type {?} */
    MultipleDropdownComponent.prototype.context;
    /** @type {?} */
    MultipleDropdownComponent.prototype.formControlRef;
    /** @type {?} */
    MultipleDropdownComponent.prototype.default;
    /** @type {?} */
    MultipleDropdownComponent.prototype.contextData;
    /** @type {?} */
    MultipleDropdownComponent.prototype.dataLoadStatusDelegate;
    /** @type {?} */
    MultipleDropdownComponent.prototype.showModal;
    /** @type {?} */
    MultipleDropdownComponent.prototype.tempValue;
    /** @type {?} */
    MultipleDropdownComponent.prototype.resolvedOptions;
    /** @type {?} */
    MultipleDropdownComponent.prototype.optionValueToOptionLabelMap;
    /** @type {?} */
    MultipleDropdownComponent.prototype.fromJS;
    /**
     * @type {?}
     * @private
     */
    MultipleDropdownComponent.prototype.dispose$;
    /**
     * @type {?}
     * @private
     */
    MultipleDropdownComponent.prototype.changeDetectionRef;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibXVsdGlwbGUtZHJvcGRvd24uY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vY29tbW9uLWZvcm0tZWxlbWVudHMvIiwic291cmNlcyI6WyJsaWIvbXVsdGlwbGUtZHJvcGRvd24vbXVsdGlwbGUtZHJvcGRvd24uY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsT0FBTyxFQUFDLHVCQUF1QixFQUFFLGlCQUFpQixFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQThDLE1BQU0sZUFBZSxDQUFDO0FBQ3hJLE9BQU8sRUFBQyxXQUFXLEVBQUMsTUFBTSxnQkFBZ0IsQ0FBQztBQUMzQyxPQUFPLEVBQUMsSUFBSSxFQUFFLE9BQU8sRUFBQyxNQUFNLE1BQU0sQ0FBQztBQUVuQyxPQUFPLEVBQUMsU0FBUyxFQUFFLEdBQUcsRUFBQyxNQUFNLGdCQUFnQixDQUFDO0FBQzlDLE9BQU8sRUFBQyxNQUFNLEVBQUUsSUFBSSxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUMsTUFBTSxXQUFXLENBQUM7QUFTakQsTUFBTSxPQUFPLHlCQUF5Qjs7OztJQXFCcEMsWUFDVSxrQkFBcUM7UUFBckMsdUJBQWtCLEdBQWxCLGtCQUFrQixDQUFtQjtRQVYvQyxjQUFTLEdBQUcsS0FBSyxDQUFDO1FBQ2xCLGNBQVMsR0FBRyxHQUFHLEVBQU8sQ0FBQztRQUN2QixvQkFBZSxHQUFHLElBQUksRUFBdUIsQ0FBQztRQUM5QyxnQ0FBMkIsR0FBRyxHQUFHLEVBQWUsQ0FBQztRQUVqRCxXQUFNLEdBQUcsTUFBTSxDQUFDO1FBRVIsYUFBUSxHQUFHLElBQUksT0FBTyxFQUFhLENBQUM7SUFLNUMsQ0FBQzs7OztJQUNELFFBQVE7UUFDTixJQUFJLElBQUksQ0FBQyxPQUFPLEVBQUU7WUFDaEIsSUFBSSxDQUFDLE9BQU8sQ0FBQyxZQUFZLENBQUMsSUFBSSxDQUM1QixHQUFHOzs7WUFBQyxHQUFHLEVBQUU7Z0JBQ1AsSUFBSSxDQUFDLGNBQWMsQ0FBQyxVQUFVLENB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LFFBQVEsQ0FBQyxDQUN6QixDQUFDLFNBQVMsRUFBRSxDQUFDO1NBQ2Y7UUFFRCxJQUFJLENBQUMsZUFBZSxDQUFDLE9BQU87Ozs7UUFBQyxDQUFDLE1BQU0sRUFBRSxFQUFFO1lBQ3RDLElBQUksQ0FBQywyQkFBMkIsR0FBRyxJQUFJLENBQUMsMkJBQTJCLENBQUMsR0FBRyxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsT0FBTyxDQUFDLEVBQUUsTUFBTSxDQUFDLEdBQUcsQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDO1FBQ3BILENBQUMsRUFBQyxDQUFDO1FBRUgsSUFBSSxDQUFDLFlBQVksQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUM7SUFDbEMsQ0FBQzs7O1lBOUpGLFNBQVMsU0FBQztnQkFDVCxRQUFRLEVBQUUsc0JBQXNCO2dCQUNoQyx5ckZBQWlEO2dCQUVqRCxlQUFlLEVBQUUsdUJBQXVCLENBQUMsTUFBTTs7YUFDaEQ7Ozs7WUFiZ0MsaUJBQWlCOzs7dUJBZS9DLEtBQUs7c0JBQ0wsS0FBSztvQkFDTCxLQUFLO3dCQUNMLEtBQUs7MEJBQ0wsS0FBSzt5QkFDTCxLQUFLO3NCQUNMLEtBQUs7NkJBQ0wsS0FBSztzQkFDTCxLQUFLOzBCQUNMLEtBQUs7cUNBQ0wsS0FBSzs7OztJQVZOLDZDQUE0Qjs7SUFDNUIsNENBQXNCOztJQUN0QiwwQ0FBd0I7O0lBQ3hCLDhDQUF3Qjs7SUFDeEIsZ0RBQThCOztJQUM5QiwrQ0FBOEI7O0lBQzlCLDRDQUErQjs7SUFDL0IsbURBQXNDOztJQUN0Qyw0Q0FBdUI7O0lBQ3ZCLGdEQUEwQjs7SUFDMUIsMkRBQStEOztJQUMvRCw4Q0FBa0I7O0lBQ2xCLDhDQUF1Qjs7SUFDdkIsb0RBQThDOztJQUM5QyxnRUFBaUQ7O0lBRWpELDJDQUFnQjs7Ozs7SUFFaEIsNkNBQTRDOzs7OztJQUcxQyx1REFBNkMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0NoYW5nZURldGVjdGlvblN0cmF0ZWd5LCBDaGFuZ2VEZXRlY3RvclJlZiwgQ29tcG9uZW50LCBJbnB1dCwgT25DaGFuZ2VzLCBPbkRlc3Ryb3ksIE9uSW5pdCwgU2ltcGxlQ2hhbmdlc30gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQge0Zvcm1Db250cm9sfSBmcm9tICdAYW5ndWxhci9mb3Jtcyc7XG5pbXBvcnQge2Zyb20sIFN1YmplY3R9IGZyb20gJ3J4anMnO1xuaW1wb3J0IHtGaWVsZENvbmZpZ09wdGlvbnNCdWlsZGVyfSBmcm9tICcuLi9jb21tb24tZm9ybS1jb25maWcnO1xuaW1wb3J0IHt0YWtlVW50aWwsIHRhcH0gZnJvbSAncnhqcy9vcGVyYXRvcnMnO1xuaW1wb3J0IHtmcm9tSlMsIExpc3QsIE1hcCwgU2V0fSBmcm9tICdpbW11dGFibGUnO1xuXG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ3NiLW11bHRpcGxlLWRyb3Bkb3duJyxcbiAgdGVtcGxhdGVVcmw6ICcuL211bHRpcGxlLWRyb3Bkb3duLmNvbXBvbmVudC5odG1sJyxcbiAgc3R5bGVVcmxzOiBbJy4vbXVsdGlwbGUtZHJvcGRvd24uY29tcG9uZW50LmNzcyddLFxuICBjaGFuZ2VEZXRlY3Rpb246IENoYW5nZURldGVjdGlvblN0cmF0ZWd5Lk9uUHVzaFxufSlcbmV4cG9ydCBjbGFzcyBNdWx0aXBsZURyb3Bkb3duQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0LCBPbkNoYW5nZXMsIE9uRGVzdHJveSB7XG4gIEBJbnB1dCgpIGRpc2FibGVkPzogYm9vbGVhbjtcbiAgQElucHV0KCkgb3B0aW9uczogYW55O1xuICBASW5wdXQoKSBsYWJlbD86IHN0cmluZztcbiAgQElucHV0KCkgbGFiZWxIdG1sOiBhbnk7XG4gIEBJbnB1dCgpIHBsYWNlSG9sZGVyPzogc3RyaW5nO1xuICBASW5wdXQoKSBpc011bHRpcGxlPzogYm9vbGVhbjtcbiAgQElucHV0KCkgY29udGV4dD86IEZvcm1Db250cm9sO1xuICBASW5wdXQoKSBmb3JtQ29udHJvbFJlZj86IEZvcm1Db250cm9sO1xuICBASW5wdXQoKSBkZWZhdWx0PzogYW55O1xuICBASW5wdXQoKSBjb250ZXh0RGF0YTogYW55O1xuICBASW5wdXQoKSBkYXRhTG9hZFN0YXR1c0RlbGVnYXRlOiBTdWJqZWN0PCdMT0FESU5HJyB8ICdMT0FERUQnPjtcbiAgc2hvd01vZGFsID0gZmFsc2U7XG4gIHRlbXBWYWx1ZSA9IFNldDxhbnk+KCk7XG4gIHJlc29sdmVkT3B0aW9ucyA9IExpc3Q8TWFwPHN0cmluZywgc3RyaW5nPj4oKTtcbiAgb3B0aW9uVmFsdWVUb09wdGlvbkxhYmVsTWFwID0gTWFwPGFueSwgc3RyaW5nPigpO1xuXG4gIGZyb21KUyA9IGZyb21KUztcblxuICBwcml2YXRlIGRpc3Bvc2UkID0gbmV3IFN1YmplY3Q8dW5kZWZpbmVkPigpO1xuXG4gIGNvbnN0cnVjdG9yKFxuICAgIHByaXZhdGUgY2hhbmdlRGV0ZWN0aW9uUmVmOiBDaGFuZ2VEZXRlY3RvclJlZlxuICApIHtcbiAgfVxuICBuZ09uSW5pdCgpIHtcbiAgICBpZiAodGhpcy5jb250ZXh0KSB7XG4gICAgICB0aGlzLmNvbnRleHQudmFsdWVDaGFuZ2VzLnBpcGUoXG4gICAgICAgIHRhcCgoKSA9PiB7XG4gICAgICAgICAgdGhpcy5mb3JtQ29udHJvbFJlZi5wYXRjaFZhbHVlKG51bGwpO1xuICAgICAgICAgIHRoaXMudGVtcFZhbHVlID0gdGhpcy50ZW1wVmFsdWUuY2xlYXIoKTtcbiAgICAgICAgICB0aGlzLnNldHVwT3B0aW9ucygpO1xuICAgICAgICB9KSxcbiAgICAgICAgdGFrZVVudGlsKHRoaXMuZGlzcG9zZSQpXG4gICAgICApLnN1YnNjcmliZSgpO1xuICAgIH1cblxuICAgIHRoaXMuZm9ybUNvbnRyb2xSZWYudmFsdWVDaGFuZ2VzLnBpcGUoXG4gICAgICB0YXAoKHZhbHVlKSA9PiB7XG4gICAgICAgIHRoaXMuc2V0VGVtcFZhbHVlKHZhbHVlKTtcbiAgICAgICAgdGhpcy5jaGFuZ2VEZXRlY3Rpb25SZWYuZGV0ZWN0Q2hhbmdlcygpO1xuICAgICAgfSksXG4gICAgICB0YWtlVW50aWwodGhpcy5kaXNwb3NlJClcbiAgICApLnN1YnNjcmliZSgpO1xuICB9XG4gIG5nT25DaGFuZ2VzKGNoYW5nZXM6IFNpbXBsZUNoYW5nZXMpOiB2b2lkIHtcbiAgICBpZiAoIWNoYW5nZXNbJ29wdGlvbnMnXSB8fCAhY2hhbmdlc1snb3B0aW9ucyddLmN1cnJlbnRWYWx1ZSkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIHRoaXMuc2V0dXBPcHRpb25zKCk7XG4gIH1cblxuICBvblN1Ym1pdCgpIHtcbiAgICBjb25zdCBmaW5hbFZhbHVlID0gdGhpcy50ZW1wVmFsdWUudG9MaXN0KCkudG9KUygpO1xuICAgIHRoaXMuZm9ybUNvbnRyb2xSZWYucGF0Y2hWYWx1ZSh0aGlzLmlzTXVsdGlwbGUgPyBmaW5hbFZhbHVlIDogZmluYWxWYWx1ZVswXSk7XG4gICAgdGhpcy5mb3JtQ29udHJvbFJlZi5tYXJrQXNEaXJ0eSgpO1xuICAgIHRoaXMuc2hvd01vZGFsID0gZmFsc2U7XG4gIH1cbiAgb3Blbk1vZGFsKCkge1xuICAgIGlmICh0aGlzLmNvbnRleHQgJiYgdGhpcy5jb250ZXh0LmludmFsaWQpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICB0aGlzLnNldFRlbXBWYWx1ZSh0aGlzLmZvcm1Db250cm9sUmVmLnZhbHVlKTtcblxuICAgIHRoaXMuc2hvd01vZGFsID0gdHJ1ZTtcbiAgfVxuXG4gIGFkZFNlbGVjdGVkKG9wdGlvbjogTWFwPHN0cmluZywgc3RyaW5nPikge1xuICAgIGlmICh0aGlzLmlzTXVsdGlwbGUpIHtcbiAgICAgIGlmICh0aGlzLnRlbXBWYWx1ZS5pbmNsdWRlcyhvcHRpb24uZ2V0KCd2YWx1ZScpKSkge1xuICAgICAgICB0aGlzLnRlbXBWYWx1ZSA9IHRoaXMudGVtcFZhbHVlLnJlbW92ZShvcHRpb24uZ2V0KCd2YWx1ZScpKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHRoaXMudGVtcFZhbHVlID0gdGhpcy50ZW1wVmFsdWUuYWRkKG9wdGlvbi5nZXQoJ3ZhbHVlJykpO1xuICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLnRlbXBWYWx1ZSA9IHRoaXMudGVtcFZhbHVlLmNsZWFyKCk7XG4gICAgICB0aGlzLnRlbXBWYWx1ZSA9IHRoaXMudGVtcFZhbHVlLmFkZChvcHRpb24uZ2V0KCd2YWx1ZScpKTtcbiAgICB9XG4gIH1cbiAgb25DYW5jZWwoKSB7XG4gICAgdGhpcy5mb3JtQ29udHJvbFJlZi5tYXJrQXNEaXJ0eSgpO1xuICAgIHRoaXMuc2hvd01vZGFsID0gZmFsc2U7XG4gIH1cblxuICBuZ09uRGVzdHJveSgpOiB2b2lkIHtcbiAgICB0aGlzLmRpc3Bvc2UkLm5leHQobnVsbCk7XG4gICAgdGhpcy5kaXNwb3NlJC5jb21wbGV0ZSgpO1xuICB9XG5cbiAgcHJpdmF0ZSBpc09wdGlvbnNBcnJheSgpIHtcbiAgICByZXR1cm4gQXJyYXkuaXNBcnJheSh0aGlzLm9wdGlvbnMpO1xuICB9XG5cbiAgcHJpdmF0ZSBpc09wdGlvbnNDbG9zdXJlKCkge1xuICAgIHJldHVybiB0eXBlb2YgdGhpcy5vcHRpb25zID09PSAnZnVuY3Rpb24nO1xuICB9XG5cbiAgcHJpdmF0ZSBpc09wdGlvbnNNYXAoKSB7XG4gICAgcmV0dXJuICFBcnJheS5pc0FycmF5KHRoaXMub3B0aW9ucykgJiYgdHlwZW9mIHRoaXMub3B0aW9ucyA9PT0gJ29iamVjdCc7XG4gIH1cblxuICBwcml2YXRlIHNldFRlbXBWYWx1ZSh2YWx1ZTogYW55KSB7XG4gICAgaWYgKHZhbHVlKSB7XG4gICAgICBpZiAoQXJyYXkuaXNBcnJheSh2YWx1ZSkpIHtcbiAgICAgICAgdGhpcy50ZW1wVmFsdWUgPSBTZXQoZnJvbUpTKHZhbHVlKSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB0aGlzLnRlbXBWYWx1ZSA9IFNldChmcm9tSlMoW3ZhbHVlXSkpO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIHByaXZhdGUgc2V0dXBPcHRpb25zKCkge1xuICAgIGlmICghdGhpcy5vcHRpb25zKSB7XG4gICAgICB0aGlzLm9wdGlvbnMgPSBbXTtcbiAgICAgIHRoaXMucmVzb2x2ZWRPcHRpb25zID0gdGhpcy5yZXNvbHZlZE9wdGlvbnMuY2xlYXIoKTtcbiAgICB9XG5cbiAgICBpZiAodGhpcy5pc09wdGlvbnNBcnJheSgpKSB7XG4gICAgICB0aGlzLnJlc29sdmVkT3B0aW9ucyA9IGZyb21KUyh0aGlzLm9wdGlvbnMpO1xuICAgIH0gZWxzZSBpZiAodGhpcy5pc09wdGlvbnNNYXAoKSkge1xuICAgICAgdGhpcy5yZXNvbHZlZE9wdGlvbnMgPSAodGhpcy5jb250ZXh0ICYmIHRoaXMuY29udGV4dC52YWx1ZSkgP1xuICAgICAgICBmcm9tSlModGhpcy5vcHRpb25zW3RoaXMuY29udGV4dC52YWx1ZV0pIDpcbiAgICAgICAgdGhpcy5yZXNvbHZlZE9wdGlvbnM7XG4gICAgfSBlbHNlIGlmICh0aGlzLmlzT3B0aW9uc0Nsb3N1cmUoKSkge1xuICAgICAgZnJvbSgodGhpcy5vcHRpb25zIGFzIEZpZWxkQ29uZmlnT3B0aW9uc0J1aWxkZXI8YW55PikoXG4gICAgICAgIHRoaXMuZm9ybUNvbnRyb2xSZWYsXG4gICAgICAgIHRoaXMuY29udGV4dCxcbiAgICAgICAgKCkgPT4gdGhpcy5kYXRhTG9hZFN0YXR1c0RlbGVnYXRlLm5leHQoJ0xPQURJTkcnKSxcbiAgICAgICAgKCkgPT4gdGhpcy5kYXRhTG9hZFN0YXR1c0RlbGVnYXRlLm5leHQoJ0xPQURFRCcpXG4gICAgICApKS5waXBlKFxuICAgICAgICB0YXAoKG9wdGlvbnMgPSBbXSkgPT4ge1xuICAgICAgICAgIHRoaXMucmVzb2x2ZWRPcHRpb25zID0gZnJvbUpTKG9wdGlvbnMpO1xuXG4gICAgICAgICAgdGhpcy5yZXNvbHZlZE9wdGlvbnMuZm9yRWFjaCgob3B0aW9uKSA9PiB7XG4gICAgICAgICAgICB0aGlzLm9wdGlvblZhbHVlVG9PcHRpb25MYWJlbE1hcCA9IHRoaXMub3B0aW9uVmFsdWVUb09wdGlvbkxhYmVsTWFwLnNldChvcHRpb24uZ2V0KCd2YWx1ZScpLCBvcHRpb24uZ2V0KCdsYWJlbCcpKTtcbiAgICAgICAgICB9KTtcblxuICAgICAgICAgIHRoaXMuc2V0VGVtcFZhbHVlKHRoaXMuZGVmYXVsdCk7XG5cbiAgICAgICAgICB0aGlzLmNoYW5nZURldGVjdGlvblJlZi5kZXRlY3RDaGFuZ2VzKCk7XG4gICAgICAgIH0pLFxuICAgICAgICB0YWtlVW50aWwodGhpcy5kaXNwb3NlJClcbiAgICAgICkuc3Vic2NyaWJlKCk7XG4gICAgfVxuXG4gICAgdGhpcy5yZXNvbHZlZE9wdGlvbnMuZm9yRWFjaCgob3B0aW9uKSA9PiB7XG4gICAgICB0aGlzLm9wdGlvblZhbHVlVG9PcHRpb25MYWJlbE1hcCA9IHRoaXMub3B0aW9uVmFsdWVUb09wdGlvbkxhYmVsTWFwLnNldChvcHRpb24uZ2V0KCd2YWx1ZScpLCBvcHRpb24uZ2V0KCdsYWJlbCcpKTtcbiAgICB9KTtcblxuICAgIHRoaXMuc2V0VGVtcFZhbHVlKHRoaXMuZGVmYXVsdCk7XG4gIH1cbn1cbiJdfQ==