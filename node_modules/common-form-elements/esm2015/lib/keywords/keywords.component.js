/**
 * @fileoverview added by tsickle
 * Generated from: lib/keywords/keywords.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input } from '@angular/core';
import { FormControl } from '@angular/forms';
import * as _ from 'lodash-es';
export class KeywordsComponent {
    constructor() {
        this.inputText = '';
    }
    /**
     * @return {?}
     */
    ngOnInit() {
        if (!_.isEmpty(this.default)) {
            this.items = this.default;
        }
    }
}
KeywordsComponent.decorators = [
    { type: Component, args: [{
                selector: 'sb-keywords',
                template: "<div class=\"sb-keywords\">\n    <label *ngIf=\"label\">{{label}}</label>\n    <tag-input class=\"sb-keywordbox\" [formControl]=\"formControlRef\" [modelAsStrings]=\"true\" [(ngModel)]='items' [placeholder]=\"field.placeholder || 'Enter Keyword'\"\n    [disable]=\"disabled\"></tag-input>\n    <ng-container *ngFor=\"let validation of validations\">\n        <div class=\"cf-error\"\n          *ngIf=\"(validation.type && (validation.type).toLowerCase() && validation.message && formControlRef.errors && formControlRef.errors[(validation.type).toLowerCase()] && (formControlRef.dirty || formControlRef.touched))\">\n          {{ validation.message }}\n        </div>\n      </ng-container>\n</div>\n",
                styles: [".sb-keywords{margin:1rem 0}label{display:block;font-size:1rem;margin:0}.sb-keywordbox{width:100%;padding:8px 16px;border-bottom:.5px solid #333;box-sizing:border-box}.cf-error{color:red;font-family:\"Noto Sans\";font-size:12px}"]
            }] }
];
/** @nocollapse */
KeywordsComponent.ctorParameters = () => [];
KeywordsComponent.propDecorators = {
    label: [{ type: Input }],
    placeholder: [{ type: Input }],
    formControlRef: [{ type: Input }],
    field: [{ type: Input }],
    validations: [{ type: Input }],
    disabled: [{ type: Input }],
    default: [{ type: Input }]
};
if (false) {
    /** @type {?} */
    KeywordsComponent.prototype.label;
    /** @type {?} */
    KeywordsComponent.prototype.placeholder;
    /** @type {?} */
    KeywordsComponent.prototype.formControlRef;
    /** @type {?} */
    KeywordsComponent.prototype.field;
    /** @type {?} */
    KeywordsComponent.prototype.validations;
    /** @type {?} */
    KeywordsComponent.prototype.disabled;
    /** @type {?} */
    KeywordsComponent.prototype.default;
    /** @type {?} */
    KeywordsComponent.prototype.items;
    /** @type {?} */
    KeywordsComponent.prototype.inputText;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoia2V5d29yZHMuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vY29tbW9uLWZvcm0tZWxlbWVudHMvIiwic291cmNlcyI6WyJsaWIva2V5d29yZHMva2V5d29yZHMuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQVUsTUFBTSxlQUFlLENBQUM7QUFDekQsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBRTdDLE9BQU8sS0FBSyxDQUFDLE1BQU0sV0FBVyxDQUFDO0FBTy9CLE1BQU0sT0FBTyxpQkFBaUI7SUFZNUI7UUFEQSxjQUFTLEdBQUcsRUFBRSxDQUFDO0lBQ0MsQ0FBQzs7OztJQUVqQixRQUFRO1FBQ04sSUFBSSxDQUFDLENBQUMsQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxFQUFFO1lBQzVCLElBQUksQ0FBQyxLQUFLLEdBQUcsSUFBSSxDQUFDLE9BQU8sQ0FBQztTQUMzQjtJQUNILENBQUM7OztZQXZCRixTQUFTLFNBQUM7Z0JBQ1QsUUFBUSxFQUFFLGFBQWE7Z0JBQ3ZCLHVzQkFBd0M7O2FBRXpDOzs7OztvQkFFRSxLQUFLOzBCQUNMLEtBQUs7NkJBQ0wsS0FBSztvQkFDTCxLQUFLOzBCQUNMLEtBQUs7dUJBQ0wsS0FBSztzQkFDTCxLQUFLOzs7O0lBTk4sa0NBQXVCOztJQUN2Qix3Q0FBNkI7O0lBQzdCLDJDQUFxQzs7SUFDckMsa0NBQW9DOztJQUNwQyx3Q0FBMkI7O0lBQzNCLHFDQUEyQjs7SUFDM0Isb0NBQXlCOztJQUd6QixrQ0FBa0I7O0lBQ2xCLHNDQUFlIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBJbnB1dCwgT25Jbml0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBGb3JtQ29udHJvbCB9IGZyb20gJ0Bhbmd1bGFyL2Zvcm1zJztcbmltcG9ydCB7IEZpZWxkQ29uZmlnIH0gZnJvbSAnLi4vY29tbW9uLWZvcm0tY29uZmlnJztcbmltcG9ydCAqIGFzIF8gZnJvbSAnbG9kYXNoLWVzJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnc2Ita2V5d29yZHMnLFxuICB0ZW1wbGF0ZVVybDogJy4va2V5d29yZHMuY29tcG9uZW50Lmh0bWwnLFxuICBzdHlsZVVybHM6IFsnLi9rZXl3b3Jkcy5jb21wb25lbnQuY3NzJ11cbn0pXG5leHBvcnQgY2xhc3MgS2V5d29yZHNDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQge1xuICBASW5wdXQoKSBsYWJlbDogU3RyaW5nO1xuICBASW5wdXQoKSBwbGFjZWhvbGRlcjogU3RyaW5nO1xuICBASW5wdXQoKSBmb3JtQ29udHJvbFJlZjogRm9ybUNvbnRyb2w7XG4gIEBJbnB1dCgpIGZpZWxkOiBGaWVsZENvbmZpZzxTdHJpbmc+O1xuICBASW5wdXQoKSB2YWxpZGF0aW9ucz86IGFueTtcbiAgQElucHV0KCkgZGlzYWJsZWQ6IEJvb2xlYW47XG4gIEBJbnB1dCgpIGRlZmF1bHQ6IFN0cmluZztcblxuXG4gIHB1YmxpYyBpdGVtczogYW55O1xuICBpbnB1dFRleHQgPSAnJztcbiAgY29uc3RydWN0b3IoKSB7IH1cblxuICBuZ09uSW5pdCgpIHtcbiAgICBpZiAoIV8uaXNFbXB0eSh0aGlzLmRlZmF1bHQpKSB7XG4gICAgICB0aGlzLml0ZW1zID0gdGhpcy5kZWZhdWx0O1xuICAgIH1cbiAgfVxuXG59XG4iXX0=