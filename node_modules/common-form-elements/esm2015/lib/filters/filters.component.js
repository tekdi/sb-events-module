/**
 * @fileoverview added by tsickle
 * Generated from: lib/filters/filters.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input, Output, EventEmitter } from '@angular/core';
import { FilterType } from '../common-form-config';
export class FiltersComponent {
    constructor() {
        this.facets = [];
        this.selectedFilter = new EventEmitter();
        this.FilterType = FilterType;
        this.formattedFacets = [];
    }
    /**
     * @return {?}
     */
    ngOnInit() {
        this.formatFacets();
    }
    /**
     * @return {?}
     */
    formatFacets() {
        this.facets.forEach((/**
         * @param {?} facet
         * @param {?} index
         * @return {?}
         */
        (facet, index) => {
            /** @type {?} */
            let facetObj = {};
            facetObj['name'] = facet['name'];
            facetObj['type'] = this.config[facet['name']] && this.config[facet['name']]['type'] ? this.config[facet['name']]['type'] : 'dropdown';
            facetObj['index'] = this.config[facet['name']] && this.config[facet['name']]['index'] ? this.config[facet['name']]['index'] : index;
            facetObj['label'] = this.config[facet['name']] && this.config[facet['name']]['label'] ? this.config[facet['name']]['label'] : facet['name'];
            facetObj['placeHolder'] = this.config[facet['name']] && this.config[facet['name']]['placeHolder'] ? this.config[facet['name']]['placeHolder'] : 'Select ' + facet['name'];
            facetObj['default'] = this.config[facet['name']] && this.config[facet['name']]['default'] ? this.config[facet['name']]['default'] : '';
            facetObj['data'] = [];
            facet['values'].forEach((/**
             * @param {?} facetValue
             * @return {?}
             */
            facetValue => {
                facetObj['data'].push({
                    label: facetValue['name'],
                    value: facetValue['name']
                });
            }));
            this.formattedFacets.push(facetObj);
            this.formattedFacets.sort((/**
             * @param {?} a
             * @param {?} b
             * @return {?}
             */
            (a, b) => a.index - b.index));
        }));
    }
}
FiltersComponent.decorators = [
    { type: Component, args: [{
                selector: 'sb-filters',
                template: "<div *ngIf=\"type === FilterType.FACET\">\n  <div *ngFor=\"let facet of formattedFacets\">\n\n    <!-- Start of Dropdown -->\n    <sb-dropdown *ngIf=\"facet.type === 'dropdown'\" [type]=\"type\" [label]=\"facet.label\" [options]=\"facet\"\n      [placeHolder]=\"facet.placeHolder\" [default]=\"facet.default\" [styleClass]=\"styleClass\"\n      (onChangeFilter)=\"selectedFilter.emit($event)\">\n    </sb-dropdown>\n    <!-- End of Dropdown -->\n\n    <!-- Start of pills -->\n    <div *ngIf=\"facet.type === 'pills'\">\n      <sb-pills [label]=\"facet.label\" [options]=\"facet\" [styleClass]=\"styleClass\"\n        (onChangeFilter)=\"selectedFilter.emit($event)\"></sb-pills>\n    </div>\n    <!-- End of pills -->\n\n  </div>\n</div>",
                styles: [""]
            }] }
];
/** @nocollapse */
FiltersComponent.ctorParameters = () => [];
FiltersComponent.propDecorators = {
    type: [{ type: Input }],
    facets: [{ type: Input }],
    config: [{ type: Input }],
    styleClass: [{ type: Input }],
    selectedFilter: [{ type: Output }]
};
if (false) {
    /** @type {?} */
    FiltersComponent.prototype.type;
    /** @type {?} */
    FiltersComponent.prototype.facets;
    /** @type {?} */
    FiltersComponent.prototype.config;
    /** @type {?} */
    FiltersComponent.prototype.styleClass;
    /** @type {?} */
    FiltersComponent.prototype.selectedFilter;
    /** @type {?} */
    FiltersComponent.prototype.FilterType;
    /** @type {?} */
    FiltersComponent.prototype.formGroup;
    /** @type {?} */
    FiltersComponent.prototype.formattedFacets;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmlsdGVycy5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9jb21tb24tZm9ybS1lbGVtZW50cy8iLCJzb3VyY2VzIjpbImxpYi9maWx0ZXJzL2ZpbHRlcnMuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBVSxLQUFLLEVBQUUsTUFBTSxFQUFFLFlBQVksRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUcvRSxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sdUJBQXVCLENBQUM7QUFPbkQsTUFBTSxPQUFPLGdCQUFnQjtJQVkzQjtRQVRTLFdBQU0sR0FBUSxFQUFFLENBQUM7UUFHaEIsbUJBQWMsR0FBc0IsSUFBSSxZQUFZLEVBQUUsQ0FBQztRQUNqRSxlQUFVLEdBQUcsVUFBVSxDQUFDO1FBR3hCLG9CQUFlLEdBQVEsRUFBRSxDQUFDO0lBRzFCLENBQUM7Ozs7SUFFRCxRQUFRO1FBQ04sSUFBSSxDQUFDLFlBQVksRUFBRSxDQUFDO0lBQ3RCLENBQUM7Ozs7SUFFRCxZQUFZO1FBQ1YsSUFBSSxDQUFDLE1BQU0sQ0FBQyxPQUFPOzs7OztRQUFDLENBQUMsS0FBSyxFQUFFLEtBQUssRUFBRSxFQUFFOztnQkFDL0IsUUFBUSxHQUFHLEVBQUU7WUFDakIsUUFBUSxDQUFDLE1BQU0sQ0FBQyxHQUFVLEtBQUssQ0FBQyxNQUFNLENBQUMsQ0FBQztZQUN4QyxRQUFRLENBQUMsTUFBTSxDQUFDLEdBQVUsSUFBSSxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUMsTUFBTSxDQUFDLENBQUMsSUFBSSxJQUFJLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsQ0FBQyxVQUFVLENBQUM7WUFDN0ksUUFBUSxDQUFDLE9BQU8sQ0FBQyxHQUFTLElBQUksQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDLE1BQU0sQ0FBQyxDQUFDLElBQUksSUFBSSxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDO1lBQzFJLFFBQVEsQ0FBQyxPQUFPLENBQUMsR0FBUyxJQUFJLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxNQUFNLENBQUMsQ0FBQyxJQUFJLElBQUksQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQyxNQUFNLENBQUMsQ0FBQztZQUNsSixRQUFRLENBQUMsYUFBYSxDQUFDLEdBQUcsSUFBSSxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUMsTUFBTSxDQUFDLENBQUMsSUFBSSxJQUFJLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLGFBQWEsQ0FBQyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLGFBQWEsQ0FBQyxDQUFDLENBQUMsQ0FBQyxTQUFTLEdBQUcsS0FBSyxDQUFDLE1BQU0sQ0FBQyxDQUFDO1lBRTFLLFFBQVEsQ0FBQyxTQUFTLENBQUMsR0FBTyxJQUFJLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxNQUFNLENBQUMsQ0FBQyxJQUFJLElBQUksQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQztZQUUzSSxRQUFRLENBQUMsTUFBTSxDQUFDLEdBQUcsRUFBRSxDQUFDO1lBQ3RCLEtBQUssQ0FBQyxRQUFRLENBQUMsQ0FBQyxPQUFPOzs7O1lBQUMsVUFBVSxDQUFDLEVBQUU7Z0JBQ25DLFFBQVEsQ0FBQyxNQUFNLENBQUMsQ0FBQyxJQUFJLENBQUM7b0JBQ3BCLEtBQUssRUFBRSxVQUFVLENBQUMsTUFBTSxDQUFDO29CQUN6QixLQUFLLEVBQUUsVUFBVSxDQUFDLE1BQU0sQ0FBQztpQkFDMUIsQ0FBQyxDQUFDO1lBQ0wsQ0FBQyxFQUFDLENBQUM7WUFDSCxJQUFJLENBQUMsZUFBZSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQztZQUNwQyxJQUFJLENBQUMsZUFBZSxDQUFDLElBQUk7Ozs7O1lBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUMsS0FBSyxHQUFHLENBQUMsQ0FBQyxLQUFLLEVBQUMsQ0FBQztRQUN6RCxDQUFDLEVBQUMsQ0FBQztJQUNMLENBQUM7OztZQTdDRixTQUFTLFNBQUM7Z0JBQ1QsUUFBUSxFQUFFLFlBQVk7Z0JBQ3RCLDZ1QkFBdUM7O2FBRXhDOzs7OzttQkFHRSxLQUFLO3FCQUNMLEtBQUs7cUJBQ0wsS0FBSzt5QkFDTCxLQUFLOzZCQUNMLE1BQU07Ozs7SUFKUCxnQ0FBc0I7O0lBQ3RCLGtDQUEwQjs7SUFDMUIsa0NBQXlCOztJQUN6QixzQ0FBNkI7O0lBQzdCLDBDQUFpRTs7SUFDakUsc0NBQXdCOztJQUN4QixxQ0FBcUI7O0lBRXJCLDJDQUEwQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgT25Jbml0LCBJbnB1dCwgT3V0cHV0LCBFdmVudEVtaXR0ZXIgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7Rm9ybUJ1aWxkZXIsIEZvcm1Hcm91cCwgVmFsaWRhdG9yc30gZnJvbSAnQGFuZ3VsYXIvZm9ybXMnO1xuXG5pbXBvcnQgeyBGaWx0ZXJUeXBlIH0gZnJvbSAnLi4vY29tbW9uLWZvcm0tY29uZmlnJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnc2ItZmlsdGVycycsXG4gIHRlbXBsYXRlVXJsOiAnLi9maWx0ZXJzLmNvbXBvbmVudC5odG1sJyxcbiAgc3R5bGVVcmxzOiBbJy4vZmlsdGVycy5jb21wb25lbnQuY3NzJ11cbn0pXG5leHBvcnQgY2xhc3MgRmlsdGVyc0NvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCB7XG5cbiAgQElucHV0KCkgdHlwZTogc3RyaW5nO1xuICBASW5wdXQoKSBmYWNldHM6IGFueSA9IFtdO1xuICBASW5wdXQoKSBjb25maWc/OiBvYmplY3Q7XG4gIEBJbnB1dCgpIHN0eWxlQ2xhc3M/OiBzdHJpbmc7XG4gIEBPdXRwdXQoKSBzZWxlY3RlZEZpbHRlcjogRXZlbnRFbWl0dGVyPGFueT4gPSBuZXcgRXZlbnRFbWl0dGVyKCk7XG4gIEZpbHRlclR5cGUgPSBGaWx0ZXJUeXBlO1xuICBmb3JtR3JvdXA6IEZvcm1Hcm91cDtcblxuICBmb3JtYXR0ZWRGYWNldHM6IGFueSA9IFtdO1xuXG4gIGNvbnN0cnVjdG9yKCkge1xuICB9XG5cbiAgbmdPbkluaXQoKSB7XG4gICAgdGhpcy5mb3JtYXRGYWNldHMoKTtcbiAgfVxuXG4gIGZvcm1hdEZhY2V0cyAoKSB7XG4gICAgdGhpcy5mYWNldHMuZm9yRWFjaCgoZmFjZXQsIGluZGV4KSA9PiB7XG4gICAgICBsZXQgZmFjZXRPYmogPSB7fTtcbiAgICAgIGZhY2V0T2JqWyduYW1lJ10gICAgICAgID0gZmFjZXRbJ25hbWUnXTtcbiAgICAgIGZhY2V0T2JqWyd0eXBlJ10gICAgICAgID0gdGhpcy5jb25maWdbZmFjZXRbJ25hbWUnXV0gJiYgdGhpcy5jb25maWdbZmFjZXRbJ25hbWUnXV1bJ3R5cGUnXSA/IHRoaXMuY29uZmlnW2ZhY2V0WyduYW1lJ11dWyd0eXBlJ10gOiAnZHJvcGRvd24nO1xuICAgICAgZmFjZXRPYmpbJ2luZGV4J10gICAgICAgPSB0aGlzLmNvbmZpZ1tmYWNldFsnbmFtZSddXSAmJiB0aGlzLmNvbmZpZ1tmYWNldFsnbmFtZSddXVsnaW5kZXgnXSA/IHRoaXMuY29uZmlnW2ZhY2V0WyduYW1lJ11dWydpbmRleCddIDogaW5kZXg7XG4gICAgICBmYWNldE9ialsnbGFiZWwnXSAgICAgICA9IHRoaXMuY29uZmlnW2ZhY2V0WyduYW1lJ11dICYmIHRoaXMuY29uZmlnW2ZhY2V0WyduYW1lJ11dWydsYWJlbCddID8gdGhpcy5jb25maWdbZmFjZXRbJ25hbWUnXV1bJ2xhYmVsJ10gOiBmYWNldFsnbmFtZSddO1xuICAgICAgZmFjZXRPYmpbJ3BsYWNlSG9sZGVyJ10gPSB0aGlzLmNvbmZpZ1tmYWNldFsnbmFtZSddXSAmJiB0aGlzLmNvbmZpZ1tmYWNldFsnbmFtZSddXVsncGxhY2VIb2xkZXInXSA/IHRoaXMuY29uZmlnW2ZhY2V0WyduYW1lJ11dWydwbGFjZUhvbGRlciddIDogJ1NlbGVjdCAnICsgZmFjZXRbJ25hbWUnXTtcblxuICAgICAgZmFjZXRPYmpbJ2RlZmF1bHQnXSAgICAgPSB0aGlzLmNvbmZpZ1tmYWNldFsnbmFtZSddXSAmJiB0aGlzLmNvbmZpZ1tmYWNldFsnbmFtZSddXVsnZGVmYXVsdCddID8gdGhpcy5jb25maWdbZmFjZXRbJ25hbWUnXV1bJ2RlZmF1bHQnXSA6ICcnO1xuICAgICAgXG4gICAgICBmYWNldE9ialsnZGF0YSddID0gW107XG4gICAgICBmYWNldFsndmFsdWVzJ10uZm9yRWFjaChmYWNldFZhbHVlID0+IHtcbiAgICAgICAgZmFjZXRPYmpbJ2RhdGEnXS5wdXNoKHtcbiAgICAgICAgICBsYWJlbDogZmFjZXRWYWx1ZVsnbmFtZSddLFxuICAgICAgICAgIHZhbHVlOiBmYWNldFZhbHVlWyduYW1lJ11cbiAgICAgICAgfSk7XG4gICAgICB9KTtcbiAgICAgIHRoaXMuZm9ybWF0dGVkRmFjZXRzLnB1c2goZmFjZXRPYmopO1xuICAgICAgdGhpcy5mb3JtYXR0ZWRGYWNldHMuc29ydCgoYSwgYikgPT4gYS5pbmRleCAtIGIuaW5kZXgpO1xuICAgIH0pO1xuICB9XG59XG4iXX0=