{"version":3,"file":"sidebar-sibling.js","sourceRoot":"","sources":["../../../../src/modules/sidebar/components/sidebar-sibling.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,KAAK,EAAE,WAAW,EAAE,YAAY,EAAE,UAAU,EAAE,SAAS,EAAE,MAAM,eAAe,CAAC;AACnG,OAAO,EAAkB,iBAAiB,EAAE,MAAM,6BAA6B,CAAC;;IA+C5E,2BAAoB,SAAmB,EAAU,QAAmB;QAAhD,cAAS,GAAT,SAAS,CAAU;QAAU,aAAQ,GAAR,QAAQ,CAAW;QAChE,IAAI,CAAC,mBAAmB,GAAG,KAAK,CAAC;QAEjC,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;KAC/B;IArCD,sBAAW,sCAAO;aAAlB;YACI,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC;SACxB;aAED,UAAmB,OAAsB;YAAzC,iBAKC;YAJG,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;YAExB,UAAU,CAAC,cAAM,OAAA,KAAI,CAAC,eAAe,EAAE,EAAtB,CAAsB,CAAC,CAAC;YACzC,IAAI,CAAC,QAAQ,CAAC,eAAe,CAAC,SAAS,CAAC,cAAM,OAAA,KAAI,CAAC,eAAe,EAAE,EAAtB,CAAsB,CAAC,CAAC;SACzE;;;OAPA;0BAaU,wCAAS;;YAChB,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;gBAChB,MAAM,CAAC,KAAK,CAAC;aAChB;YACD,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC;;;;;0BAIvB,uCAAQ;;YACf,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;gBAChB,MAAM,CAAC,KAAK,CAAC;aAChB;YACD,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,SAAS,IAAI,IAAI,CAAC,mBAAmB,CAAC;;;;;IAYtD,2CAAe,GAAvB;QACI,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,aAAa,EAAE,WAAW,CAAC,CAAC;QACrE,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,aAAa,EAAE,mBAAmB,CAAC,CAAC;QAE7E,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,SAAS;YACtB,IAAI,CAAC,OAAO,CAAC,UAAU,KAAK,iBAAiB,CAAC,OAAO;YACrD,IAAI,CAAC,OAAO,CAAC,UAAU,KAAK,iBAAiB,CAAC,SAAS,CAAC,CAAC,CAAC;YAE1D,IAAM,SAAS,GAAG,iBAAe,IAAI,CAAC,OAAO,CAAC,KAAK,YAAO,IAAI,CAAC,OAAO,CAAC,MAAM,WAAQ,CAAC;YACtF,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,aAAa,EAAE,WAAW,EAAE,SAAS,CAAC,CAAC;YAC7E,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,aAAa,EAAE,mBAAmB,EAAE,SAAS,CAAC,CAAC;SACxF;KACJ;IAGM,mCAAO,aAAC,KAAgB;QAC3B,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,SAAS,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC,CAAC;YACxD,IAAI,CAAC,OAAO,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;SACvC;;;gBArER,SAAS,SAAC;oBACP,QAAQ,EAAE,qBAAqB;oBAC/B,QAAQ,EAAE,2BAA2B;oBACrC,MAAM,EAAE,CAAC,qCAIZ,CAAC;iBACD;;;;gBAXiE,SAAS;gBAArB,UAAU;;;wCA0B3D,KAAK;8BAGL,WAAW,SAAC,eAAe;6BAQ3B,WAAW,SAAC,cAAc;oCAQ1B,WAAW,SAAC,cAAc;4BAuB1B,YAAY,SAAC,OAAO,EAAE,CAAC,QAAQ,CAAC;;4BApErC;;SAYa,iBAAiB","sourcesContent":["import { Component, Input, HostBinding, HostListener, ElementRef, Renderer2 } from \"@angular/core\";\nimport { SidebarService, SidebarTransition } from \"../services/sidebar.service\";\n\n@Component({\n    selector: \"sui-sidebar-sibling\",\n    template: `<ng-content></ng-content>`,\n    styles: [`\n:host {\n    display: block;\n}\n`]\n})\nexport class SuiSidebarSibling {\n    private _service:SidebarService;\n\n    public get service():SidebarService {\n        return this._service;\n    }\n\n    public set service(service:SidebarService) {\n        this._service = service;\n\n        setTimeout(() => this.updateTransform());\n        this._service.isVisibleChange.subscribe(() => this.updateTransform());\n    }\n\n    @Input()\n    public isDimmedWhenVisible:boolean;\n\n    @HostBinding(\"class.visible\")\n    public get isVisible():boolean {\n        if (!this.service) {\n            return false;\n        }\n        return this.service.isVisible;\n    }\n\n    @HostBinding(\"class.dimmed\")\n    public get isDimmed():boolean {\n        if (!this.service) {\n            return false;\n        }\n        return this.service.isVisible && this.isDimmedWhenVisible;\n    }\n\n    @HostBinding(\"class.pusher\")\n    private _siblingClasses:boolean;\n\n    constructor(private _renderer:Renderer2, private _element:ElementRef) {\n        this.isDimmedWhenVisible = false;\n\n        this._siblingClasses = true;\n    }\n\n    private updateTransform():void {\n        this._renderer.removeStyle(this._element.nativeElement, \"transform\");\n        this._renderer.removeStyle(this._element.nativeElement, \"-webkit-transform\");\n\n        if (this.service.isVisible &&\n            this.service.transition !== SidebarTransition.Overlay &&\n            this.service.transition !== SidebarTransition.ScaleDown) {\n\n            const translate = `translate3d(${this.service.width}px, ${this.service.height}px, 0)`;\n            this._renderer.setStyle(this._element.nativeElement, \"transform\", translate);\n            this._renderer.setStyle(this._element.nativeElement, \"-webkit-transform\", translate);\n        }\n    }\n\n    @HostListener(\"click\", [\"$event\"])\n    public onClick(event:MouseEvent):void {\n        if (this.service.isVisible && !this.service.wasJustOpened) {\n            this.service.setVisibleState(false);\n        }\n    }\n}\n"]}