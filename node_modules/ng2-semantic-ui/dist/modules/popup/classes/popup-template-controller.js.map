{"version":3,"file":"popup-template-controller.js","sourceRoot":"","sources":["../../../../src/modules/popup/classes/popup-template-controller.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,OAAO,EAAE,WAAW,EAAyB,MAAM,eAAe,CAAC;AACnE,OAAO,EAAE,kBAAkB,EAAU,MAAM,oBAAoB,CAAC;AAEhE,OAAO,EAAE,WAAW,EAAgB,MAAM,gBAAgB,CAAC;AAE3D,IAAM,WAAW,GAAG,WAAW,CAAC;AAWhC,IAAA;IAA4C,uCAAW;;;;8BAhBvD;EAgB4C,WAAW,EAGtD,CAAA;AAHD,+BAGC;AAED,IAAA;IAAmD,8CAAkB;IAIjE,oCAAY,QAAkB,EAClB,OAAkB,EAClB,gBAAoC,EACpC,MAAkB;eAE1B,kBAAM,QAAQ,EAAE,OAAO,EAAE,gBAAgB,EAAE,MAAM,CAAC;KACrD;IAEM,8CAAS,GAAhB,UAAiB,MAA+B;QAC5C,iBAAM,SAAS,YAAC,MAAM,CAAC,CAAC;QAExB,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;YACT,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC;YAChC,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC;SACjC;KACJ;IAEM,yCAAI,GAAX;;QAEI,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;YAChB,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC,KAAK,EAAE,CAAC;YAEnC,IAAI,CAAC,iBAAiB,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,eAAe,EAAE,IAAI,CAAC,QAAQ,EAAE;gBACzE,SAAS,EAAE,IAAI,CAAC,KAAK;gBACrB,OAAO,EAAE,IAAI,CAAC,OAAO;aACxB,CAAC,CAAC;SACN;QAED,iBAAM,IAAI,WAAE,CAAC;KAChB;qCAtDL;EAqBmD,kBAAkB,EAkCpE,CAAA;AAlCD,sCAkCC","sourcesContent":["import { TemplateRef, Renderer2, ElementRef } from \"@angular/core\";\nimport { SuiPopupController, IPopup } from \"./popup-controller\";\nimport { ITemplateRefContext, SuiComponentFactory, IImplicitContext } from \"../../../misc/util\";\nimport { PopupConfig, IPopupConfig } from \"./popup-config\";\n\nconst templateRef = TemplateRef;\n\nexport interface ITemplatePopupContext<T> extends IImplicitContext<IPopup> {\n    context?:T;\n}\n\nexport interface ITemplatePopupConfig<T> extends IPopupConfig {\n    template?:TemplateRef<ITemplatePopupContext<T>>;\n    context?:T;\n}\n\nexport class TemplatePopupConfig<T> extends PopupConfig {\n    public template?:TemplateRef<ITemplatePopupContext<T>>;\n    public context?:T;\n}\n\nexport class SuiPopupTemplateController<T> extends SuiPopupController {\n    public template?:TemplateRef<ITemplatePopupContext<T>>;\n    public context?:T;\n\n    constructor(renderer:Renderer2,\n                element:ElementRef,\n                componentFactory:SuiComponentFactory,\n                config:PopupConfig) {\n\n        super(renderer, element, componentFactory, config);\n    }\n\n    public configure(config?:ITemplatePopupConfig<T>):void {\n        super.configure(config);\n\n        if (config) {\n            this.template = config.template;\n            this.context = config.context;\n        }\n    }\n\n    public open():void {\n        // If there is a template, inject it into the view.\n        if (this.template) {\n            this.popup.templateSibling.clear();\n\n            this._componentFactory.createView(this.popup.templateSibling, this.template, {\n                $implicit: this.popup,\n                context: this.context\n            });\n        }\n\n        super.open();\n    }\n}\n"]}