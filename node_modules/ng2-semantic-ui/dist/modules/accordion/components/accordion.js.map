{"version":3,"file":"accordion.js","sourceRoot":"","sources":["../../../../src/modules/accordion/components/accordion.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,KAAK,EAAE,WAAW,EAAE,eAAe,EAAE,SAAS,EAAoB,MAAM,eAAe,CAAC;AAC5G,OAAO,EAAE,iBAAiB,EAAE,MAAM,mBAAmB,CAAC;AACtD,OAAO,EAAE,mBAAmB,EAAE,MAAM,+BAA+B,CAAC;;IAgDhE;;QAEI,IAAI,CAAC,QAAQ,GAAG,IAAI,mBAAmB,EAAE,CAAC;QAE1C,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;KAChC;0BA5BU,qCAAW;;YAClB,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC;;aAGrC,UAAuB,KAAa;YAChC,IAAI,CAAC,QAAQ,CAAC,WAAW,GAAG,KAAK,CAAC;SACrC;;;;0BAGU,oCAAU;uBAAC,UAAiB;YACnC,IAAI,CAAC,QAAQ,CAAC,UAAU,GAAG,UAAU,CAAC;;;;;0BAI/B,4CAAkB;uBAAC,QAAe;YACzC,IAAI,CAAC,QAAQ,CAAC,kBAAkB,GAAG,QAAQ,CAAC;;;;;IAezC,yCAAkB,GAAzB;QAAA,iBAKC;QAJG,IAAI,CAAC,YAAY,EAAE,CAAC;;QAGpB,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,SAAS,CAAC,cAAM,OAAA,KAAI,CAAC,YAAY,EAAE,EAAnB,CAAmB,CAAC,CAAC;KAC7D;IAEM,mCAAY,GAAnB;QAAA,iBAEC;QADG,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,UAAA,CAAC,IAAI,OAAA,KAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAzB,CAAyB,CAAC,CAAC;KACxD;;gBA9DJ,SAAS,SAAC;oBACP,QAAQ,EAAE,eAAe;oBACzB,QAAQ,EAAE,+BAEb;oBACG,MAAM,EAAE,CAAC,gMAUZ,CAAC;iBACD;;;;;qCAEI,WAAW,SAAC,UAAU,cACtB,WAAW,SAAC,iBAAiB;gCAG7B,KAAK;+BASL,KAAK;uCAKL,KAAK;4BAOL,eAAe,SAAC,iBAAiB;;uBA/CtC;;SAqBa,YAAY","sourcesContent":["import { Component, Input, HostBinding, ContentChildren, QueryList, AfterContentInit } from \"@angular/core\";\nimport { SuiAccordionPanel } from \"./accordion-panel\";\nimport { SuiAccordionService } from \"../services/accordion.service\";\n\n@Component({\n    selector: \"sui-accordion\",\n    template: `\n<ng-content></ng-content>\n`,\n    styles: [`\n/* Fix for general styling issues */\n:host {\n    display: block;\n}\n\n/* Fix for styled border issue */\n:host.styled sui-accordion-panel:first-child .title {\n    border-top: none\n}\n`]\n})\nexport class SuiAccordion implements AfterContentInit {\n    @HostBinding(\"class.ui\")\n    @HostBinding(\"class.accordion\")\n    public accordionClasses:boolean;\n\n    @Input()\n    public get closeOthers():boolean {\n        return this._service.closeOthers;\n    }\n\n    public set closeOthers(value:boolean) {\n        this._service.closeOthers = value;\n    }\n\n    @Input()\n    public set transition(transition:string) {\n        this._service.transition = transition;\n    }\n\n    @Input()\n    public set transitionDuration(duration:number) {\n        this._service.transitionDuration = duration;\n    }\n\n    protected _service:SuiAccordionService;\n\n    @ContentChildren(SuiAccordionPanel)\n    protected _panels:QueryList<SuiAccordionPanel>;\n\n    constructor() {\n        // Accordion service is unique to each set of panels.\n        this._service = new SuiAccordionService();\n\n        this.accordionClasses = true;\n    }\n\n    public ngAfterContentInit():void {\n        this.updatePanels();\n\n        // Reconnect panels after they have updated.\n        this._panels.changes.subscribe(() => this.updatePanels());\n    }\n\n    public updatePanels():void {\n        this._panels.forEach(p => this._service.addPanel(p));\n    }\n}\n"]}