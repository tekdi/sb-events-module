{"version":3,"file":"custom-value-accessor.js","sourceRoot":"","sources":["../../../../src/misc/util/helpers/custom-value-accessor.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,iBAAiB,EAAwB,MAAM,gBAAgB,CAAC;AACzE,OAAO,EAAE,UAAU,EAAwB,MAAM,eAAe,CAAC;AAMjE,IAAA;IACI,6BAAoB,KAAO;QAAP,UAAK,GAAL,KAAK,CAAE;wBAET,eAAQ;yBACP,eAAQ;KAHI;IAKxB,wCAAU,GAAjB,UAAkB,KAAO;QACrB,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;KAChC;IAEM,8CAAgB,GAAvB,UAAwB,EAAa;QACjC,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;KACtB;IAEM,+CAAiB,GAAxB,UAAyB,EAAa;QAClC,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;KACvB;8BAvBL;IAwBC,CAAA;AAjBD,+BAiBC;AAQD,MAAM,qCAAqC,IAAa;IACpD,MAAM,CAAC;QACH,OAAO,EAAE,iBAAiB;QAC1B,WAAW,EAAE,UAAU,CAAC,cAAM,OAAA,IAAI,EAAJ,CAAI,CAAC;QACnC,KAAK,EAAE,IAAI;KACd,CAAC;CACL","sourcesContent":["import { NG_VALUE_ACCESSOR, ControlValueAccessor } from \"@angular/forms\";\nimport { forwardRef, InjectionToken, Type } from \"@angular/core\";\n\nexport interface ICustomValueAccessorHost<T> {\n    writeValue(value:T):void;\n}\n\nexport class CustomValueAccessor<U, T extends ICustomValueAccessorHost<U>> implements ControlValueAccessor {\n    constructor(private _host:T) {}\n\n    public onChange = () => {};\n    public onTouched = () => {};\n\n    public writeValue(value:U):void {\n        this._host.writeValue(value);\n    }\n\n    public registerOnChange(fn:() => void):void {\n        this.onChange = fn;\n    }\n\n    public registerOnTouched(fn:() => void):void {\n        this.onTouched = fn;\n    }\n}\n\nexport interface IValueAccessorProvider {\n    provide:InjectionToken<ControlValueAccessor>;\n    useExisting:Type<any>;\n    multi:boolean;\n}\n\nexport function customValueAccessorFactory(type:Function):IValueAccessorProvider {\n    return {\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: forwardRef(() => type),\n        multi: true\n    };\n}\n"]}